[
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "R for Fisheries Analyses and Tasks",
    "section": "",
    "text": "Order By\n       Default\n         \n          Modified - Oldest\n        \n         \n          Modified - Newest\n        \n         \n          Published - Oldest\n        \n         \n          Published - Newest\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n\n\n\n\n\n\nReplace fitPlot() with ggplot\n\n\n12 min\n\n\nUsing ggplot() as an alternative to fitPlot() which was removed from FSA.\n\n\n\nDerek H. Ogle\n\n\nMay 25, 2021\n\n\n\n\n\nDec 27, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAFS Style in ggplot2 Figures\n\n\n16 min\n\n\nSuggestions for the Glassic et al. (2019) process for modifying ggplot2 graphs to match the AFS Style Guide.\n\n\n\nDerek H. Ogle\n\n\nDec 22, 2022\n\n\n\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nMean Weights at Ages From Lengths\n\n\n15 min\n\n\nDemonstrates concerns and corrections with estimating mean weight from observed lengths and a weight-length relationship.\n\n\n\nDerek H. Ogle\n\n\nAug 9, 2017\n\n\n\n\n\nDec 22, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nReplace filterD()\n\n\n1 min\n\n\nAn alternative to filterD() which was removed from FSA.\n\n\n\nDerek H. Ogle\n\n\nMay 26, 2021\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nReplace compIntercepts() with emmeans()\n\n\n6 min\n\n\nUsing emmeans() from emmeans as an alternative to compIntercepts() which was removed from FSA.\n\n\n\nDerek H. Ogle\n\n\nMay 12, 2021\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nReplace compSlopes() with emtrends()\n\n\n5 min\n\n\nUsing emtrends() from emmeans as an alternative to compSlopes() which was removed from FSA.\n\n\n\nDerek H. Ogle\n\n\nMay 11, 2021\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nCollapsing Categories or Values\n\n\n7 min\n\n\nHow to collapse categories or values into other categories\n\n\n\nDerek H. Ogle\n\n\nMar 30, 2018\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nComputing SE for PSD indices\n\n\n1 min\n\n\nDemonstrate how to compute SE for PSD indices.\n\n\n\nDerek H. Ogle\n\n\nDec 9, 2016\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nTwo New Cumulative Sum Functions\n\n\n1 min\n\n\nIntroducing the missing current and reverse cumulative sum functions.\n\n\n\nDerek H. Ogle\n\n\nSep 6, 2015\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlots of Back-Calculated Lengths-At-Age\n\n\n8 min\n\n\nInitial thoughts on displaying back-calculated lengths-at-age.\n\n\n\nDerek H. Ogle\n\n\nNov 7, 2017\n\n\n\n\n\nDec 18, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nBland-Altman Plot for Age Comparisons?\n\n\n10 min\n\n\nExplore the use of Bland-Altman plots for comparing paired age estimates.\n\n\n\nDerek H. Ogle\n\n\nApr 20, 2017\n\n\n\n\n\nDec 18, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nStock-Recruitment Graphing Questions\n\n\n7 min\n\n\nA reply to a user’s questions with respect to stock-recruitment function graphics.\n\n\n\nDerek H. Ogle\n\n\nDec 12, 2017\n\n\n\n\n\nDec 18, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nReplace residPlot() with ggplot\n\n\n8 min\n\n\nUsing ggplot() as an alternative to residPlot() which was removed from FSA.\n\n\n\nDerek H. Ogle\n\n\nJun 1, 2021\n\n\n\n\n\nDec 14, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nvon Bertalanffy Growth Plots II\n\n\n19 min\n\n\nHow to plot multiple von Bertalanffy growth models with data.\n\n\n\nDerek H. Ogle\n\n\nJan 2, 2019\n\n\n\n\n\nDec 13, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nvon Bertalanffy Growth Plots I\n\n\n10 min\n\n\nHow to plot one von Bertalanffy growth model with data.\n\n\n\nDerek H. Ogle\n\n\nDec 31, 2019\n\n\n\n\n\nDec 12, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nPauly et al. (1992) Seasonal Cessation Growth Model\n\n\n2 min\n\n\nAnnouncement of an algorithm to fit the Pauly et al. (1992) seasonal cessation growth model\n\n\n\nDerek H. Ogle\n\n\nNov 11, 2016\n\n\n\n\n\nDec 8, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nRidgeline Length Frequency Plots\n\n\n2 min\n\n\nHow to visualize multiple length frequencies as ridgline plots.\n\n\n\nDerek H. Ogle\n\n\nJul 28, 2017\n\n\n\n\n\nDec 7, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAge Comparison Results for Individual Fish\n\n\n1 min\n\n\nDemonstrates how to extract age comparison results for individual fish from the object returned by ageComparisons().\n\n\n\nDerek H. Ogle\n\n\nSep 5, 2015\n\n\n\n\n\nDec 7, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAge Bias Plots in ggplot2\n\n\n8 min\n\n\nFlexibly construct age bias and age difference plots using ggplot2\n\n\n\nMichael Lant\n\n\nMar 15, 2021\n\n\n\n\n\nDec 7, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nLength Frequency Histograms in ggplot2\n\n\n5 min\n\n\nFlexibly construct length frequency histograms using ggplot2\n\n\n\nDerek H. Ogle\n\n\nDec 28, 2019\n\n\n\n\n\nDec 7, 2022\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/posts/2015-9-5_Age_Comparison_Results/index.html",
    "href": "blog/posts/2015-9-5_Age_Comparison_Results/index.html",
    "title": "Age Comparison Results for Individual Fish",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below. I also set the default ggplot theme to theme_bw() for a classic “black-and-white” plot (rather than the default plot with a gray background).\n\n\n\nlibrary(FSA)           # for WhitefishLC, agePrecision(), headtail()\nlibrary(dplyr)         # for arrange(), filter()\nlibrary(ggplot2)\ntheme_set(theme_bw())\n\n \nAn FSA user asked if there was a way to work with the age comparison results for individual fish. In particular, this user wanted to identify each fish for which the individual CV values from comparing two independent age estimates was greater than 10. This is fairly easy to do with an understanding of the results returned from agePrecision(). Below is an example using the WhitefishLC data found in the FSA package.11 These data are automatically loaded with library(FSA).\nThese data contain, among other things, ages assigned by two readers examining otoliths in (otolith1 and otolith2).22 headtail() from FSA shows the first and last three rows of a data frame. It is used here primarily to save space.\n\nheadtail(WhitefishLC)\n\n#R|      fishID  tl scale1 scale2 scaleC finray1 finray2 finrayC otolith1 otolith2\n#R|  1        1 345      3      3      3       3       3       3        3        3\n#R|  2        2 334      4      3      4       3       3       3        3        3\n#R|  3        3 348      7      5      6       3       3       3        3        3\n#R|  149    214 599     14     16     15      14      14      14       16       16\n#R|  150    216 636      8     10      9      10       8      10       15       15\n#R|  151    218 551      5      7      6       6       9       8       13       13\n#R|      otolithC\n#R|  1          3\n#R|  2          3\n#R|  3          3\n#R|  149       16\n#R|  150       15\n#R|  151       13\n\n\nA variety of computations on these paired age estimates are performed with agePrecision().3 The structure of the saved object shows several items returned in a list.3 See the agePrecision() documentation for full details.\n\nap1 <- agePrecision(~otolith1+otolith2,data=WhitefishLC)\nstr(ap1)\n\n#R|  List of 14\n#R|   $ detail   :'data.frame': 151 obs. of  12 variables:\n#R|    ..$ otolith1: int [1:151] 3 3 3 3 3 6 9 11 3 1 ...\n#R|    ..$ otolith2: int [1:151] 3 3 3 3 3 5 10 12 4 1 ...\n#R|    ..$ mean    : num [1:151] 3 3 3 3 3 5.5 9.5 11.5 3.5 1 ...\n#R|    ..$ median  : num [1:151] 3 3 3 3 3 5.5 9.5 11.5 3.5 1 ...\n#R|    ..$ mode    : int [1:151] 3 3 3 3 3 NA NA NA NA 1 ...\n#R|    ..$ SD      : num [1:151] 0 0 0 0 0 ...\n#R|    ..$ CV      : num [1:151] 0 0 0 0 0 ...\n#R|    ..$ CV2     : num [1:151] 0 0 0 0 0 ...\n#R|    ..$ AD      : num [1:151] 0 0 0 0 0 0.5 0.5 0.5 0.5 0 ...\n#R|    ..$ PE      : num [1:151] 0 0 0 0 0 ...\n#R|    ..$ PE2     : num [1:151] 0 0 0 0 0 ...\n#R|    ..$ D       : num [1:151] 0 0 0 0 0 ...\n#R|   $ rawdiff  : 'table' int [1:5(1d)] 3 27 94 21 6\n#R|    ..- attr(*, \"dimnames\")=List of 1\n#R|    .. ..$ : chr [1:5] \"-2\" \"-1\" \"0\" \"1\" ...\n#R|   $ absdiff  : 'table' int [1:3(1d)] 94 48 9\n#R|    ..- attr(*, \"dimnames\")=List of 1\n#R|    .. ..$ : chr [1:3] \"0\" \"1\" \"2\"\n#R|   $ ASD      : num 0.309\n#R|   $ ACV      : num 4.72\n#R|   $ ACV2     : num 4.72\n#R|   $ AAD      : num 0.219\n#R|   $ APE      : num 3.34\n#R|   $ APE2     : num 3.34\n#R|   $ AD       : num 3.34\n#R|   $ PercAgree: num 62.3\n#R|   $ R        : int 2\n#R|   $ n        : int 151\n#R|   $ validn   : int 151\n#R|   - attr(*, \"class\")= chr \"agePrec\"\n\n\nFor this problem, the user wants to focus on the intermediate calculations for each individual fish, which, according to the the agePrecision() documentation, is in detail object.\n\nheadtail(ap1$detail)\n\n#R|      otolith1 otolith2 mean median mode SD CV CV2 AD PE PE2 D\n#R|  1          3        3    3      3    3  0  0   0  0  0   0 0\n#R|  2          3        3    3      3    3  0  0   0  0  0   0 0\n#R|  3          3        3    3      3    3  0  0   0  0  0   0 0\n#R|  149       16       16   16     16   16  0  0   0  0  0   0 0\n#R|  150       15       15   15     15   15  0  0   0  0  0   0 0\n#R|  151       13       13   13     13   13  0  0   0  0  0   0 0\n\n\nThe detail object is a data frame that can then be treated like any other data frame. For example, it can be sorted by ascending order of the CV value or filtered to find all fish that had a CV greater than 10.44 Here I usearrange() from dplyr to sort and filter() from dplyr to filter.\n\n## Sort by CV\ntmp <- ap1$detail |>\n  arrange(CV)\nheadtail(tmp)\n\n#R|      otolith1 otolith2 mean median mode        SD       CV      CV2  AD PE PE2\n#R|  1          3        3  3.0    3.0    3 0.0000000  0.00000  0.00000 0.0  0   0\n#R|  2          3        3  3.0    3.0    3 0.0000000  0.00000  0.00000 0.0  0   0\n#R|  3          3        3  3.0    3.0    3 0.0000000  0.00000  0.00000 0.0  0   0\n#R|  149        3        2  2.5    2.5   NA 0.7071068 28.28427 28.28427 0.5 20  20\n#R|  150        3        2  2.5    2.5   NA 0.7071068 28.28427 28.28427 0.5 20  20\n#R|  151        6        4  5.0    5.0   NA 1.4142136 28.28427 28.28427 1.0 20  20\n#R|       D\n#R|  1    0\n#R|  2    0\n#R|  3    0\n#R|  149 20\n#R|  150 20\n#R|  151 20\n\n## Filter by CV\ntmp2 <- ap1$detail |>\n  filter(CV>10)\nheadtail(tmp2)\n\n#R|     otolith1 otolith2 mean median mode        SD       CV      CV2  AD        PE\n#R|  1         6        5  5.5    5.5   NA 0.7071068 12.85649 12.85649 0.5  9.090909\n#R|  2         3        4  3.5    3.5   NA 0.7071068 20.20305 20.20305 0.5 14.285714\n#R|  3         2        3  2.5    2.5   NA 0.7071068 28.28427 28.28427 0.5 20.000000\n#R|  28        9       11 10.0   10.0   NA 1.4142136 14.14214 14.14214 1.0 10.000000\n#R|  29        9        7  8.0    8.0   NA 1.4142136 17.67767 17.67767 1.0 12.500000\n#R|  30        5        4  4.5    4.5   NA 0.7071068 15.71348 15.71348 0.5 11.111111\n#R|           PE2         D\n#R|  1   9.090909  9.090909\n#R|  2  14.285714 14.285714\n#R|  3  20.000000 20.000000\n#R|  28 10.000000 10.000000\n#R|  29 12.500000 12.500000\n#R|  30 11.111111 11.111111\n\n\nThe distribution of CV values can also be examined (Figure 1).\n\ncvdist <- ggplot(data=ap1$detail,aes(x=CV)) +\n  geom_histogram(binwidth=2.5,boundary=0,color=\"black\",fill=\"gray50\") +\n  scale_x_continuous(name=\"Coefficient of Variation\") +\n  scale_y_continuous(name=\"Frequency\",expand=expansion(mult=c(0,0.05))) +\n  geom_vline(xintercept=10,color=\"red\",linewidth=1,linetype=\"dashed\")\ncvdist\n\n\n\n\nFigure 1: Distribution of CV values for comparisons of readings of Lake Whitefish otoliths by two readers.\n\n\n\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{h.ogle2015,\n  author = {Derek H. Ogle},\n  title = {Age {Comparison} {Results} for {Individual} {Fish}},\n  date = {2015-09-05},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2015-9-5_Age_Comparison_Results},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDerek H. Ogle. 2015, September 5. Age\nComparison Results for Individual Fish."
  },
  {
    "objectID": "blog/posts/2015-9-6_Cumulative_Sums/index.html",
    "href": "blog/posts/2015-9-6_Cumulative_Sums/index.html",
    "title": "Two New Cumulative Sum Functions",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below.\n\n\n\nlibrary(FSA)   ## for pcumsum(), rcumsum()\n\n \n\nIntroduction\nIn fisheries analyses it is fairly common to compute the cumulative sum of values in a vector – i.e., all values before and including the current position in the vector. For example, the third value in the cumulative sum would be the sum of the first, second, and third values in the original vector. These types of cumulative sums are easily accomplished with cumsum() in base R.\n\nvec <- 1:10\n( cum <- cumsum(vec) )\n\n#R|   [1]  1  3  6 10 15 21 28 36 45 55\n\ncum[3]\n\n#R|  [1] 6\n\n\nSome applications in fisheries science (e.g., depletion estimators) require the cumulative sum NOT including the current value in the vector. For example, the third value in this case would be the sum of the first and second values in the original vector. These values may be computed by subtracting the original vector from the vector returned by cumsum().\n\ncum-vec\n\n#R|   [1]  0  1  3  6 10 15 21 28 36 45\n\n\nIn still other applications (e.g., proportional size distribution calculations) a cumulative sum from the RIGHT rather than the left is required. For example, the third value in this case would be the sum of the third, fourth, fifth, …, last values in the original vector. These values may be computed by reversing the order of the result from cumsum() that had been applied to the reverse order of the original vector.\n\nrev(cumsum(rev(vec)))\n\n#R|   [1] 55 54 52 49 45 40 34 27 19 10\n\n\n \n\n\nFSA Functions\nFor efficiency, these simple processes has been coded in pcumsum() and rcumsum() in FSA.\n\n## cumsum without the current value\n( pcum <- pcumsum(vec) )\n\n#R|   [1]  0  1  3  6 10 15 21 28 36 45\n\npcum[3]\n\n#R|  [1] 3\n\n## \"reverse\" (from the right) cumsum\n( rcum <- rcumsum(vec) )\n\n#R|   [1] 55 54 52 49 45 40 34 27 19 10\n\nrcum[3]\n\n#R|  [1] 52\n\n\nThe three types of cumulative sums are shown, along with the original vector, in the matrix below.\n\ncbind(vec,cum,pcum,rcum)\n\n#R|        vec cum pcum rcum\n#R|   [1,]   1   1    0   55\n#R|   [2,]   2   3    1   54\n#R|   [3,]   3   6    3   52\n#R|   [4,]   4  10    6   49\n#R|   [5,]   5  15   10   45\n#R|   [6,]   6  21   15   40\n#R|   [7,]   7  28   21   34\n#R|   [8,]   8  36   28   27\n#R|   [9,]   9  45   36   19\n#R|  [10,]  10  55   45   10\n\n\nThese two new functions are unlikely to change the world as we know it; however, I wanted to document them in this blog so that others could find them if needed.11 The function documentation is available here.\n \n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{h.ogle2015,\n  author = {Derek H. Ogle},\n  title = {Two {New} {Cumulative} {Sum} {Functions}},\n  date = {2015-09-06},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2015-9-6_Cumulative_Sums},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDerek H. Ogle. 2015, September 6. Two\nNew Cumulative Sum Functions."
  },
  {
    "objectID": "blog/posts/2016-11-11_Pauly-VBModel/index.html",
    "href": "blog/posts/2016-11-11_Pauly-VBModel/index.html",
    "title": "Pauly et al. (1992) Seasonal Cessation Growth Model",
    "section": "",
    "text": "Ogle (2017) described an algorithm for implementing the “seasonal cessation in growth model” of Pauly et al. (1992). Describing an algorithm for a growth model does not seem like a useful contribution to the literature, as fitting growth models is pretty standard fare for fisheries scientists. However, fitting the Pauly et al. (1992) model is complicated by the fact that the age data is modified by model parameters. This too may not seem particularly interesting given that \\(t_0\\) in the typical von Bertalanffy growth function (VBGF) also modifies the age variable (i.e., age-\\(t_0\\) appears in the VBGF equation). However, the modification of age in the Pauly et al. (1992) model is a shift AND a compression of the age variable, AND the degree of shift and compression is a function of age. This is different, and more complicated, than the simple shift along the age axis in the typical VBGF.\nAs I demonstrate in my note, the Pauly et al. (1992) model has, for all practical purposes, not been used in the fisheries literature. I believe this lack of use is largely attributable to lack of clarity in how to implement the model in computer code.1 My hope is that the algorithm in my note will clarify the implementation of this model. Fisheries scientists can then rigorously test whether this model provides any advantage over other growth models with a seasonal component.1 Pauly et al. (1992) did provide a brief description of their model, but not a detailed description of how the age variable was adjusted, and computer software for fitting their model, though that software, and its source code, have long been lost.\nFull R code implementin the algorithm is available here. Implementation of the algorithm depends on the FSA package, which is available on CRAN. Please let me know what you think.\n \n\n\n\n\n\nExample fitting of the Pauly et al. (1992) seasonal cessation growth model to Bonito length-at-age data.\n\n\n\n\n \n\n\n\n\n\n\n\n\nReferences\n\nOgle, D. H. 2017. An algorithm for the von Bertalanffy seasonal cessation in growth function of Pauly et al. (1992). Fisheries Research 185:1–5.\n\n\nPauly, D., M. Soriano-Bartz, J. Moreau, and A. Jarre-Teichmann. 1992. A new model accounting for seasonal cessation of growth in fishes. Australian Journal of Marine and Freshwater Research 43:1151–1156.\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{h.ogle2016,\n  author = {Derek H. Ogle},\n  title = {Pauly *Et Al.* (1992) {Seasonal} {Cessation} {Growth}\n    {Model}},\n  date = {2016-11-11},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2016-11-11_Pauly-VBModel},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDerek H. Ogle. 2016, November 11. Pauly\n*et al.* (1992) Seasonal Cessation Growth Model."
  },
  {
    "objectID": "blog/posts/2016-12-9_PSD_SE/index.html",
    "href": "blog/posts/2016-12-9_PSD_SE/index.html",
    "title": "Computing SE for PSD indices",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below.\n\n\n\nlibrary(FSA)   ## for psdAdd(), rcumsum(), headtail() \nlibrary(dplyr) ## for mutate(), filter()\n\n \nA reader of Ogle (2016) asked how to compute standard errors (SE) for the various PSD indices with the usual SE equation of a proportion (i.e., \\(\\sqrt{\\frac{p(1-p)}{n}}\\). I demonstrate this calculation in this post\n\n\n\n\n\n\nWarning\n\n\n\nI caution against using these standard errors to produce confidence intervals for PSD-X values. If confidence intervals are the end product for this analysis, then I suggest using the binomial or multinomial distribution methods described in Ogle (2016).\n\n\n \nI will use the same Inch Lake data from the Size Structure chapter of Ogle (2016), where I used psdAdd() (from FSA) to add a variable with the Gabelhouse length categories and eliminated all sub-stock size fish.11 this and next step is from this script) from Ogle (2016).\n\ninchAlls <- read.csv(\"http://derekogle.com/IFAR/scripts/InchLake1113.csv\") |>\n  mutate(gcat=psdAdd(tl,species)) |>\n  filter(gcat!=\"substock\") |>\n  droplevels()\n\n#R|  No known Gabelhouse (PSD) lengths for: Iowa Darter\n\nheadtail(inchAlls)\n\n#R|       gearType year       species  tl      gcat\n#R|  1        fyke 2012 Black Crappie 246   quality\n#R|  2        fyke 2012 Black Crappie 165     stock\n#R|  3        fyke 2012 Black Crappie 330 memorable\n#R|  1270     fyke 2013  Yellow Perch 348 memorable\n#R|  1271     fyke 2013  Yellow Perch 135     stock\n#R|  1272     fyke 2013  Yellow Perch 137     stock\n\n\nI then computed the PSD-X values as shown in Ogle (2016). These will be the proportions (i.e., \\(p\\)) in the SE calculations.\n\n( freq <- xtabs(~species+gcat,data=inchAlls) )\n\n#R|                   gcat\n#R|  species           stock quality preferred memorable\n#R|    Black Crappie      33      40         8        81\n#R|    Bluegill          571     199       223        43\n#R|    Largemouth Bass    26      36         0         0\n#R|    Pumpkinseed         5       2         0         0\n#R|    Yellow Perch        4       0         0         1\n\niPSDs <- prop.table(freq,margin=1)*100\n( PSDs <- t(apply(iPSDs,MARGIN=1,FUN=rcumsum)) )\n\n#R|                   gcat\n#R|  species           stock  quality preferred memorable\n#R|    Black Crappie     100 79.62963  54.93827 50.000000\n#R|    Bluegill          100 44.88417  25.67568  4.150579\n#R|    Largemouth Bass   100 58.06452   0.00000  0.000000\n#R|    Pumpkinseed       100 28.57143   0.00000  0.000000\n#R|    Yellow Perch      100 20.00000  20.00000 20.000000\n\n\nThe row sums from the freq table are the total number of fish (that are stock size or greater) and will be \\(n\\) in the SE calculations.\n\n( sums <- rowSums(freq) )\n\n#R|    Black Crappie        Bluegill Largemouth Bass     Pumpkinseed    Yellow Perch \n#R|              162            1036              62               7               5\n\n\nFinally, with these two results the SE for PSD-Q may be computed.\n\np <- PSDs[,\"quality\"]\nSEs <- sqrt(p*(100-p)/sums)\nround(SEs,1)\n\n#R|    Black Crappie        Bluegill Largemouth Bass     Pumpkinseed    Yellow Perch \n#R|              3.2             1.5             6.3            17.1            17.9\n\n\nAnd can be repeat for other size indices; e.g., for PSD-P.\n\np <- PSDs[,\"preferred\"]\nSEs <- sqrt(p*(100-p)/sums)\nround(SEs,1)\n\n#R|    Black Crappie        Bluegill Largemouth Bass     Pumpkinseed    Yellow Perch \n#R|              3.9             1.4             0.0             0.0            17.9\n\n\n \n\n\n\n\n\n\nNote\n\n\n\nThe SE formula is usually used for proportions (and then multiplied by 100 to get a SE for percentages). However, it can be shown algebraically to apply to percentages as well.\n\n\n \n\n\n\n\n\n\n\n\nReferences\n\nOgle, D. H. 2016. Introductory Fisheries Analyses with R. CRC Press, Boca Raton, FL.\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{h.ogle2016,\n  author = {Derek H. Ogle},\n  title = {Computing {SE} for {PSD} Indices},\n  date = {2016-12-09},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2016-12-9_PSD_SE},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDerek H. Ogle. 2016, December 9. Computing\nSE for PSD indices."
  },
  {
    "objectID": "blog/posts/2017-11-7_BackCalculationPlot/index.html",
    "href": "blog/posts/2017-11-7_BackCalculationPlot/index.html",
    "title": "Plots of Back-Calculated Lengths-At-Age",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below. I also set the default ggplot theme to theme_bw() for a classic “black-and-white” plot (rather than the default plot with a gray background).\n\n\n\nlibrary(FSA)      # for filterD(), headtail()\nlibrary(dplyr)    # for select(), arrange(), mutate(), group_by(), et al.\nlibrary(nlme)     # for nlme()\nlibrary(ggplot2)\ntheme_set(theme_bw())\n\n \n\nIntroduction\nOne reader commented on a past post via Twitter …\n\nNow that you solved the age-bias plot, how about the ‘best’ display of back-calculated length-at-age data, with VonB growth curve overlay?\n\nIn addition, I recently received a question related to the non-convergence of a hierarchical (mixed) model applied to fitting a von Bertalanffy growth function (VBGF) to back-calculated lengths at age. In exploring that question, I realized that a “good” plot of back-calculated lengths-at-age was needed to understand why the VBGF may (or may not) fit.\nThis post represents my initial attempts to visualize back-calculated lengths at age with what are basically spaghetti plots. Spaghetti plots show individual longitudinal traces for each subject (e.g., one example). Recently “spaghetti plots” were in the news to show modeled paths of hurricanes (e.g., I particularly enjoyed this critique).\n \n\n\nData\nIn this post, I examine back-calculated lengths (mm) at age for Walleye (Sander vitreus) captured from Lake Mille Lacs, Minnesota in late fall (September-October).1 These data were kindly provided by the Minnesota Department of Natural Resources, are available in FSAData, and were used extensively in Ogle et al. (2017). For simplicity of presentation here, these data were reduced (with filter()) to a single year and sex, several unneeded variables were removed (with select(), a new factored version of the estimated age variable was created (with mutate()), and the data were ordered by estimated, fish identification number, and back-calculated age.1 More details are here.\n\n## Get data\ndata(WalleyeML,package=\"FSAdata\")\n## Wrangle data\ndf <- WalleyeML |>\n  filter(Year==2002,Sex==\"F\") |>\n  select(-Year,-Sex,-Scale.Rad,-Dist.Ann) |>\n  mutate(fEst.Age=factor(Est.Age)) |>\n  arrange(Est.Age,ID,BC.Age)\n## Examine results\nheadtail(df,n=5)\n\n#R|                 ID Est.Age  TL BC.Age BC.Len fEst.Age\n#R|  1    2002.10416.F       1 232      1  81.21        1\n#R|  2    2002.10493.F       1 248      1 114.60        1\n#R|  3    2002.10606.F       1 287      1 112.21        1\n#R|  4     2002.1153.F       1 273      1 116.29        1\n#R|  5     2002.1154.F       1 244      1 157.55        1\n#R|  1864 2002.20742.F      10 592      6 523.52       10\n#R|  1865 2002.20742.F      10 592      7 539.77       10\n#R|  1866 2002.20742.F      10 592      8 554.83       10\n#R|  1867 2002.20742.F      10 592      9 567.56       10\n#R|  1868 2002.20742.F      10 592     10 576.20       10\n\n\nThese fish were captured in late fall such that the observed length includes current year’s growth. However, the observed age does not account for time since the fish’s “birthday.” In other words, the observed age at capture should be a “fractional age” such that it represents completed years of growth plus the fraction of the current year’s growth season completed (i.e., the “current age” should be something like 10.9 rather than 10). An example of this is seen by comparing the observed length at capture (in TL) and the back-calculated length (in BC.Len) to age-1 for the first fish in the data.frame (first line in data shown above).\nSome of the plots below require a data frame where the length and age for the oldest age match in time. In other words, this data.frame should contain the length of the fish on the fish’s last “birthday.” With these data, that length is the back-calculated length at the age (in BC.Age) that matches the age of the fish at the time of capture (in Est.Age).2 An example of this data frame is below (especially compare the last five lines below to the last five lines in the previous data frame snippet above).2 With other data, that length may simply be the length of the fish at the time of capture.\n\n# data.frame of just lengths at last full age\ndf2 <- df |>\n  filter(BC.Age==Est.Age)\nheadtail(df2,n=5)\n\n#R|                ID Est.Age  TL BC.Age BC.Len fEst.Age\n#R|  1   2002.10416.F       1 232      1  81.21        1\n#R|  2   2002.10493.F       1 248      1 114.60        1\n#R|  3   2002.10606.F       1 287      1 112.21        1\n#R|  4    2002.1153.F       1 273      1 116.29        1\n#R|  5    2002.1154.F       1 244      1 157.55        1\n#R|  311 2002.20381.F      10 568     10 563.73       10\n#R|  312 2002.20483.F      10 594     10 580.81       10\n#R|  313 2002.20511.F      10 628     10 618.89       10\n#R|  314 2002.20688.F      10 620     10 611.08       10\n#R|  315 2002.20742.F      10 592     10 576.20       10\n\n\nFinally, in some plots below the mean back-calculated length at age is included.33 as.data.frame() removes the tibble class and the remaining grouping level from this data frame.\n\n# data.frame of mean lengths at back-calculated ages\ndf3 <- df |>\n  group_by(fEst.Age,BC.Age) |>\n  summarize(mnBC.Len=mean(BC.Len)) |>\n  as.data.frame()\nheadtail(df3,n=5)\n\n#R|     fEst.Age BC.Age mnBC.Len\n#R|  1         1      1 111.3464\n#R|  2         2      1 113.4633\n#R|  3         2      2 225.3060\n#R|  4         3      1  98.5338\n#R|  5         3      2 211.4096\n#R|  51       10      6 505.5437\n#R|  52       10      7 538.0147\n#R|  53       10      8 558.6757\n#R|  54       10      9 571.4900\n#R|  55       10     10 579.8577\n\n\n\n\nPlots for Exploratory Data Analysis\nWhen modeling fish growth, I explore the data to make observations about (i) variability in length at each age and (ii) “shape” of growth (i.e., whether or not there is evidence for an horizontal asymptote or inflection point). When using repeated-measures data, for example from back-calculated lengths-at-age, I observe the “shape” of growth for each individual and (iii) identify how the back-calculated lengths at age from older fish compare to the back-calculated lengths at age from younger fish.4 In this section, I describe two plots (with some augmentations to the first type) that could be useful during this exploratory stage. In the last section, I describe a plot that could be used for publication.4 As major differences could suggest “Lee’s Phenomenon”, substantial changes in growth between year-classes or over time, or problems with the back-calculation model.\n \nFigure 1 shows longitudinal traces of back-calculated lengths at age for each fish, with separate colors for fish with different observed ages at capture. From this I see variability of approximately 100 mm at each age, individual fish that generally follow the typical shape of a VBGF, and some evidence that back-calculated lengths at earlier ages from “older” fish at capture are somewhat lower than the back-calculated lengths at earlier ages for “younger” fish at capture (this is most evident with the pinkish lines).\n\nsp <- ggplot(data=df,aes(x=BC.Age,y=BC.Len,color=fEst.Age,group=ID)) +\n  geom_line(alpha=1/8) +\n  scale_x_continuous(\"Back-Calculated Age\") +\n  scale_y_continuous(\"Back-Calculated Length (mm)\") +\n  theme(legend.position=\"none\")\nsp\n\n\n\n\nFigure 1: Traces of back-calculated lengths at age for each fish. Traces with the same color are fish with the same observed age at capture.\n\n\n\n\n \nFigure 2 is the same as Figure 1 except that heavy lines have been added for the mean back-calculated lengths at age for fish from each age-at-capture. Here the evidence that back-calculated lengths at earlier ages from “older” fish at capture are somewhat lower than the back-calculated lengths at earlier ages for “younger” fish at capture is a little more obvious.\n\nsp +\n  geom_line(data=df3,\n            aes(x=BC.Age,y=mnBC.Len,group=fEst.Age,color=fEst.Age))\n\n\n\n\nFigure 2: Traces of back-calculated lengths at age for each fish with mean back-calculated lengths at age shown by the heavier lines. Traces with the same color are fish with the same observed age at capture.\n\n\n\n\n \nFigure 3 is the same as Figure 1 but also has points for the length and age of each fish at the last completed year of growth. These points are most near to the observed lengths and ages at capture5 and, thus, most nearly represent the data that would be used to fit a growth model if back-calculations had not been made. With this I observe that most traces of back-calculated lengths-at-age pass near these points, which suggests that “growth” has not changed dramatically over the time represented in these data and that the model used to back-calculate lengths and ages is not dramatically incorrect.5 They will be the observed lengths and ages at capture for datasets where the fish were captured prior to when the current season’s growth had commenced.\n\nsp + \n  geom_point(data=df2,aes(color=fEst.Age),alpha=1/5)\n\n\n\n\nFigure 3: Traces of back-calculated lengths at age for each fish. Traces with the same color are fish with the same observed age at capture.\n\n\n\n\n \nThe previous plots are cluttered because of the number of individual fish. This clutter can be somewhat reduced by creating separate spaghetti plots for each observed age at capture (Figure 4). From this, I observe the clear start of an asymptote at about age 5, an indication of a slight inflection around age 2 (most evident for fish that were older at capture), and that a good portion of the variability in length at early ages may be attributable to fish from different year-classes (i.e., of different observed ages-at-capture). It is, however, more difficult to see that back-calculated lengths at earlier ages from “older” fish at capture are somewhat lower than the back-calculated lengths at earlier ages for “younger” fish at capture.66 I left the facet for age-1 fish in this plot to remind me that there were age-1 fish in these data, even though they do not show a trace. Also, the color here is superfluous and could be removed. I left the color here for comparison with previous figures.\n\n## Make facet labels for the plot below\nlbls <- paste(\"Age =\",levels(df$fEst.Age))\nnames(lbls) <- levels(df$fEst.Age)\n\n## Spaghetti plot separated by age at capture (with means)\nsp + \n  facet_wrap(~fEst.Age,labeller=labeller(fEst.Age=lbls)) +\n  geom_line(data=df3,aes(x=BC.Age,y=mnBC.Len,group=1),color=\"black\")\n\n\n\n\nFigure 4: Traces of back-calculated lengths at age for each fish separated by observed age at capture. Black lines in each facet are the mean back-calculated lengths at age for fish shown in that facet.\n\n\n\n\n \n\n\nPublication Graphic with Model Overlaid\nFor publication I would include traces for individual fish, but without color coding by estimated age-at-capture, and overlay the population-average growth model (i.e., the growth model expressed from using the “fixed effects” for each model parameter; Figure 5).77 The model fitting code below is from Ogle et al. (2017).\n\n## Create the Von B Function using logged version of Linf (to ease scale issue)\nvbT <- function(T,logLinf,K=NULL,t0=NULL) {\n  if (length(logLinf)==3) {\n    t0 <- logLinf[[3]]\n    K <- logLinf[[2]]\n    logLinf <- logLinf[[1]]\n  }\n  exp(logLinf)*(1-exp(-K*(T-t0)))\n}\n\n## Generate starting values from last completed length and age data\nvbStarts(BC.Len~BC.Age,data=df2)\n\n#R|  $Linf\n#R|  [1] 624.3608\n#R|  \n#R|  $K\n#R|  [1] 0.2767802\n#R|  \n#R|  $t0\n#R|  [1] 0.2903228\n\nsvVB <- list(fixed=c(logLinf=log(624.361),K=0.276,t0=0.290))\n\n## Fit hierarchical von B to back-calcd data (BE PATIENT)\n##   Will estimate population-average parameters (fixed-effect values)\n##   and parameters for each individual (in coefficients).\nfitVB <- nlme(BC.Len~vbT(BC.Age,logLinf,K,t0),data=df,\n              fixed=list(logLinf~1,K~1,t0~1),\n              random=logLinf+K+t0~1|ID,\n              start=svVB)\n\n\n## von B equation for the plot\n( tmp <- fixef(fitVB) )\n\n#R|    logLinf         K        t0 \n#R|  6.4662516 0.2784915 0.3922489\n\nlbl <- paste(\"L==\",round(exp(tmp[1]),0),\n             \"*bgroup('(',1-e^-\",round(tmp[2],3),\n             \"(Age-\",round(tmp[3],2),\"),')')\")\n\nggplot(data=df,aes(x=BC.Age,y=BC.Len,group=ID)) +\n  geom_line(alpha=1/15) +\n  stat_function(data=data.frame(T=seq(1,10,0.1)),aes(x=T,y=NULL,group=NULL),\n                fun=vbT,args=list(logLinf=fixef(fitVB)),linewidth=1.1) +\n  geom_text(data=data.frame(x=7,y=120),aes(x=x,y=y,group=NULL,\n                            label=lbl),parse=TRUE,size=4) +\n  scale_x_continuous(\"Back-Calculated Age\") +\n  scale_y_continuous(\"Back-Calculated Length (mm)\") +\n  theme(legend.position=\"none\")\n\n\n\n\nFigure 5: Traces of back-calculated lengths at age for each fish (lighter black lines) with the population-averaged von Bertalanffy growth function (dark black line) overlaid. The equation for the best-fit von Bertalanffy growth function is shown.\n\n\n\n\n \n\n\n\n\n\n\n\n\n\nReferences\n\nOgle, D. H., T. O. Brenden, and J. L. McCormick. 2017. Growth Estimation: Growth Models and Statistical Inference. Pages 265–359 in M. C. Quist and D. A. Isermann, editors. Age and Growth of Fishes: Principles and Techniques. American Fisheries Society, Bethesda, MD.\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{h.ogle2017,\n  author = {Derek H. Ogle},\n  title = {Plots of {Back-Calculated} {Lengths-At-Age}},\n  date = {2017-11-07},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2017-11-7_BackCalculationPlot},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDerek H. Ogle. 2017, November 7. Plots\nof Back-Calculated Lengths-At-Age."
  },
  {
    "objectID": "blog/posts/2017-12-12_StockRecruit_Graph_Questions/index.html",
    "href": "blog/posts/2017-12-12_StockRecruit_Graph_Questions/index.html",
    "title": "Stock-Recruitment Graphing Questions",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below. I also set the default ggplot theme to theme_bw() for a classic “black-and-white” plot (rather than the default plot with a gray background).\n\n\n\nlibrary(FSA)          # for headtail(), srStarts(), srFuns()\nlibrary(dplyr)        # for filter(), mutate(), select()\nlibrary(nlstools)     # for nlsBoot()\nlibrary(ggplot2)\ntheme_set(theme_bw())\n\n \n\nIntroduction\nA fishR user recently asked me\n\nIn the book that you published, I frequently use the stock-recruit curve code. The interface that shows both the Ricker/Beverton-Holt figure with the recruit per spawner to spawner figure (i.e., the dynamic plot for srStarts()) has not been working for quite some time. Additionally, I can get the recruits versus spawner plot for the Beverton-Holt or Ricker curve with confidence bounds around the curve, but how do you do the same for the recruit per spawner to spawner curve?\n\nIn this post I will answer the first question and provide a possible answer to the second questions. I will use the PSalmonAK data used in the book (Ogle 2016) and available in FSAdata.1 As in the book, I remove all records with missing stock (escapement) or recruit (return) data, rescale both the escapement and return variables to be 1000s of 1000s of fish (so millions of fish), create a log of returns variable (logret), create “recruits per spawner” (retperesc) and log recruits per spawner (logretperesc) variables, and, for convenience, remove the harvest and SST variables.1 Also documented here.\n\ndata(PSalmonAK,package=\"FSAdata\")\npinks <- PSalmonAK |>\n  filter(!is.na(escapement),!is.na(return)) |>\n  mutate(escapement=escapement/1000,return=return/1000,\n         logret=log(return),\n         retperesc=return/escapement,logretperesc=log(retperesc)) |>\n  select(-harvest,-SST)\nheadtail(pinks)\n\n#R|     year escapement return   logret retperesc logretperesc\n#R|  1  1960      1.418  2.446 0.894454  1.724965    0.5452066\n#R|  2  1961      2.835 14.934 2.703640  5.267725    1.6615986\n#R|  3  1962      1.957 10.031 2.305680  5.125703    1.6342676\n#R|  28 1987      4.289 18.215 2.902245  4.246911    1.4461918\n#R|  29 1988      2.892  9.461 2.247178  3.271438    1.1852298\n#R|  30 1989      4.577 23.359 3.150982  5.103561    1.6299386\n\n\n \n\n\nDynamic Plot Issue\nSince Ogle (2016) was published the dynamicPlot= argument was removed from srStarts() in FSA because the code for that argument relied on the tcltk package, which I found difficult to reliably support. A similar, though more manual, approach is accomplished with the new fixed= and plot= arguments. For example, using plot=TRUE (without fixed=) generates a plot of “recruits” versus “stock” with the chosen stock-recruitment model evaluated at the automatically chosen parameter starting values superimposed.\n\nsvR <- srStarts(return~escapement,data=pinks,type=\"Ricker\",plot=TRUE)\n\n\n\n\nFigure 1: Recruitment versus stock plot with the Ricker function evaluated at the automatically chosen starting values superimposed.\n\n\n\n\n \nThe user, however, can show the stock-recruitment model evaluated at manually chosen parameter starting values by including those starting values in a named list() supplied to fixed=. These values can be iteratively changed in subsequent calls to srStarts() to manually find starting values that provide a model that reasonably fits (by eye) the stock-recruit data.\n\nsvR <- srStarts(return~escapement,data=pinks,type=\"Ricker\",plot=TRUE,\n                fixed=list(a=4,b=0.15))\n\n\n\n\nFigure 2: Recruitment versus stock plot with the Ricker function evaluated at the manually chosen starting values superimposed.\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nsrStarts() no longer, however, supports the simultaneously plotting of spawners versus recruits and recruits per spawner versus recruits.\n\n\n \n\n\nPlot of Recruits per Spawner versus Spawners\nThe first way that I imagined plotting recruits per spawners versus spawners with the fitted curve and confidence bands is to first follow the code for fitting the stock-recruit function to the stock and recruit data as described in Ogle (2016). In this case, the stock-recruit function is fit on the log scale to adjust for a multiplicative error structure (as described in the book).22 The manually selected starting values from above are used here.\n\nrckr <- srFuns(\"Ricker\")\nsrR <- nls(logret~log(rckr(escapement,a,b)),data=pinks,start=svR)\nbootR <- nlsBoot(srR)\ncbind(estimates=coef(srR),confint(bootR))\n\n#R|     estimates     95% LCI  95% UCI\n#R|  a 2.84924199  1.73343530 4.843034\n#R|  b 0.05516673 -0.08315861 0.213091\n\n\nOgle (2016) showed how to plot spawners versus recruits using base graphics. Here however I will use ggplot2. Either method first requires (i) constructing a sequence of “x” values that span the range of observed numbers of spawners,3 (ii) predicting the number of recruits at each spawner value using the best-fit stock-recruitment model, and (iii) constructing lower and upper confidence bounds for the predicted number of recruits at each spawner value with the bootstrap results. These results are assigned to a data framed called preds below.3 Increase the value in length.out= for a smoother curve and band.\n\nx <- seq(0,9,length.out=199)        # many S for prediction\npR <- rckr(x,a=coef(srR))           # predicted mean R\nLCI <- UCI <- numeric(length(x))\n\nfor(i in 1:length(x)) {             # CIs for mean R @ each S\n  tmp <- apply(bootR$coefboot,MARGIN=1,FUN=rckr,S=x[i])\n  LCI[i] <- quantile(tmp,0.025)\n  UCI[i] <- quantile(tmp,0.975)\n}\npreds <- data.frame(escapement=x,return=pR,LCI=LCI,UCI=UCI)\nheadtail(preds)\n\n#R|      escapement     return        LCI        UCI\n#R|  1   0.00000000  0.0000000 0.00000000  0.0000000\n#R|  2   0.04545455  0.1291866 0.07911254  0.2182016\n#R|  3   0.09090909  0.2577262 0.15886812  0.4319280\n#R|  197 8.90909091 15.5279219 6.09913398 34.7018500\n#R|  198 8.95454545 15.5680589 6.07529668 35.0124059\n#R|  199 9.00000000 15.6078974 6.05159433 35.3248340\n\n\n \nThe recruits versus spawners graph is then constructed in ggplot2 by adding the 95% confidence band from preds using geom_ribbon(), adding the best-fit model curve from preds using geom_line(), and adding the observed data from pinks using geom_point().44 I plot the layers in this order so that the line is on top of the confidence band and the points are on top of both the line and band.\n\nggplot() +\n  geom_ribbon(data=preds,mapping=aes(x=escapement,ymin=LCI,ymax=UCI),\n              fill=\"gray50\",alpha=0.5) +\n  geom_line(data=preds,mapping=aes(x=escapement,y=return),linewidth=1) +\n  geom_point(data=pinks,mapping=aes(x=escapement,y=return)) +\n  scale_x_continuous(name=\"Escapement (millions)\") +\n  scale_y_continuous(name=\"Returners (millions)\")\n\n\n\n\nFigure 3: Returners versus escapement for Pacific Salmon with the best-fit Ricker recruitment function and bootstrapped 95% confidence band.\n\n\n\n\n \nThese results can be modified to plot recruits per spawner versus spawners by replacing the “recruits” in the code above with “recruits per spawner.” This is simple for the observed data as return is simply replaced with retperesc. However, the predicted number of recruits (return in preds) and the confidence bounds (LCI and UCI in preds) from above must be divided by the number of spawners (escapement in preds). The preds data frame is modified accordingly below.\n\npreds <- preds |>\n  mutate(retperesc=return/escapement,\n         rpeLCI=LCI/escapement,\n         rpeUCI=UCI/escapement)\n\nThe plot is then constructed with the appropriate modification of variable names and axis labels.55 I used red for the confidence band here for illustrative purposes below, usually I would use a gray as in Figure 3.\n\nggplot() +\n  geom_ribbon(data=preds,mapping=aes(x=escapement,ymin=rpeLCI,ymax=rpeUCI),\n              fill=\"red\",alpha=0.5) +\n  geom_line(data=preds,mapping=aes(x=escapement,y=retperesc),linewidth=1) +\n  geom_point(data=pinks,mapping=aes(x=escapement,y=retperesc)) +\n  scale_x_continuous(name=\"Escapement (millions)\") +\n  scale_y_continuous(name=\"Returners/Escapement\")\n\n\n\n\nFigure 4: Returners per escapement versus escapement for Pacific Salmon with the best-fit Ricker recruitment function and bootstrapped 95% confidence band.\n\n\n\n\n \nAlternatively, the Ricker model could be reparameterized by dividing each side of the function by “spawners” such that the left-hand-side becomes “recruits per spawner.”6 This recruitment model can be put into an R function, with parameters estimated with nonlinear regression similar to above. The results below show that the parameter point estimates are identical and the bootsrapped confidence intervals are similar to what was obtained above.6 This is a fairly typical reparameterization of the Ricker model.\n\nrckr2 <- function(S,a,b=NULL) {\n  if (length(a)>1) { b <- a[[2]]; a <- a[[1]] }\n  a*exp(-b*S)\n}\nsrR2 <- nls(logretperesc~log(rckr2(escapement,a,b)),data=pinks,start=svR)\nbootR2 <- nlsBoot(srR2)\ncbind(estimates=coef(srR2),confint(bootR2))\n\n#R|     estimates    95% LCI   95% UCI\n#R|  a 2.84924192  1.6249610 4.6859663\n#R|  b 0.05516672 -0.1034364 0.1944586\n\n\nWith this, a second method for plotting recruits per spawner versus spawners is the same as how the main plot from the book was constructed but modified to use the results from this reparameterized function.\n\nx <- seq(0,9,length.out=199)        # many S for prediction\npRperS <- rckr2(x,a=coef(srR2))     # predicted mean RperS\nLCI2 <- UCI2 <- numeric(length(x))\n\nfor(i in 1:length(x)) {             # CIs for mean RperS @ each S\n  tmp <- apply(bootR2$coefboot,MARGIN=1,FUN=rckr2,S=x[i])\n  LCI2[i] <- quantile(tmp,0.025)\n  UCI2[i] <- quantile(tmp,0.975)\n}\npreds2 <- data.frame(escapement=x,retperesc=pRperS,rpeLCI=LCI2,rpeUCI=UCI2)\nheadtail(preds2)\n\n#R|      escapement retperesc    rpeLCI   rpeUCI\n#R|  1   0.00000000  2.849242 1.6249610 4.685966\n#R|  2   0.04545455  2.842106 1.6310869 4.652586\n#R|  3   0.09090909  2.834988 1.6372360 4.612723\n#R|  197 8.90909091  1.742930 0.7528187 4.066259\n#R|  198 8.95454545  1.738565 0.7465528 4.079937\n#R|  199 9.00000000  1.734211 0.7403391 4.094182\n\nggplot() +\n  geom_ribbon(data=preds2,mapping=aes(x=escapement,ymin=rpeLCI,ymax=rpeUCI),\n              fill=\"blue\",alpha=0.5) +\n  geom_line(data=preds2,mapping=aes(x=escapement,y=retperesc),linewidth=1) +\n  geom_point(data=pinks,mapping=aes(x=escapement,y=retperesc)) +\n  scale_x_continuous(name=\"Escapement (millions)\") +\n  scale_y_continuous(name=\"Returners/Escapement\")\n\n\n\n\nFigure 5: Returners per escapement versus escapement for Pacific Salmon with the best-fit Ricker recruitment function and bootstrapped 95% confidence band.\n\n\n\n\n \nThe two methods described above for plotting recruits per spawner versuse spawners are identical for the best-fit curve and nearly identical for the confidence bounds (slight differences likely due to the randomness inherent in bootstrapping). Thus, the two methods produce nearly the same visual.\n\nggplot() +\n  geom_ribbon(data=preds,mapping=aes(x=escapement,ymin=rpeLCI,ymax=rpeUCI),\n              fill=\"red\",alpha=0.25) +\n  geom_ribbon(data=preds2,mapping=aes(x=escapement,ymin=rpeLCI,ymax=rpeUCI),\n              fill=\"blue\",alpha=0.25) +\n  geom_line(data=preds,mapping=aes(x=escapement,y=retperesc),linewidth=1) +\n  geom_line(data=preds2,mapping=aes(x=escapement,y=retperesc),linewidth=1) +\n  geom_point(data=pinks,mapping=aes(x=escapement,y=retperesc)) +\n  scale_x_continuous(name=\"Escapement (millions)\") +\n  scale_y_continuous(name=\"Returners/Escapement\")\n\n\n\n\nFigure 6: Returners per escapement versus escapement for Pacific Salmon with the best-fit Ricker recruitment function and bootstrapped 95% confidence band shown for both estimation methods.\n\n\n\n\n \n\n\n\n\n\n\n\n\n\nReferences\n\nOgle, D. H. 2016. Introductory Fisheries Analyses with R. CRC Press, Boca Raton, FL.\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{h.ogle2017,\n  author = {Derek H. Ogle},\n  title = {Stock-Recruitment {Graphing} {Questions}},\n  date = {2017-12-12},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2017-12-12_StockRecruit_Graph_Questions},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDerek H. Ogle. 2017, December 12. Stock-Recruitment\nGraphing Questions."
  },
  {
    "objectID": "blog/posts/2017-4-20_BlandAltman/index.html",
    "href": "blog/posts/2017-4-20_BlandAltman/index.html",
    "title": "Bland-Altman Plot for Age Comparisons?",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below. I also set the default ggplot theme to theme_bw() for a classic “black-and-white” plot (rather than the default plot with a gray background).\n\n\n\nlibrary(FSA)            ## for WhitefishLC, headtail()\nlibrary(dplyr)          ## for mutate()\nlibrary(ggplot2)\nlibrary(BlandAltmanLeh) ## for bland.altman.plot()\nlibrary(mgcv)\ntheme_set(theme_bw())\n\n \n\nIntroduction\nIn this post, I describe the Bland-Altman plot, demonstrate how to construct it in R, give a mild critique of its use for comparing fish age estimates, and develop an alternative that is meant to address my critique. This is largely a “thinking out loud” exercise so I am open to suggestions you may have.\nThe WhitefishLC data frame from FSA.1 contains age readings made by two readers on scales, fin rays, and otoliths, along with consensus readings for each structure. These data will be used throughout this post.1 These data are loaded automatically with library(FSA).\n\nheadtail(WhitefishLC)\n\n#R|      fishID  tl scale1 scale2 scaleC finray1 finray2 finrayC otolith1 otolith2\n#R|  1        1 345      3      3      3       3       3       3        3        3\n#R|  2        2 334      4      3      4       3       3       3        3        3\n#R|  3        3 348      7      5      6       3       3       3        3        3\n#R|  149    214 599     14     16     15      14      14      14       16       16\n#R|  150    216 636      8     10      9      10       8      10       15       15\n#R|  151    218 551      5      7      6       6       9       8       13       13\n#R|      otolithC\n#R|  1          3\n#R|  2          3\n#R|  3          3\n#R|  149       16\n#R|  150       15\n#R|  151       13\n\n\n\n\nBland-Altman Plot\nThe Bland-Altman plot (Bland and Altman 1986) is commonly used in medical and chemistry research to assess agreement between two measurement or assay methods (Giavarina 2015). McBride (2015) used the Bland-Altman plot in his simulation study of the effects of accuracy and precision on the ability to diagnose agreement between sets of fish age estimates. McBride (2015) noted that Bland-Altman plots “readily depict both bias and imprecision” and that this was summarized for “the entire sample, rather than specific age classes.” Despite this, I am aware of only two entries in the fisheries literature that used the Bland-Altman plot to compare fish age estimates (one in the grey literature, one in a thesis). Below, I describe the Bland-Altman plot and then offer a modified version for comparing estimates of fish age.\nThe Bland-Altman plot is a scatterplot where the differences in two age estimates are on the y-axis and means of the two age estimates are on the x-axis. The plot may be augmented with several horizontal lines at the following locations (Figure 1):\n\nZero,\nMean difference in ages (heavy red dashed line),\nUpper and lower 95% confidence limits for the mean difference in ages (dark red dashed lines),\nUpper and lower 95% “agreement limits” (usually 1.96 times the standard deviation for the difference in ages above and below the mean difference in ages; heavy dashed blue lines), and\nUpper and lower 95% confidence limits for the upper and lower “agreement limits” (dashed dark blue lines).\n\n\n\n\n\n\nFigure 1: Bland-Altman plot for comparing scale to otolith age estimates of Lake Champlain Lake Whitefish. Thiw was constructed with BlandAltmanLeh.\n\n\n\n\n \nAs a general rule, a 95% confidence interval for the mean difference that does not contain zero suggests a difference (or a bias) between the two age estimates. For example, a bias is evident in Figure 1. In addition, one would expect 95% of the points to fall within the “agreement limits.” Points that fall outside this range may be considered further as possible outliers. Log differences have been used if the differences are not normally distributed and the percentage difference (where the difference is divided by the mean age) have also been used (Giavarina 2015).\nThe Bland-Altman plot in Figure 1 was created with bland.altman.plot() from the BlandAltmanLeh package (Lehnert 2015b). Other R functions exist for creating Bland-Altman plots (or the equivalent “Tukey’s Mean Difference Plot”). However, I demonstrate below how to construct this plot from “scratch.”\n \n\n\nConstructing a Bland-Altman Plot\nIn this example, a Bland-Altman plot is created to compare consensus (between two readers) scale (scaleC) and otolith (otolithC) age estimates for Lake Champlain Lake Whitefish. For simplicity, I restrict (using select()) the data frame below to just these two variables plus fishID and tl. In addition, for making the plot the mean and differences between the two age estimates are added the data frame (using mutate()).\n\nwfSO <- WhitefishLC |>\n  select(fishID,tl,scaleC,otolithC) |>\n  mutate(meanSO=(scaleC+otolithC)/2,\n         diffSO=scaleC-otolithC)\nheadtail(wfSO)\n\n#R|      fishID  tl scaleC otolithC meanSO diffSO\n#R|  1        1 345      3        3    3.0      0\n#R|  2        2 334      4        3    3.5      1\n#R|  3        3 348      6        3    4.5      3\n#R|  149    214 599     15       16   15.5     -1\n#R|  150    216 636      9       15   12.0     -6\n#R|  151    218 551      6       13    9.5     -7\n\n\nA data frame of summary statistics is also needed. Below the sample, mean, standard deviation, and standard error for the differences is ages are calculated and then approximate 95% confidence limits for the differences (i.e., using the SE) and agreement limits (i.e., using the SD) are added.\n\nsumSO <- wfSO |>\n  summarize(n=n(),\n            mean=mean(diffSO,na.rm=TRUE),\n            sd=sd(diffSO,na.rm=TRUE),\n            se=se(diffSO,na.rm=TRUE)) |>\n  mutate(lwrci=mean-1.96*se,\n         uprci=mean+1.96*se,\n         lwrag=mean-1.96*sd,\n         uprag=mean+1.96*sd)\nsumSO\n\n#R|      n      mean       sd        se     lwrci     uprci     lwrag    uprag\n#R|  1 151 -1.781457 2.553152 0.2077726 -2.188691 -1.374223 -6.785636 3.222722\n\n\nThe Bland-Altman plot can then be constructed in layers using ggplot() (Figure 2). Horizontal lines at zero, the mean difference, confidence limits for the mean difference, and the agreement limits are added with geom_hline() using yintercept= to denoted the location of the line and varying colors (with color=), line widths (with linewidth=), and line types (with linetype=). geom_point() is then used to add the observed differences in ages at the mean age as points that are slightly transparent such that as more points are plotted on top of each other the apparent point becomes darker. Finally, labels are provided for the x- and y-axes.\n\nggplot(data=wfSO,mapping=aes(x=meanSO,y=diffSO)) +\n  geom_hline(yintercept=0,color=\"gray70\",linewidth=1) +\n  geom_hline(yintercept=sumSO$mean,\n             color=\"red\",linewidth=1,linetype=\"dashed\") +\n  geom_hline(yintercept=c(sumSO$lwrci,sumSO$uprci),\n             color=\"darkred\",linewidth=1,linetype=\"dashed\") +\n  geom_hline(yintercept=c(sumSO$lwrag,sumSO$uprag),\n             color=\"blue\",linewidth=1,linetype=\"dashed\") +\n  geom_point(col=col2rgbt(\"black\",1/5),size=2) +\n  scale_x_continuous(name=\"Mean Age\") +\n  scale_y_continuous(name=\"Scale-Otolith Age\")\n\n\n\n\nFigure 2: Bland-Altman plot for comparing scale to otolith age estimates of Lake Champlain Lake Whitefish constructed using ggplot.\n\n\n\n\n \n\n\nA Critique of the Bland-Altman Plot for Age Comparisons\nI like that Bland-Altman plots (relative to age bias plots) do not require that one of the variables be designated as the “reference” group. This may be more useful when comparing age estimates where one set of estimates is not clearly a priori considered to be more accurate (e.g., comparing readers with similar levels of experience).\nHowever, I don’t like the following characteristics of (default) Bland-Altman plots.\n\nThere may be considerable overlap of the plotted points because of the discrete nature of most age data. Various authors have dealt with this by adding a “petal” to the point for each overplotted point to make a so-called “sunflower plot” (Lehnert 2015a) or using bubbles that are proportional to the number of overplotted points (McBride 2015). However, I find the “sunflowers” and “bubbles” to be distracting. I addressed this issue with transparent points above.\nThe “agreement lines” are not particularly useful. They may be useful for identifying outliers, but an egregious outlier will likely stand out without these lines.\nThe single confidence interval for the mean difference suggests that any bias between the sets of estimates is “constant” across the range of mean ages. This can be relaxed somewhat if the percentage difference is plotted on the y-axis. However, neither of these allows for more complex situations where the bias is nonlinear with age. For example, a common situation of little difference between the estimates at young ages, but increasing differences with increasing ages (e.g., Figure 2) is not well-represented by this single confidence interval.\n\n \n\n\nA Modified Bland-Altman Plot for Age Comparisons\nThe third issue above has been addressed with some Bland-Altman plots by fitting a linear regression that describes the difference in age estimates as a function of mean age (Giavarina 2015). However, this only allows for a linear relationship, which may not represent or reveal more interesting nonlinear relationships. A “smoother” (a loess or a generalized additive model (GAM)) could be used to estimate a “smoothed” potentially nonlinear relationship between the differences in ages and the means of the ages. For example, a GAM smoother is added to Figure 2 with geom_smooth() below.22 geom_smooth() defaults to a loess smoother when n<1000 points. Use method=\"gam\" to force using a GAM smoother. I use the GAM smoother for the hypothesis testing shown at the bottom of this section.\n\nggplot(data=wfSO,mapping=aes(x=meanSO,y=diffSO)) +\n  geom_hline(yintercept=0,color=\"gray70\",linewidth=1) +\n  geom_hline(yintercept=c(sumSO$lwrci,sumSO$uprci),\n             color=\"red\",linewidth=1,linetype=\"dashed\") +\n  geom_hline(yintercept=c(sumSO$lwrag,sumSO$uprag),\n             color=\"blue\",linewidth=1,linetype=\"dashed\") +\n  geom_point(col=col2rgbt(\"black\",1/5),size=2) +\n  scale_x_continuous(name=\"Mean Age\") +\n  scale_y_continuous(name=\"Scale-Otolith Age\") +\n  geom_smooth(method=\"gam\",color=\"gray30\")\n\n\n\n\nFigure 3: Bland-Altman plot for comparing scale to otolith age estimates of Lake Champlain Lake Whitefish with a loess smoother.\n\n\n\n\nThese results suggest that there is little difference between scale and otolith age estimates up to a mean age estimate of approximately five, after which age estimates from scales are less than age estimates from otoliths, with the difference between the two generally increasing with increasing mean age (Figure 3).\nA similar plot is shown for the comparison of otolith age estimates between two readers in Figure 4. Also note (see below) that the smoother term is not significant for the between-reader comparison of otolith age estimates, which suggests no relationship between the differences in ages and the mean age. In addition, the intercept term is not significantly different from zero, which indicates that there is not a constant bias between the two readers.\n\n\n\n\n\nFigure 4: Bland-Altman plot for comparing age estimates among two readers of Lake Champlain Lake Whitefish otoliths.\n\n\n\n\n \nHypotheses about the relationship between the difference in ages and the mean age can be tested with the GAM smoother model. The first line below fits the GAM smoother model used by geom_smooth(). First note that gam() is from the mgcv package and is preceded by mgcv:: so as not to load the whole package. The formula in gam has the difference in ages on the left side and a smoother term (denoted with the s() on the right side. The smoother funtion contains the mean aes and bs=\"cs\" (to force using the same algorithm as geom_smoother()). The saved object is the submitted to summary() to get, among other things, hypothesis test results about the significance of the smoother term.\n\ngamSO <- mgcv::gam(diffSO~s(meanSO,bs=\"cs\"),data=wfSO)\nsummary(gamSO)\n\n#R|  \n#R|  Family: gaussian \n#R|  Link function: identity \n#R|  \n#R|  Formula:\n#R|  diffSO ~ s(meanSO, bs = \"cs\")\n#R|  \n#R|  Parametric coefficients:\n#R|              Estimate Std. Error t value Pr(>|t|)\n#R|  (Intercept)  -1.7815     0.1473   -12.1   <2e-16\n#R|  \n#R|  Approximate significance of smooth terms:\n#R|              edf Ref.df     F p-value\n#R|  s(meanSO) 8.044      9 17.14  <2e-16\n#R|  \n#R|  R-sq.(adj) =  0.498   Deviance explained = 52.4%\n#R|  GCV = 3.4842  Scale est. = 3.2755    n = 151\n\n\nThe p-value for the significance of the smoother term (i.e., whether it adds significantly to the model or not) is <2e-16 as found under “Approximate significance of smooth term:”. This indicates that the smoother term is important to the model and that mean difference in age depends on the mean age. Thus, the difference in ages is not the same for all mean ages.\n\n\n\nA similar table for the comparison of otolith ages between two readers shows that the smoother term is not significant (0.958); thus, the difference in otolith ages does not depend on the mean age. In addition, the intercept term for the model is not significantly different from 0 (1.000), which along with the result about the smoother, suggests that the mean difference in ages is 0 regardless of the mean otolith age.\n\n\n#R|  \n#R|  Family: gaussian \n#R|  Link function: identity \n#R|  \n#R|  Formula:\n#R|  diffOO ~ s(meanOO, bs = \"cs\")\n#R|  \n#R|  Parametric coefficients:\n#R|                Estimate Std. Error t value Pr(>|t|)\n#R|  (Intercept) -2.443e-18  6.090e-02       0        1\n#R|  \n#R|  Approximate significance of smooth terms:\n#R|                  edf Ref.df F p-value\n#R|  s(meanOO) 4.368e-10      9 0   0.958\n#R|  \n#R|  R-sq.(adj) =  -2.79e-12   Deviance explained = 1.26e-11%\n#R|  GCV = 0.56373  Scale est. = 0.56      n = 151\n\n\n \n\n\n\n\n\n\n\n\n\nReferences\n\nBland, J. M., and D. G. Altman. 1986. Statistical methods for assessing agreement between two methods of clinical measurement. Lancet i:307–317.\n\n\nGiavarina, D. 2015. Understanding Bland Altman analysis. Biochemia Medica 25(2):141–151.\n\n\nLehnert, B. 2015a. What’s the main idea behind Bland-Altman plots?\n\n\nLehnert, B. 2015b, December. BlandAltmanLeh: Plots (Slightly Extended) Bland-Altman Plots.\n\n\nMcBride, R. S. 2015. Diagnosis of paired age agreement: A simulation of accuracy and precision effects. ICES Journal of Marine Science 72(7):2149–2167.\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{h.ogle2017,\n  author = {Derek H. Ogle},\n  title = {Bland-Altman {Plot} for {Age} {Comparisons?}},\n  date = {2017-04-20},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2017-4-20_BlandAltman},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDerek H. Ogle. 2017, April 20. Bland-Altman\nPlot for Age Comparisons?"
  },
  {
    "objectID": "blog/posts/2017-7-28_LF_Ridgeline_Plot/index.html",
    "href": "blog/posts/2017-7-28_LF_Ridgeline_Plot/index.html",
    "title": "Ridgeline Length Frequency Plots",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below. I also set the default ggplot theme to theme_bw() for a classic “black-and-white” plot (rather than the default plot with a gray background).\n\n\n\nlibrary(FSA)\nlibrary(dplyr)        # for filter(), mutate(), select()\nlibrary(ggplot2)\nlibrary(ggridges)     # for geom_density_ridges(), stat_density_ridges(), et al.\ntheme_set(theme_bw())\n\n \n\nLake Superior Kiyi\nWilke described ridgeline plots as “partially overlapping line plots that create the impression of a mountain range.” I would describe them as partially overlapping density plots (akin to a smoothed histogram).\nI thought that ridgeline plots might provide a nice visualization of length frequencies over time. For example, we published a paper that examined (among other things) the lengths of Kiyi (Coregonus kiyi) captured in trawl tows in Lake Superior from 2003 to 2014. The length frequency data used in that paper is shown below (and stored in the lf object). Figure 1 is a modified version1 of the length frequency histograms we included in the paper.1 Stripped of code that increased fonts, changed colors, etc.\n\n\n#R|       year mon  tl\n#R|  1    2003 May 183\n#R|  2    2003 May 259\n#R|  3    2004 May 200\n#R|  9149 2004 Jul  77\n#R|  9150 2004 Jul  87\n#R|  9151 2004 Jul  81\n\n\n\n\n\n\n\nFigure 1: Histograms of the total lengths of Lake Superior Kiyi from 2003 to 2014.\n\n\n\n\n \nFigure 2 is a near default joyplot of the same data.\n\nggplot(lf,aes(x=tl,y=year)) +\n  geom_density_ridges() +\n  scale_x_continuous(name=\"Total Length (mm)\") +\n  scale_y_discrete(expand=expansion(mult=c(0.01,0.16))) +\n  theme(axis.title.y=element_blank())\n\n\n\n\nFigure 2: Ridgelinle plot of the total lengths of Lake Superior Kiyi from 2003 to 2014.\n\n\n\n\n \nIn my opinion, it is easier on the ridgeline plot to follow the strong year-classes that first appear in 2004 and 2010 through time and to see how fish in the strong year-classes grow and eventually merge in size with older fish. Thus, ridgeline plots look useful for displaying length (or age) data across many groups (years, locations, etc.).22 Wilkeillustrates many possible modifications to the ridgeline plots including adding data points, show summary statistics, or using histograms rather than densities.\n \n\n\nLake Erie Walleye\nThe following code use the WalleyeErie2 data frame built-in to FSA. This provides an example with data that you can run on your own. I include some bells-and-whistles from Wilke’s demonstration.\n\n# reduce data to one location and make sure year variable is a factor\ndata(WalleyeErie2,package=\"FSAdata\")\nwe2 <- WalleyeErie2 |>\n  filter(loc==2) |>\n  mutate(fyear=as.factor(year))\n\nggplot(we2,aes(x=tl,y=fyear,fill=0.5-abs(0.5-after_stat(ecdf)))) +\n  stat_density_ridges(geom=\"density_ridges_gradient\",calc_ecdf=TRUE,scale=1) +\n  scale_x_continuous(name=\"Total Length (mm)\") +\n  scale_y_discrete(expand=expansion(mult=c(0.01,0.05))) +\n  scale_fill_viridis_c(name=\"Tail Probability\",guide=\"none\") +\n  theme(axis.title.y=element_blank())\n\n\n\n\nFigure 3: Ridgelinle plot of the total lengths of Lake Erie Walleye from 2003 to 2014.\n\n\n\n\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{h.ogle2017,\n  author = {Derek H. Ogle},\n  title = {Ridgeline {Length} {Frequency} {Plots}},\n  date = {2017-07-28},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2017-7-28_LF_Ridgeline_Plot},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDerek H. Ogle. 2017, July 28. Ridgeline\nLength Frequency Plots."
  },
  {
    "objectID": "blog/posts/2017-8-9_Mean_Weights/index.html",
    "href": "blog/posts/2017-8-9_Mean_Weights/index.html",
    "title": "Mean Weights at Ages From Lengths",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below. I also set the default ggplot theme to theme_bw() for a classic “black-and-white” plot (rather than the default plot with a gray background) and set the random number seed for reproducibility of the randomly generated sample data below.\n\n\n\nlibrary(FSA)           # for headtail()\nlibrary(dplyr)         # for mutate(), group_by(), summarize(), \nlibrary(ggplot2)\nlibrary(patchwork)     # for combining plots\ntheme_set(theme_bw())\nset.seed(678394)  # for reproducibility of randomly created data\n\n \n\nIntroduction\nRecently I was tasked with estimating mean weights-at-age for data that contained no weights, but did contain lengths and ages (ages were from applying an age-length key). A weight-length relationship was available (derived from a smaller sample from the same population). A question arose about whether the weight-length relationship should be used to predict weights for individual fish and then summarized to estimate mean weights at age or whether the weight-length relationship should be applied to summarized mean lengths-at-age to estimate mean weights-at-age.\nThis issue has been addressed in the literature. Ricker (1975) states that the true mean weight is always greater, “on the order of 5%,” than the mean weight computed from the weight-length relationship with the mean length. Tesch (1971) suggested that the error in predicting mean weight-at-age with the weight-length relationship using mean length-at-age would be about 5-10%. In a simulation study, Nielsen and Schoch (1980) found that Tesch’s suggestion was too general and that error was less than 10% when the coefficient of variation (CV; standard deviation divided by mean) in lengths was less than 10%, but could be substantially higher when the CV was higher, with the specific result dependent on the weight-length regression exponent (b).1 Pienaar and Ricker (1968) and Beyer (1991) both suggested corrections to reduce the bias in the mean weight-at-age produced by the weight-length regression using the mean length.1 Nielsen and Schoch (1980) provided a nice geometric description of why this bias occurs.\nIn this post, I explore the bias in using the weight-length regression to estimate mean weight-at-age from mean length-at-age and the correction factors suggested by Beyer (1991).\n \n\n\nSample Data\nI created a very simple population that consisted of lengths, weights, and ages of fish. Ages were derived from a population with roughly a 30% annual mortality rate. Mean lengths-at-age were modeled with a von Bertalanffy growth curve using a \\(L_{\\infty}\\)=650 mm, \\(K\\)=0.3, and \\(t_{0}\\)=0. Individual lengths were modeled from normal distributions using the modeled mean length and a constant standard deviation of 30 mm) within each age-class. Weights were predicted directly from a known weight-length relationship without any error (in wt1) and with a small amount of error (in wt2).\n\n# Generate some lengths\nages <- 3:8\nN3 <- 100      ## number at age-3\nA <- 0.3       ## annual morality rate\nns <- round(N3*(1-A)^(ages-min(ages)),0)  ## numbers at age\nLinf <- 650    ## von B parameters\nK <- 0.3\nt0 <- 0\nmns <- Linf*(1-exp(-K*(ages-t0)))         ## mean length-at-age\nsds <- rep(30,length(mns))\nlens <- NULL\nfor (i in 1:length(ages))                 ## individual lengths-at-age\n  lens <- c(lens,rnorm(ns[i],mean=mns[i],sd=sds[i]))\nloga <- -13.5  ## weight-length relationship parameters\nb <- 3.2\n# Compute weights from the W-L relationship, w/ & w/o error\ndf <- data.frame(age=rep(ages,ns),len=round(lens,0)) |>\n  mutate(wt1=round(exp(loga+b*log(len)),0),\n         wt2=round(exp(loga+b*log(len)+rnorm(length(lens),mean=0,sd=0.1)),0))\nheadtail(df)\n\n#R|      age len  wt1  wt2\n#R|  1     3 374  235  197\n#R|  2     3 401  293  313\n#R|  3     3 369  225  210\n#R|  292   8 580  955  923\n#R|  293   8 605 1093 1081\n#R|  294   8 589 1003 1126\n\n\nModeling data in this way is simple, but at least somewhat realistic (Figure 1).\n\nlenh <- ggplot(data=df,aes(x=len)) +\n  geom_histogram(binwidth=10,boundary=0,color=\"black\",fill=\"gray70\") +\n  scale_x_continuous(name=\"Length (mm)\") +\n  scale_y_continuous(name=\"frequency\",expand=expansion(mult=c(0,0.05)))\nlenw <- ggplot(data=df,aes(x=wt2)) +\n  geom_histogram(binwidth=25,boundary=0,color=\"black\",fill=\"gray70\") +\n  scale_x_continuous(name=\"Weight (g)\") +\n  scale_y_continuous(name=\"frequency\",expand=expansion(mult=c(0,0.05)))\nwl <- ggplot(data=df,aes(x=len,y=wt2)) +\n  geom_point(pch=21,fill=\"gray70\",color=\"black\")  +\n  scale_x_continuous(name=\"Length (mm)\") +\n  scale_y_continuous(name=\"Weight (g)\")\nal <- ggplot(data=df,aes(x=age,y=len)) +\n  geom_jitter(pch=21,fill=\"gray70\",color=\"black\",width=0.05,height=0)  +\n  scale_x_continuous(name=\"Age (years)\") +\n  scale_y_continuous(name=\"Length (mm)\")\n(lenh + lenw) / (wl + al)\n\n\n\n\nFigure 1: Histograms of lengths (upper left) and weights (upper right) and scatterplots of weight versus length (lower left) and length versus age (lower right).\n\n\n\n\n \n\n\nExplore the Bias\nBelow the mean length (mnlen) and mean weight without any random erro (i.e., the “true” mean weight for individuals modeled above; true.mnwt) are calculated (using group_by() and summarize()). The predicted mean weight at each age is then computed from the mean length at each age and the weight-length relationship (i.e., pr.mnwt using mutate() and the regression coefficient values from above). Finally a percentage error between the predicted and true mean weights is computed for each age (in dif.minwt).22 The as.data.frame() is used here because I don’t like the tibble format that is returned by summarize().\n\nsum1 <- group_by(df,age) |>\n  summarize(mnlen=mean(len),\n            true.mnwt=mean(wt1)) |>\n  mutate(pr.mnwt=exp(loga+b*log(mnlen)),\n         dif.mnwt=(pr.mnwt-true.mnwt)/true.mnwt*100) |>\n  as.data.frame()\n\nThe results from this one sample show that the mean weights computed from the mean lengths and the weight-length regression (i.e., pr.mnwt) are lower at each age then the “true” mean weights (true.mnwt; Table 1).\n\n\n\n\n\n\n\nage\nmnlen\ntrue.mnwt\npr.mnwt\ndif.mnwt\n\n\n\n\n3\n391\n276\n270\n-2.15\n\n\n4\n454\n448\n438\n-2.23\n\n\n5\n511\n644\n636\n-1.29\n\n\n6\n550\n817\n806\n-1.35\n\n\n7\n570\n912\n906\n-0.72\n\n\n8\n594\n1034\n1028\n-0.58\n\n\n\nTable 1: Summary table using weights without any error and no correction for the predicted mean weights.\n\n\n \nOf course, weight-length relationships are not without error, so the weights with a small amount of random error were used to determine if the pattern of a negative bias when predicting mean weights from mean lengths persists with more realistic data.3 Results from this one set of more realistic data showed a similar, though not as consistent, degree of negative bias when predicting mean weights from mean lengths (Table 2).3 Only a small error was added because the relationship between weight and length is very strong for most fishes. The r-squared for this relationship was a realistic 0.969.\n\n\n\n\n\n\n\nage\nmnlen\ntrue.mnwt\npr.mnwt\ndif.mnwt\n\n\n\n\n3\n391\n277\n270\n-2.55\n\n\n4\n454\n448\n438\n-2.24\n\n\n5\n511\n643\n636\n-1.12\n\n\n6\n550\n830\n806\n-2.87\n\n\n7\n570\n906\n906\n-0.02\n\n\n8\n594\n1054\n1028\n-2.50\n\n\n\nTable 2: Summary table using weights with a small amount of error and no correction for the predicted mean weights.\n\n\n \nI then performed the analysis above 1000 times, keeping track of the percent error between the predicted weight and the true mean weight for each age for each sample.44 The code here also uses the correction factors discussed above; those results are presented further below.\n\n\n\nThe results of this simulation suggest an average negative bias near 4% for age-3 fish and between about 1 and 2% for all older fish (Table 3). Note that the CV in length for each age varied between 2.7% and 9.8% in these simulations.\n\n\n\n\n\n\n\nage3\nage4\nage5\nage6\nage7\nage8\n\n\n\n\n-2.49\n-1.97\n-1.74\n-1.5\n-1.32\n-1.39\n\n\n\nTable 3: Mean percentage difference in uncorrected predicted mean and true mean weights by age class for 1000 simulations.\n\n\n \nSimilar patterns were found using different values of the weight-length relationship exponent \\(b\\) (see Appendix). However, larger negative biases were observed as the standard deviation in lengths increased (see Appendix).\n\n\nA Possible Correction\nAs noted above, Pienaar and Ricker (1968) and Beyer (1991) offered methods to reduce or eliminate the bias from using the weight-length regression to estimate mean weight-at-age from mean length-at-age. Beyer’s corrections were simple as they were based on the CV of lengths and the \\(b\\) coefficient from the weight-length regression. Beyer specifically offered three possible bias correcting factors for isometric growth, allometric growth assuming a lognormal distribution, and allometric growth assuming a normal distributions for lengths. Here I will only consider Beyer’s corrections for allometric growth with lognormal (i.e, Beyer’s equation 16) and normal (i.e., Beyer’s equation 18) distributions of lengths within age classes.\nBeyer’s formulae are implemented by modifying group_by() and summarize() used previously. Specifically the standard deviation of lengths is calculated (in sdlen) so that the CV of lengths can be calculated (in cvlen). The correction factors are then computed (in cfn for the normal distribution and cfl for the lognormal distribution).\n\nsum2a <- group_by(df,age) |>\n  summarize(mnlen=mean(len),sdlen=sd(len),\n            true.mnwt=mean(wt2)) |>\n  mutate(cvlen=sdlen/mnlen,\n         cfn=1+b*(b-1)/2*(cvlen^2),      # eqn 18\n         cfl=(1+cvlen^2)^(b*(b-1)/2),    # eqn 16\n         pr.mnwt=exp(loga)*mnlen^b,\n         pr.mnwt.n=pr.mnwt*cfn,\n         pr.mnwt.l=pr.mnwt*cfl,\n         dif.mnwt=(pr.mnwt-true.mnwt)/true.mnwt*100,\n         dif.mnwt.n=(pr.mnwt.n-true.mnwt)/true.mnwt*100,\n         dif.mnwt.l=(pr.mnwt.l-true.mnwt)/true.mnwt*100) |>\n  as.data.frame()\n\nThese calculations were again repeated 1000 times and summarized in the bottom two rows of Table 4. These results suggest that the mean bias in predicted weights at age when corrected with a correction factor appear to only be on the order of a quarter to a half a percent. These corrections seems to perform fairly consistently across a few different values of the weight-length regression exponent \\(b\\) and standard deviations in lengths (see Appendix).\n\n\n\n\n\n\n\n\nage3\nage4\nage5\nage6\nage7\nage8\n\n\n\n\nNo correction\n-2.49\n-1.97\n-1.74\n-1.50\n-1.32\n-1.39\n\n\nNormal (eqn 18)\n-0.43\n-0.45\n-0.52\n-0.45\n-0.35\n-0.49\n\n\nLognormal (eqn 16)\n-0.41\n-0.45\n-0.51\n-0.44\n-0.35\n-0.48\n\n\n\nTable 4: Mean percentage difference in two types of corrected predicted mean and true mean weights by age class for 1000 simulations.\n\n\n \n\n\nWhy Worry About This?\nWhy am I worried about this if the bias is on the order of 4% or less? First, for my application, we are estimating mean weight so that we can expand to total biomass. While a 4% error on an individual fish may seem inconsequential, that error can become quite important when expanded to represent total biomass, especially when it is a consistent negative bias.\nSo, why worry about correction factors when I can easily predict the weight for individual fish with the weight-length regression and then summarize these fish to get mean weight at age? In my situation, it appears that some of our mean lengths at age, and by extension mean weights at age, are poorly estimated because of small sample sizes at some ages. I am considering fitting a growth model (e.g., von Bertalanffy growth model) to the length-at-age data such that the fitted model can be used to predict mean lengths at age. The advantage of this is that information at other ages can be used to inform the calculation of mean length at an age. [The potential downside, of course, is that I would be prescribing a smooth curve to the growth trajectory.] If I can then estimate mean weights at age with minimal bias from the mean lengths at age from the growth model, then this could (I would need to test this) be beneficial in my situation.\n \n\n\nSummary\nMean weights at age appear to be estimated with bias when a weight-length relationship is applied to mean lengths at age without any correction factor. The correction factors suggested by Beyer (1991) are easy to implement and seem to reduce the bias in predicted mean weights-at-age to near negligible levels. Thus, if mean weights at age cannot be predicted from individual fish, then it may be possible to get reasonable estimates from the weight-length relationship and mean lengths at age.\n \n\n\nReferences\n\n\nBeyer, J. E. 1991. On length-weight relationships. Part II. Computing mean weights from length statistics. FishByte 9:50–54.\n\n\nNielsen, L. A., and W. F. Schoch. 1980. Errors in estimating mean weight and other statistics from mean length. Transactions of the American Fisheries Society 109(3):319–322.\n\n\nPienaar, J. V., and W. K. Ricker. 1968. Estimating mean weight from length statistics. Journal of the Fisheries Research Board of Canada 25(12):2743–2747.\n\n\nRicker, W. E. 1975. Computation and Interpretation of Biological Statistics of Fish Populations. Bulletin of the Fisheries Research Board of Canada 191.\n\n\nTesch, F. W. 1971. Age and Growth. Pages 97–130 in W. E. Ricker, editor. Methods for {Assessment} of {Fish} {Populations}, 2nd edition. Blackwell Scientific Publications, Oxford, England.\n\n\n \n\n\nAppendix: Summaries Using Different Values of b and SDs\n\n\n\n\n\n\n\nage3\nage4\nage5\nage6\nage7\nage8\n\n\n\n\nNo correction\n-1.55\n-1.28\n-1.06\n-0.91\n-0.84\n-0.90\n\n\nNormal (eqn 18)\n-0.43\n-0.47\n-0.39\n-0.34\n-0.33\n-0.43\n\n\nLognormal (eqn 16)\n-0.43\n-0.47\n-0.39\n-0.34\n-0.33\n-0.43\n\n\n\nSummary table with everything the same but b=2.5. \n\n \n\n\n\n\n\n\n\nage3\nage4\nage5\nage6\nage7\nage8\n\n\n\n\nNo correction\n-2.21\n-1.74\n-1.48\n-1.38\n-1.16\n-1.17\n\n\nNormal (eqn 18)\n-0.44\n-0.46\n-0.42\n-0.48\n-0.34\n-0.39\n\n\nLognormal (eqn 16)\n-0.42\n-0.46\n-0.42\n-0.48\n-0.33\n-0.39\n\n\n\nSummary table with everything the same but b=3.0. \n\n \n\n\n\n\n\n\n\nage3\nage4\nage5\nage6\nage7\nage8\n\n\n\n\nNo correction\n-3.07\n-2.29\n-2.04\n-1.73\n-1.59\n-1.50\n\n\nNormal (eqn 18)\n-0.47\n-0.42\n-0.52\n-0.41\n-0.40\n-0.40\n\n\nLognormal (eqn 16)\n-0.45\n-0.41\n-0.51\n-0.40\n-0.39\n-0.39\n\n\n\nSummary table with everything the same but b=3.5. \n\n \n\n\n\n\n\n\n\nage3\nage4\nage5\nage6\nage7\nage8\n\n\n\n\nNo correction\n-5.98\n-4.50\n-3.82\n-3.32\n-2.93\n-2.75\n\n\nNormal (eqn 18)\n-0.38\n-0.46\n-0.48\n-0.42\n-0.28\n-0.28\n\n\nLognormal (eqn 16)\n-0.26\n-0.40\n-0.44\n-0.39\n-0.25\n-0.26\n\n\n\nSummary table with everything the same but SDs at 50. \n\n \n\n\n\n\n\n\n\nage3\nage4\nage5\nage6\nage7\nage8\n\n\n\n\nNo correction\n-10.66\n-8.03\n-6.71\n-5.84\n-5.20\n-4.96\n\n\nNormal (eqn 18)\n-0.36\n-0.36\n-0.44\n-0.30\n-0.23\n-0.27\n\n\nLognormal (eqn 16)\n0.09\n-0.12\n-0.28\n-0.17\n-0.13\n-0.18\n\n\n\nSummary table with everything the same but SDs at 70. \n\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{h.ogle2017,\n  author = {Derek H. Ogle},\n  title = {Mean {Weights} at {Ages} {From} {Lengths}},\n  date = {2017-08-09},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2017-8-9_Mean_Weights},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDerek H. Ogle. 2017, August 9. Mean\nWeights at Ages From Lengths."
  },
  {
    "objectID": "blog/posts/2018-3-30_Collapsing_Categories_or_Values/index.html",
    "href": "blog/posts/2018-3-30_Collapsing_Categories_or_Values/index.html",
    "title": "Collapsing Categories or Values",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below. The plyr package is also used but it is not loaded because I am only going to use one specific function from plyr (i.e., mapvalues()).]\n\n\n\nlibrary(dplyr)   # for mutate(), case_when()\nlibrary(forcats) # for fct_recode(), fct_collapse()\n\n \n\nIntroduction\nI have received a few queries recently that can be categorized as “How do I collapse a list of categories or values into a shorter list of categories or values?” For example, one user wanted to collapse species of fish into their respective families. Another user wanted to collapse years into decades. Data wrangling such as this is common in fisheries and is briefly described below.\n \n\n\nSample Data\nThe following creates a very simple sample of 250 individuals on which the species (as a short abbreviation) and year of capture were recorded. Because I am creating random example data below, I set the random number seed to make the results reproducible.\n\nset.seed(678394)  # for reproducibility of random data\nn <- 250          # to allow easily changing sample size\ndat <- data.frame(species=sample(c(\"BLG\",\"LMB\",\"PKS\",\"WAE\",\"YEP\",\"CRP\"),\n                                 n,replace=TRUE),\n                  year=sample(1980:2017,n,replace=TRUE))\nhead(dat)\n\n#R|    species year\n#R|  1     YEP 1996\n#R|  2     PKS 2005\n#R|  3     PKS 2013\n#R|  4     YEP 2014\n#R|  5     CRP 2016\n#R|  6     PKS 2006\n\n\n \n\n\nRecode Categories\nThis example demonstrates how to change the codes in one variable (e.g., species abbreviations) to new codes in another variable (e.g., long species names).\nBefore recoding I find it easier to create a vector that contains the original codes to convert from. For example, unique() extracts the vector of species abbreviations found in the species variable of the example data, which I then saved in short and alphabetized to make the next steps easier.\n\nshort <- unique(dat$species) |>\n  sort()\nshort\n\n#R|  [1] \"BLG\" \"CRP\" \"LMB\" \"PKS\" \"WAE\" \"YEP\"\n\n\nIn addition, I also create a vector of codes that these codes will be converted to. For example, the long vector below contains the long-form names for each species (in the same order as the abbreviations in short)\n\nlong <- c(\"Bluegill\",\"Carp\",\"Largemouth Bass\",\n          \"Pumpkinseed\",\"Walleye\",\"Yellow Perch\")\n\nYou should “column-bind” these two vectors together to ensure that the codes align.\n\ncbind(short,long)\n\n#R|       short long             \n#R|  [1,] \"BLG\" \"Bluegill\"       \n#R|  [2,] \"CRP\" \"Carp\"           \n#R|  [3,] \"LMB\" \"Largemouth Bass\"\n#R|  [4,] \"PKS\" \"Pumpkinseed\"    \n#R|  [5,] \"WAE\" \"Walleye\"        \n#R|  [6,] \"YEP\" \"Yellow Perch\"\n\n\nThe mapvalues() function (from plyr) may be used to efficiently recode character (or factor) values.1 Because mapvalues() operates on a vector, it should be used within mutate() (from dplyr) to add a new variable with the recoded values to a data frame. Within mutate() the first argument to mapvalues() is the variable that contains the original data to be recoded. A vector of categories to code from is given in from= and a vector of new categories to code to is given in to=. For example, the combined use of mutate() and mapvalues() below demonstrates creating a new variable in the data frame with the long species names.1 The use of plyr:: in front of mapvalues() ensures that mapvalues() from plyr and not another package will be used and allows for not loading the entire plyr package.\n\ndat <- dat |>\n  mutate(speciesL=plyr::mapvalues(species,from=short,to=long))\nhead(dat)\n\n#R|    species year     speciesL\n#R|  1     YEP 1996 Yellow Perch\n#R|  2     PKS 2005  Pumpkinseed\n#R|  3     PKS 2013  Pumpkinseed\n#R|  4     YEP 2014 Yellow Perch\n#R|  5     CRP 2016         Carp\n#R|  6     PKS 2006  Pumpkinseed\n\n\n \n\n\n\n\n\n\nInformation\n\n\n\nThis use of mapvalues() and mutate() is described in Section 2.2.7 of my book Introductory Fisheries Analyses with R.\n\n\n \nThe fct_recode() function (from forcats) can also be used to recode categories. Within mutate() the first argument to fct_recode() is the original factor variable. Subsequent arguments are of the form new level name equal to old level name.2 For example, the same recoding to long species name is shown below.2 Any levels not listed in fct_recode() will be retained with their original names.\n\ndat <- dat |>\n  mutate(speciesL2=fct_recode(species,\n                              \"Bluegill\" = \"BLG\",\n                              \"Carp\" = \"CRP\",\n                              \"Largemouth Bass\" = \"LMB\",\n                              \"Pumpkinseed\" = \"PKS\",\n                              \"Walleye\" = \"WAE\",\n                              \"Yellow Perch\" = \"YEP\"))\nhead(dat)\n\n#R|    species year     speciesL    speciesL2\n#R|  1     YEP 1996 Yellow Perch Yellow Perch\n#R|  2     PKS 2005  Pumpkinseed  Pumpkinseed\n#R|  3     PKS 2013  Pumpkinseed  Pumpkinseed\n#R|  4     YEP 2014 Yellow Perch Yellow Perch\n#R|  5     CRP 2016         Carp         Carp\n#R|  6     PKS 2006  Pumpkinseed  Pumpkinseed\n\n\n \n\n\nCollapse Categories\nIn some instances, one may want to collapse some categories into a single category (e.g., species into a family). This is easily accomplished with mapvalues() or fct_recode() by simply repeating some of the “to” categories. For example, family contains family names that correspond to the species names in the data frame. Note how multiple species have the same family name category.\n\nfam <- c(\"Centrarchidae\",\"Cyprinidae\",\"Centrarchidae\",\n         \"Centrarchidae\",\"Percidae\",\"Percidae\")\ncbind(short,long,fam)\n\n#R|       short long              fam            \n#R|  [1,] \"BLG\" \"Bluegill\"        \"Centrarchidae\"\n#R|  [2,] \"CRP\" \"Carp\"            \"Cyprinidae\"   \n#R|  [3,] \"LMB\" \"Largemouth Bass\" \"Centrarchidae\"\n#R|  [4,] \"PKS\" \"Pumpkinseed\"     \"Centrarchidae\"\n#R|  [5,] \"WAE\" \"Walleye\"         \"Percidae\"     \n#R|  [6,] \"YEP\" \"Yellow Perch\"    \"Percidae\"\n\n\nThe example below shows how to convert the species name abbreviations to family names. In addition, the last use of mapvalues() shows how to change the long-form names to family names. This last example is, of course, repetitive, but it is used here to demonstrate how mutate() allows a variable that was “just created” to be immediately used.\n\ndat <- dat |>\n  mutate(family=plyr::mapvalues(species,from=short,to=fam),\n         family2=plyr::mapvalues(speciesL,from=long,to=fam))\nhead(dat)\n\n#R|    species year     speciesL    speciesL2        family       family2\n#R|  1     YEP 1996 Yellow Perch Yellow Perch      Percidae      Percidae\n#R|  2     PKS 2005  Pumpkinseed  Pumpkinseed Centrarchidae Centrarchidae\n#R|  3     PKS 2013  Pumpkinseed  Pumpkinseed Centrarchidae Centrarchidae\n#R|  4     YEP 2014 Yellow Perch Yellow Perch      Percidae      Percidae\n#R|  5     CRP 2016         Carp         Carp    Cyprinidae    Cyprinidae\n#R|  6     PKS 2006  Pumpkinseed  Pumpkinseed Centrarchidae Centrarchidae\n\n\nThe “collapsing” of multiple levels into one level can also be accomplished with fct_collapse() (from forcats). The first argument to this function is again the variable containing the “old” levels. Subsequent arguments are formed by setting a new level name equal to a vector containing old level names to collapse.\n\ndat <- dat |>\n  mutate(family3=fct_collapse(species,\n                              \"Centarchidae\" = c(\"BLG\",\"PKS\",\"LMB\"),\n                              \"Percidae\" = c(\"WAE\",\"YEP\"),\n                              \"Cyprinidae\" = c(\"CRP\")))\nhead(dat)\n\n#R|    species year     speciesL    speciesL2        family       family2\n#R|  1     YEP 1996 Yellow Perch Yellow Perch      Percidae      Percidae\n#R|  2     PKS 2005  Pumpkinseed  Pumpkinseed Centrarchidae Centrarchidae\n#R|  3     PKS 2013  Pumpkinseed  Pumpkinseed Centrarchidae Centrarchidae\n#R|  4     YEP 2014 Yellow Perch Yellow Perch      Percidae      Percidae\n#R|  5     CRP 2016         Carp         Carp    Cyprinidae    Cyprinidae\n#R|  6     PKS 2006  Pumpkinseed  Pumpkinseed Centrarchidae Centrarchidae\n#R|         family3\n#R|  1     Percidae\n#R|  2 Centarchidae\n#R|  3 Centarchidae\n#R|  4     Percidae\n#R|  5   Cyprinidae\n#R|  6 Centarchidae\n\n\n \n\n\nCollapse Values into Categories\nIt is also common to categorize a numeric variable. For example, a “decade” variable is derived from the year variable in this example.\nThe case_when() function (from dplyr) may be used to efficiently collapse discrete values into categories. This function also operates on vectors and, thus, must be used with mutate() to add a variable to a data frame. The arguments to case_when() are a series of two-sided formulae where the left-side is a conditioning statement based on the original data and the right-side is the value that should appear in the new variable when that condition is TRUE. For example, the first line in case_when() below asks “if the year variable is in the values from 1980 to 1989 then the new category should be ‘1980s’.”3 For example, the code below creates a new variable called decade that identifies the decade that corresponds to the year-of-capture variable.3 The colon operator creates a sequence of all integers between the two numbers separated by the colon. The %in% is used on conditional statements to determine if a value is contained within a vector, returning TRUE if it is and FALSE if it is not.\n\ndat <- dat |>\n  mutate(decade=case_when(\n    year %in% 1980:1989 ~ \"1980s\",\n    year %in% 1990:1999 ~ \"1990s\",\n    year %in% 2000:2009 ~ \"2000s\",\n    year %in% 2010:2019 ~ \"2010s\"\n  ))\nhead(dat)\n\n#R|    species year     speciesL    speciesL2        family       family2\n#R|  1     YEP 1996 Yellow Perch Yellow Perch      Percidae      Percidae\n#R|  2     PKS 2005  Pumpkinseed  Pumpkinseed Centrarchidae Centrarchidae\n#R|  3     PKS 2013  Pumpkinseed  Pumpkinseed Centrarchidae Centrarchidae\n#R|  4     YEP 2014 Yellow Perch Yellow Perch      Percidae      Percidae\n#R|  5     CRP 2016         Carp         Carp    Cyprinidae    Cyprinidae\n#R|  6     PKS 2006  Pumpkinseed  Pumpkinseed Centrarchidae Centrarchidae\n#R|         family3 decade\n#R|  1     Percidae  1990s\n#R|  2 Centarchidae  2000s\n#R|  3 Centarchidae  2010s\n#R|  4     Percidae  2010s\n#R|  5   Cyprinidae  2010s\n#R|  6 Centarchidae  2000s\n\n\nThe lines in case_when() operate sequentially (like a series of “if” statements) such that the above operation can be more succinctly coded as below. Also note in this example that the resulting variable is numeric rather than categorical (simply as an example).\n\ndat <- dat |>\n  mutate(decade2=case_when(\n    year <= 1989 ~ 1980,\n    year <= 1999 ~ 1990,\n    year <= 2009 ~ 2000,\n    year <= 2019 ~ 2010,\n  ))\nhead(dat)\n\n#R|    species year     speciesL    speciesL2        family       family2\n#R|  1     YEP 1996 Yellow Perch Yellow Perch      Percidae      Percidae\n#R|  2     PKS 2005  Pumpkinseed  Pumpkinseed Centrarchidae Centrarchidae\n#R|  3     PKS 2013  Pumpkinseed  Pumpkinseed Centrarchidae Centrarchidae\n#R|  4     YEP 2014 Yellow Perch Yellow Perch      Percidae      Percidae\n#R|  5     CRP 2016         Carp         Carp    Cyprinidae    Cyprinidae\n#R|  6     PKS 2006  Pumpkinseed  Pumpkinseed Centrarchidae Centrarchidae\n#R|         family3 decade decade2\n#R|  1     Percidae  1990s    1990\n#R|  2 Centarchidae  2000s    2000\n#R|  3 Centarchidae  2010s    2010\n#R|  4     Percidae  2010s    2010\n#R|  5   Cyprinidae  2010s    2010\n#R|  6 Centarchidae  2000s    2000\n\nstr(dat)\n\n#R|  'data.frame':  250 obs. of  9 variables:\n#R|   $ species  : chr  \"YEP\" \"PKS\" \"PKS\" \"YEP\" ...\n#R|   $ year     : int  1996 2005 2013 2014 2016 2006 2002 2012 2013 2014 ...\n#R|   $ speciesL : chr  \"Yellow Perch\" \"Pumpkinseed\" \"Pumpkinseed\" \"Yellow Perch\" ...\n#R|   $ speciesL2: Factor w/ 6 levels \"Bluegill\",\"Carp\",..: 6 4 4 6 2 4 5 1 3 6 ...\n#R|   $ family   : chr  \"Percidae\" \"Centrarchidae\" \"Centrarchidae\" \"Percidae\" ...\n#R|   $ family2  : chr  \"Percidae\" \"Centrarchidae\" \"Centrarchidae\" \"Percidae\" ...\n#R|   $ family3  : Factor w/ 3 levels \"Centarchidae\",..: 3 1 1 3 2 1 3 1 1 3 ...\n#R|   $ decade   : chr  \"1990s\" \"2000s\" \"2010s\" \"2010s\" ...\n#R|   $ decade2  : num  1990 2000 2010 2010 2010 2000 2000 2010 2010 2010 ...\n\n\n \n\n\n\n\n\n\nWarning\n\n\n\nYou may be motivated from this example to use case_when() to develop a length category variable from measure lengths. While this is possible it is not efficient as you would have several conditions within case_when() (to span all measured lengths) and you would need to make sure that your conditions covered the range of measured lengths. I urge you to examine lencat() in FSA for the purpose of creating length categories (see examples here).\n\n\n \n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{h.ogle2018,\n  author = {Derek H. Ogle},\n  title = {Collapsing {Categories} or {Values}},\n  date = {2018-03-30},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2018-3-30_Collapsing_Categories_or_Values},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDerek H. Ogle. 2018, March 30. Collapsing\nCategories or Values."
  },
  {
    "objectID": "blog/posts/2019-12-28_Length_Frequency_Histograms/index.html",
    "href": "blog/posts/2019-12-28_Length_Frequency_Histograms/index.html",
    "title": "Length Frequency Histograms in ggplot2",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below. I also set the default ggplot theme to theme_bw() for a classic “black-and-white” plot (rather than the default plot with a gray background).\n\n\n\nlibrary(ggplot2)\ntheme_set(theme_bw())\n\n \n\nIntroduction\nA common graphic produced by many fisheries scientists is a length frequency histogram. As it turns out there are a few “tricks” to make a length frequency histogram appear as I expect most fisheries folks would want it to appear – primarily, left-inclusive (i.e., 100 would be in the 100-110 bin and not the 90-100 bin). In this post, I show how to construct a length frequency histograms with ggplot2 using my preferences.\nThe data are lengths of Lake Erie Walleye (Sander vitreus) captured during October-November, 2003-2014.1 My primary interest is in the tl (total length in mm), sex, and loc variables2 and I will focus on 2014 (as an example).1 These data are available in the FSAdata package and formed many of the examples in Chapter 12 of the Age and Growth of Fishes: Principles and Techniques book.2 See here for more details\n\ndata(WalleyeErie2,package=\"FSAdata\")\nWE <- dplyr::filter(WalleyeErie2,year==2014)\n\n \n\n\nBasic Length Frequency\nMaking the histogram (Figure 1) begins by identifying the data frame to use in data= and the tl variable to use for the x-axis as an aes()thetic in ggplot(). The histogram is then constructed with geom_histogram(), which I customize as follows:\n\nSet the width of the length bins with binwidth=.\nBy default the bins are centered on breaks created from binwidth=. The bins can be changed to begin on these breaks by using boundary= set to the desired value of a first break, regardless of whether that break is in the data or not. I use boundary=0 so that bins will start on breaks that make sense relative to binwidth= (e.g., 0, 25, 50, 75, etc.).\nBins are left-exclusive and right-inclusive by default. Use closed=\"left\" to make the bins the desired left-inclusive and right-exclusive.\nThe fill color of the bins is set with fill= (I prefer a slight gray).\nThe outline color of the bins is set with color= (defaults to the same as fill=; I prefer a dark boundary to make the bins obvious).\n\nThe scale_y_continuous() and scale_x_continuous() are primarily used to provide labels (i.e., names) for the y- and x-axes, respectively. By default, the bins of the histogram will “hover” slightly above the x-axis, which I find annoying. The expand= in scale_y_continuous() is used to expand the lower limit of the y-axis by a multiple of 0 (thus, not expand the lower-limit) and expand the upper limit of the y-axis by a multiple of 0.05 (thus, the upper-limit will by 5% higher than the tallest bin so that the top frame of the plot will not touch the tallest bin).33 The resultant plot was assigned to an object so that name must be typed and run to see the plot.\n\nlenfreq1 <- ggplot(data=WE,aes(x=tl)) +\n  geom_histogram(binwidth=25,boundary=0,closed=\"left\",\n                 fill=\"gray80\",color=\"black\") +\n  scale_y_continuous(name=\"Number of Fish\",expand=expansion(mult=c(0,0.05))) +\n  scale_x_continuous(name=\"Total Length (mm)\")\nlenfreq1\n\n\n\n\nFigure 1: Length frequency of histogram of Lake Erie Walleye, 2014.\n\n\n\n\nThis base object/plot can be modified by adding (using +) to it as demonstrated later.\n \n\n\nStacked by Other Variable\nIt may be useful to see the distribution of categories of fish (e.g., sex) within the length frequency bins (Figure 2). To do this, add fill= in the aes()thetic in ggplot() and set it equal to the variable that identifies the separation within each bin (e.g., sex). The bins will be stacked by this variable if position=\"stack\" in geom_histogram().4 The fill colors for each group can be set in a number of ways, but they are set manually below with scale_fill_manual().4 This is the default and would not need to be explicitly set below).\n\nlenfreq2 <- ggplot(data=WE,aes(x=tl,fill=sex)) +\n  geom_histogram(binwidth=25,boundary=0,closed=\"left\",\n                 color=\"black\",position=\"stack\") +\n  scale_fill_manual(values=c(\"gray80\",\"gray40\")) +\n  scale_y_continuous(name=\"Number of Fish\",expand=expansion(mult=c(0,0.05))) +\n  scale_x_continuous(name=\"Total Length (mm)\")\nlenfreq2\n\n\n\n\nFigure 2: Length frequency histogram of Lake Erie Walleye 2014 stacked by sex.\n\n\n\n\nStacked histograms are difficult to interpret in my opinion. In a future post, I will show how to use empirical density functions to examine distributions among categories. For the time being, see below.\n \n\n\nSeparated by Other Variable(s)\nA strength of ggplot2 is that it can easily make the same plot for several different levels of another variable; e.g., separate length frequency histograms by sex (Figure 3). The plot (e.g., lenfreq from above) can be separated into different “facets” with facet_wrap(), which takes the variable to separate by within vars() as the first argument.\n\nlenfreq1 + facet_wrap(vars(sex))\n\n\n\n\nFigure 3: Length frequency histogram of Lake Erie Walleye 2014 separated by sex.\n\n\n\n\nIf the faceted groups have very different sample sizes then it may be useful to use a potentially different y-axis scale for each facet by including scales=\"free_y\" in facet_wrap() (Figure 4). Similarly, a potentially different scale can be used for each x-axis with scales=\"free_x\" or for both axes with scales=\"free\".\n\nlenfreq1 + facet_wrap(vars(sex),scales=\"free_y\")\n\n\n\n\nFigure 4: Length frequency histogram of Lake Erie Walleye 2014 separated by sex with different frequency scales.\n\n\n\n\nPlots may be faceted over multiple variables with facet_grid() (Figure 5), where the variables that identify the rows and variables for a grid of facets are included (within vars()) in rows= and cols=, respectively. Both scales can not be “free” with facet_grid(), the scale can only be “free” within a row or column.\n\nlenfreq1 + facet_grid(rows=vars(loc),cols=vars(sex),scales=\"free_y\")\n\n\n\n\nFigure 5: Length frequency histogram of Lake Erie Walleye 2014 separated by sex and location of capture with different frequency scales.\n\n\n\n\n\n\n#R> png \n#R>   2\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{h.ogle2019,\n  author = {Derek H. Ogle},\n  title = {Length {Frequency} {Histograms} in Ggplot2},\n  date = {2019-12-28},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2019-12-28_Length_Frequency_Histograms},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDerek H. Ogle. 2019, December 28. Length\nFrequency Histograms in ggplot2."
  },
  {
    "objectID": "blog/posts/2019-12-31_vonB_plots_1/index.html",
    "href": "blog/posts/2019-12-31_vonB_plots_1/index.html",
    "title": "von Bertalanffy Growth Plots I",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below. One function from investr is also used but the whole package is not loaded here. The data are also from FSAdata, which is not loaded below. I also set the default ggplot theme to theme_bw() for a classic “black-and-white” plot (rather than the default plot with a gray background).\n\n\n\nlibrary(FSA)     # for vbFuns(), vbStarts(), headtail()\nlibrary(dplyr)   # for filter(), mutate()\nlibrary(ggplot2)\ntheme_set(theme_bw())\n\n \n\nIntroduction\nThe most common questions that I receive through the fishR website are related to fitting a von Bertalanffy growth function (VBGF) to data and viewing the results. In this post, I briefly demonstrate how to fit a VBGF to a single group of data and then provide several options for how to view the fit of the function to those data.\nI will use lengths and ages of Lake Erie Walleye (Sander vitreus) captured during October-November, 2003-2014 available in FSAdata package. These data formed many of the examples in Ogle et al. (2017). My primary interest here is in the tl (total length in mm) and age variables1. I focus on female Walleye from location “1” captured in 2014 in this example.21 See more details about the data.2 For succinctness, I removed year and sex as they only had one category after filtering and three variables related to the location of capture.\n\ndata(WalleyeErie2,package=\"FSAdata\")\nwf14T <- WalleyeErie2 |>\n  filter(year==2014,sex==\"female\",loc==1) |>\n  select(-year,-sex,-setID,-loc,-grid)\nheadtail(wf14T)\n\n#R|       tl    w      mat age\n#R|  1   445  737 immature   2\n#R|  2   528 1571   mature   4\n#R|  3   380  506 immature   1\n#R|  323 488 1089 immature   2\n#R|  324 521 1408   mature   3\n#R|  325 565 1745   mature   3\n\n\n \n\n\nFitting the VBGF\nMethods for fitting a von Bertalannfy growth function (VBGF) are detailed in Ogle (2016) and Ogle et al. (2017). Thus, this methodology will only be briefly explained here.\nA function for the typical VBGF is constructed with vbFuns().33 Other parameterizations of the VBGF can be used with param= in vbFuns() as described in its documentation.\n\n( vb <- vbFuns(param=\"Typical\") )\n\n#R|  function (t, Linf, K = NULL, t0 = NULL) \n#R|  {\n#R|      if (length(Linf) == 3) {\n#R|          K <- Linf[[2]]\n#R|          t0 <- Linf[[3]]\n#R|          Linf <- Linf[[1]]\n#R|      }\n#R|      Linf * (1 - exp(-K * (t - t0)))\n#R|  }\n#R|  <bytecode: 0x0000021ea3404098>\n#R|  <environment: 0x0000021ea3450018>\n\n\nSome of the methods below use the fact that the three parameters of the typical VBGF (\\(L_{\\infty}\\), \\(K\\), \\(t_{0}\\)) can be given to this function separately (in that order) or as a vector (still in that order). For example, both lines below can be used to predict the mean length for an age-3 fish with the given VBGF parameters.44 The paramters could be given in a different order but would need to be named; e.g., vb(3,t0=-0.5,K=0.3,Linf=300).\n\nvb(3,300,0.3,-0.5)\n\n#R|  [1] 195.0187\n\ntmp <- c(300,0.3,-0.5) \nvb(3,tmp)\n\n#R|  [1] 195.0187\n\n\nReasonable starting values for the optimization algorithm may be obtained with vbStarts(), where the first argument is a formula of the form lengths~ages where lengths and ages are replaced with the actual variable names that contain the observed lengths and ages, respectively, and data= is set to the data frame that contains those variables.\n\n( sv0 <- vbStarts(tl~age,data=wf14T) )\n\n#R|  $Linf\n#R|  [1] 645.2099\n#R|  \n#R|  $K\n#R|  [1] 0.3482598\n#R|  \n#R|  $t0\n#R|  [1] -1.548925\n\n\nThe nls() function is typically used to estimate parameters of the VBGF from observed data. The first argument is a formula that has lengths on the left-hand-side and the VBGF function created above on the right-hand-side. The VBGF function has the ages variable as its first argument and then Linf, K, and t0 as the remaining arguments (just as they appear here). Again, the data frame with the observed lengths and ages is given to data= and the starting values derived above are given to start=.\n\nfit0 <- nls(tl~vb(age,Linf,K,t0),data=wf14T,start=sv0)\n\nThe parameter estimates and confidence intervals are extracted from the saved nls() object with coef() and confint(), respectively.5 They are column-bound together here for aesthetic reasons.5 This confint() requires the MASS package which is usually loaded automatically with base R.\n\ncbind(Est=coef(fit0),confint(fit0))\n\n#R|              Est        2.5%       97.5%\n#R|  Linf 648.208364 629.6754671 669.0341553\n#R|  K      0.361540   0.3223327   0.4043957\n#R|  t0    -1.283632  -1.4592315  -1.1207317\n\n\n \n\n\nModel Fit Using stat_function()\nHere all “layers” of the plot will use the same data; thus, data= and the aes()thetic mappings are defined in ggplot(). Observed lengths and ages are added to the plot with geom_point(). The points in Figure 1 were made slightly larger than the default (with size=) and also with a fairly low transparency value to handle considerable over-plotting. scale_y_continuous() and scale_x_continuous() control aspects of y- and x-axes, respectively – labels for axes are given in name=, minimum and maximum limits for the axis are in limits=, and specific major breaks for the axis are in breaks=.6 Finally, the fitted model line is added to the plot with stat_function() with the VBGF function created above in fun= and a list of arguments to this function in args=.7 In Figure 1 I made the model line a little wider than the default. Finally the theme() was modified to remove the minor grid lines from both axes.86 seq(0,700,100) makes a vector of numbers from 0 to 700 in increments of 100 and 0:11 makes a vector of integers from 0 to 11.7 The usage here exploits the fact that all three parameters of the VBGF can be given in the first parameter argument, Linf=.8 Thus the gridlines only appear for labelled axis breaks.\n\nggplot(data=wf14T,aes(x=age,y=tl)) +\n  geom_point(size=2,alpha=0.1) +\n  scale_y_continuous(name=\"Total Length (mm)\",\n                     limits=c(0,700),breaks=seq(0,700,100)) +\n  scale_x_continuous(name=\"Age (years)\",breaks=0:11) +\n  stat_function(fun=vb,args=list(Linf=coef(fit0)),linewidth=1) +\n  theme(panel.grid.minor=element_blank())\n\n\n\n\nFigure 1: Fit of typical von Bertalanffy growth function to female Lake Erie Walleye in 2014.\n\n\n\n\n \nThe model line can be displayed outside the range of observed ages by including minimum and maximum values in xlim= over which the function in fun= will be evaluated. In Figure 2 I add a dashed line for the model that includes evaluation at ages outside the observed range of ages (first stat_function()) and then plotted the model line for observed ages on top of that (second stat_function()). This gives the impression of using a dashed line only for the ages that would be extrapolated.99 I would usually change the axis expansion factors here to clean this plot up a bit.\n\nggplot(data=wf14T,aes(x=age,y=tl)) +\n  geom_point(size=2,alpha=0.1) +\n  scale_y_continuous(name=\"Total Length (mm)\",limits=c(0,700)) +\n  scale_x_continuous(name=\"Age (years)\",breaks=0:11) +\n  stat_function(fun=vb,args=list(Linf=coef(fit0)),\n                xlim=c(-1,12),linewidth=1,linetype=\"dashed\") +\n  stat_function(fun=vb,args=list(Linf=coef(fit0)),linewidth=1) +\n  theme(panel.grid.minor=element_blank())\n\n\n\n\nFigure 2: Fit of typical von Bertalanffy growth function to female Lake Erie Walleye in 2014. The dashed line shows the model fit outside the range of observed ages.\n\n\n\n\n \n\n\nModel Fit Using geom_smooth()\ngeom_smooth() can use nls() to fit the VBGF “behind the scenes” and then add the resultant model line to the plot. For this purpose geom_smooth() requires method=\"nls\" and se=FALSE.10 In addition, arguments for fitting the VBGF required by nls() must be in a list given to methods.args=. Minimum required arguments for fitting the VBGF are the VBGF formula= and start=ing values as shown for nls() above. Figure 3 uses geom_smooth() in this way to reproduce Figure 1.10 se=FALSE is required because this argument is not implemented in nls().\n\nggplot(data=wf14T,aes(x=age,y=tl)) +\n  geom_point(size=2,alpha=0.1) +\n  scale_y_continuous(name=\"Total Length (mm)\",limits=c(0,700)) +\n  scale_x_continuous(name=\"Age (years)\",breaks=0:11) +\n  geom_smooth(method=\"nls\",se=FALSE,\n              method.args=list(formula=y~vb(x,Linf,K,t0),start=sv0),\n              color=\"black\",linewidth=1) +\n  theme(panel.grid.minor.x=element_blank())\n\n\n\n\nFigure 3: Fit of typical von Bertalanffy growth function to female Lake Erie Walleye in 2014.\n\n\n\n\n \n\n\nModel Fit from Predicted Values\nFigure 1 and Figure 2 can also be constructed from lengths predicted at a variety of ages “outside” of any ggplot() layers. I find it easier when using this method to first create a vector of ages over which the fitted model will be evaluated is then constructed. In this case the ages extend beyond the observed range of ages. The seq()uence produced here will have 101 age values between -1 and 12.1111 Use a larger value for length.out= to make the line produced further below more smooth.\n\nages <- seq(-1,12,length.out=101)\n\nThe mean length at each of these ages is predicted with predict(), where the age vector just created is set equal to the name of the age variable in the nls() object inside of data.frame(). The vector of ages and predicted mean lengths are put into a data frame for plotting below.1212 Here the data frame is called preds and it has two variables named age and fit.\n\npreds <- data.frame(age=ages,\n                    fit=predict(fit0,data.frame(age=ages)))\nheadtail(preds)\n\n#R|        age       fit\n#R|  1   -1.00  63.17547\n#R|  2   -0.87  90.03596\n#R|  3   -0.74 115.66322\n#R|  99  11.74 642.36300\n#R|  100 11.87 642.63138\n#R|  101 12.00 642.88743\n\n\n \nThese predicted mean lengths-at-age are then used to add a fitted model line to a plot of observed lengths-at-age with geom_line(). However, because the observed and predicted data are in different data frames, the data= and mapped aes()thetics are declared within the appropriate geoms rather than within ggplot(). For example, geom_point() is used below to add the observed data to the plot and geom_line() is used below to add the modeled line. Note below that separate geom_line()s are used to show the modeled line over extrapolated and observed ages.13 The results in Figure 4 reproduce Figure 2.13 Also note the use of filter() to reduce the predicted lengths-at-age to the observed ages.\n\nggplot() +\n  geom_point(data=wf14T,aes(x=age,y=tl),size=2,alpha=0.1) +\n  geom_line(data=preds,aes(x=age,y=fit),linewidth=1,linetype=\"dashed\") +\n  geom_line(data=filter(preds,age>=0,age<=11),aes(x=age,y=fit),linewidth=1) +\n  scale_y_continuous(name=\"Total Length (mm)\",limits=c(0,700)) +\n  scale_x_continuous(name=\"Age (years)\",breaks=0:11) +\n  theme(panel.grid.minor=element_blank())\n\n\n\n\nFigure 4: Fit of typical von Bertalanffy growth function to female Lake Erie Walleye in 2014. The dashed line shows the model fit outside the range of observed ages.\n\n\n\n\n \n\n\nModel Fit with Confidence Band\nThe main reason for introducing the idea of constructing a graphic from predicted values is that it allows for the opportunity to add confidence and prediction bands around the fitted model line (Figure 5).\nCreation of this plot requires modifying the data frame of predicted mean lengths at age with confidence (or prediction) intervals for the mean length at each age. As mentioned previously, constructing these intervals is not straightforward with non-linear models. However, confidence (or prediction) intervals can be estimated with Taylor series approximations as implemented in predFit() of investr.14 predFit() requires the saved nls() object as its first argument, a data frame of ages over which to make predictions as the second argument, and either interval=\"confidence\" for confidence intervals or interval=\"prediction\" for prediction intervals.14 Use of :: here allows predFit() from investr to be used without loading all of investr.\n\npreds <- data.frame(age=ages,\n                    investr::predFit(fit0,data.frame(age=ages),\n                                     interval=\"confidence\"))\nheadtail(preds)\n\n#R|        age       fit       lwr       upr\n#R|  1   -1.00  63.17547  32.40761  93.94334\n#R|  2   -0.87  90.03596  62.76575 117.30618\n#R|  3   -0.74 115.66322  91.59342 139.73301\n#R|  99  11.74 642.36300 625.59243 659.13357\n#R|  100 11.87 642.63138 625.76065 659.50210\n#R|  101 12.00 642.88743 625.91982 659.85504\n\n\nA confidence band for mean lengths at age is added to the plot with geom_ribbon() where the lower part of the ribbon is at the lower confidence values (i.e., ymin=lwr) and the upper part is at the upper confidence value (i.e., ymax=upr).15 fill= gives the color of the enclosed ribbon.15 Add geom_ribbon() first so that it is behind the points and model lines.\n\nggplot() + \n  geom_ribbon(data=preds,aes(x=age,ymin=lwr,ymax=upr),fill=\"gray80\") +\n  geom_point(data=wf14T,aes(y=tl,x=age),size=2,alpha=0.1) +\n  geom_line(data=preds,aes(x=age,y=fit),linewidth=1,linetype=\"dashed\") +\n  geom_line(data=filter(preds,age>=0,age<=11),aes(x=age,y=fit),linewidth=1) +\n  scale_y_continuous(name=\"Total Length (mm)\",limits=c(0,700)) +\n  scale_x_continuous(name=\"Age (years)\",breaks=0:11) +\n  theme(panel.grid.minor=element_blank())\n\n\n\n\nFigure 5: Fit of typical von Bertalanffy growth function to female Lake Erie Walleye in 2014 with a 95% confidence band. The dashed line shows the model fit outside the range of observed ages.\n\n\n\n\n \n\n\nAdd Equation to Plot\nThe following function can be used to extract the model coefficients from an nls() object and place them into a “plotmath” format to be added to the ggplot graph.\n\nmakeVBEqnLabel <- function(fit,digits=c(1,3,3)) {\n  # Isolate coefficients (and control decimals)\n  cfs <- coef(fit)\n  Linf <- formatC(cfs[[\"Linf\"]],format=\"f\",digits=digits[1])\n  K <- formatC(cfs[[\"K\"]],format=\"f\",digits=digits[2])\n  # Handle t0 differently because of minus in the equation\n  t0 <- cfs[[\"t0\"]]\n  t0 <- paste0(ifelse(t0<0,\"+\",\"-\"),formatC(abs(t0),format=\"f\",digits=digits[3]))\n  # Put together and return\n  paste0(\"TL==\",Linf,\"~bgroup('[',1-e^{-\",K,\"~(age\",t0,\")},']')\")\n}\n\n \nThe object returned from this function can be added to the ggplot graph with annotate() as shown below.1616 The x=, y=, hjust=, and vjust= arguments are used to position and justify the text and may take some trial-and-error to get what you want.\n\nggplot() + \n  geom_ribbon(data=preds,aes(x=age,ymin=lwr,ymax=upr),fill=\"gray80\") +\n  geom_point(data=wf14T,aes(y=tl,x=age),size=2,alpha=0.1) +\n  geom_line(data=preds,aes(x=age,y=fit),linewidth=1,linetype=\"dashed\") +\n  geom_line(data=filter(preds,age>=0,age<=11),aes(x=age,y=fit),linewidth=1) +\n  scale_y_continuous(name=\"Total Length (mm)\",limits=c(0,700)) +\n  scale_x_continuous(name=\"Age (years)\",breaks=0:11) +\n  theme(panel.grid.minor=element_blank()) +\n  annotate(geom=\"text\",label=makeVBEqnLabel(fit0),parse=TRUE,\n           size=4,x=Inf,y=-Inf,hjust=1.1,vjust=-0.5)\n\n\n\n\nFigure 6: Fit of typical von Bertalanffy growth function to female Lake Erie Walleye in 2014 with a 95% confidence band. The dashed line shows the model fit outside the range of observed ages.\n\n\n\n\n\n\n\n\n\n\n\n\n\nReferences\n\nOgle, D. H. 2016. Introductory Fisheries Analyses with R. CRC Press, Boca Raton, FL.\n\n\nOgle, D. H., T. O. Brenden, and J. L. McCormick. 2017. Growth Estimation: Growth Models and Statistical Inference. Pages 265–359 in M. C. Quist and D. A. Isermann, editors. Age and Growth of Fishes: Principles and Techniques. American Fisheries Society, Bethesda, MD.\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{h.ogle2019,\n  author = {Derek H. Ogle},\n  title = {Von {Bertalanffy} {Growth} {Plots} {I}},\n  date = {2019-12-31},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2019-12-31_vonB_plots_1},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDerek H. Ogle. 2019, December 31. von\nBertalanffy Growth Plots I."
  },
  {
    "objectID": "blog/posts/2020-1-2_vonB_plots_2/index.html",
    "href": "blog/posts/2020-1-2_vonB_plots_2/index.html",
    "title": "von Bertalanffy Growth Plots II",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below. One function from investr is also used but the whole package is not loaded here. The data are also from FSAdata, which is not loaded below. I also set the default ggplot theme to theme_bw() for a classic “black-and-white” plot (rather than the default plot with a gray background).\n\n\n\nlibrary(FSA)     # for vbFuns(), vbStarts(), headtail(), peek()\nlibrary(dplyr)   # for filter(), mutate(), group_by()\nlibrary(ggplot2)\ntheme_set(theme_bw())\n\n \n\nIntroduction\nIn a previous post I demonstrated how to plot the fit of a von Bertalanffy growth function (VBGF) for a single group of observed data. In this post, I explore methods to do the same for multiple groups of observed data (e.g., multiple sexes, locations, years).\nI will again use the lengths and ages of Lake Erie Walleye (Sander vitreus) captured during October-November, 2003-2014 available in FSAdata. These data formed many of the examples in Ogle et al. (2017). My primary interest here is in the tl (total length in mm), age, and sex variables.1 I initially focus on Walleye from location “1” captured in 2014 in this example.21 See more details about the data.2 For succinctness, I removed year as it only had one level after filtering and three variables related to the location of capture.\n\ndata(WalleyeErie2,package=\"FSAdata\")\nw14T <- WalleyeErie2 |>\n  filter(year==2014,loc==1) |>\n  select(-year,-setID,-loc,-grid)\nheadtail(w14T)\n\n#R|       tl    w    sex      mat age\n#R|  1   445  737 female immature   2\n#R|  2   528 1571 female   mature   4\n#R|  3   499 1138   male   mature   4\n#R|  612 521 1408 female   mature   3\n#R|  613 565 1745 female   mature   3\n#R|  614 530 1553   male   mature   5\n\n\nAs in the previous post, a function that uses the typical VBGF to predict mean length given a set of VBGF parameters and age is needed.33 Other parameterizations of the VBGF can be used with param= in vbFuns() as described in its documentation.\n\n( vb <- vbFuns(param=\"Typical\") )\n\n#R|  function (t, Linf, K = NULL, t0 = NULL) \n#R|  {\n#R|      if (length(Linf) == 3) {\n#R|          K <- Linf[[2]]\n#R|          t0 <- Linf[[3]]\n#R|          Linf <- Linf[[1]]\n#R|      }\n#R|      Linf * (1 - exp(-K * (t - t0)))\n#R|  }\n#R|  <bytecode: 0x000001b27db58110>\n#R|  <environment: 0x000001b27dbadee8>\n\n\n \n\n\nModel Fits Using geom_smooth()\nOne of the simpler ways to plot multiple VBGF fits uses geom_smooth(), which, as described in the previous post, uses nls() to fit the model “behind-the-scenes.” Thus, a set of starting values is needed. It is critical to note that using geom_smooth() requires the same starting values for each group. With this warning, possible starting values for the optimization algorithm may be obtained with vbStarts() as shown in the previous post.\n\n( sv0 <- vbStarts(tl~age,data=w14T) )\n\n#R|  $Linf\n#R|  [1] 591.1587\n#R|  \n#R|  $K\n#R|  [1] 0.3930388\n#R|  \n#R|  $t0\n#R|  [1] -1.544479\n\n\nThe use of geom_smooth() to produce separate lines for the groups is exactly as described in the previous post, except that the variable for identifyng the groups (i.e., sex in this example) must be mapped to the color= aes()thetic. For Figure 1 I also used scale_color_manual() to demonstrate how to change the default colors of the points and lines. Additionally, in theme() I moved the legend into the plot panel4 and removed the default sex label that would appear on top of the legend.4 In this case the legend is placed 80% down the x-axis and 20% up the y-axis.\n\nggplot(data=w14T,aes(x=age,y=tl,color=sex)) +\n  geom_point(size=2,alpha=0.3) +\n  scale_y_continuous(name=\"Total Length (mm)\",limits=c(0,700)) +\n  scale_x_continuous(name=\"Age (years)\",breaks=0:11) +\n  scale_color_manual(values=c(\"male\"=\"darkblue\",\"female\"=\"darkred\")) +\n  geom_smooth(method=\"nls\",se=FALSE,\n              method.args=list(formula=y~vb(x,Linf,K,t0),start=sv0),\n              linewidth=1) +\n  theme(panel.grid.minor.x=element_blank(),\n        legend.position=c(0.8,0.2),\n        legend.title=element_blank())\n\n\n\n\nFigure 1: Fit of typical von Bertalanffy growth function to male and female Lake Erie Walleye in 2014.\n\n\n\n\n \nAn alternative visualization is to put the two groups into separate panels using facet_wrap().5 Note that color is superfluous in Figure 2, but I kept it for comparison to Figure 1. Mapping color to a variable will produce a legend by default. This legend was removed (in theme()), however, because it is redundant with the panel labels.5 Simply put the grouping variable inside of vars() as the argument to facet_wrap().\n\nggplot(data=w14T,aes(x=age,y=tl,color=sex)) +\n  geom_point(size=2,alpha=0.3) +\n  scale_y_continuous(name=\"Total Length (mm)\",limits=c(0,700)) +\n  scale_x_continuous(name=\"Age (years)\",breaks=0:11) +\n  scale_color_manual(values=c(\"male\"=\"darkblue\",\"female\"=\"darkred\")) +\n  geom_smooth(method=\"nls\",se=FALSE,\n              method.args=list(formula=y~vb(x,Linf,K,t0),start=sv0),\n              linewidth=1) +\n  theme(panel.grid.minor.x=element_blank(),\n        legend.position=\"none\") +\n  facet_wrap(vars(sex))\n\n\n\n\nFigure 2: Fit of typical von Bertalanffy growth function to male and female Lake Erie Walleye in 2014.\n\n\n\n\n \n\n\nFitting the VBGF to Multiple Groups\nMethods for fitting a von Bertalanfy growth function (VBGF) to multiple groups are detailed in Ogle (2016) and Ogle et al. (2017). Thus, this methodology will only be briefly explained here.\nFitting the VBGF to multiple groups requires creating an expression, rather than a function, with the VBGF defined over the multiple groups. The expression below codes the VBGF using the length and age variables from the data set used here (i.e., tl and age) and assuming different parameters should be estimated for each group.6 Identifying the different groups is accomplished here by appending [group], where group is replaced with the specific variable name that identifies the groups (i.e., sex here). The expression is assigned to an object name (i.e., vbLKt here).6 See Ogle (2016) and Ogle et al. (2017) for examples of how to fit the VBGF assuming situations where some parameters differ and some do not across groups.\n\nvbLKt <- tl~Linf[sex]*(1-exp(-K[sex]*(age-t0[sex])))\n\n \nI created vectors of group names (with unique()) and the number of groups (with length()) for ease of use below.\n\n( grps <- unique(w14T$sex) )\n\n#R|  [1] female male  \n#R|  Levels: female male\n\n( ngrps <- length(grps) )\n\n#R|  [1] 2\n\n\n \nThis model has six parameters – \\(L_{\\infty}\\), \\(K\\), and \\(t_{0}\\) for each of the two groups (male and female Walleye). Starting values must be declared for each of these parameters. Here I find starting values from the data ignoring the groups (using vbStarts() as described in the previous post) and replicate those starting values for both groups.77 In some instances using the same starting values for both groups will not result in model convergence. See Ogle (2016) and Ogle et al. (2017) for suggestions for handling those cases.\n\n( sv0 <- vbStarts(tl~age,data=w14T) )\n\n#R|  $Linf\n#R|  [1] 591.1587\n#R|  \n#R|  $K\n#R|  [1] 0.3930388\n#R|  \n#R|  $t0\n#R|  [1] -1.544479\n\n\nMap replicates the starting values in the list from vbStarts() with rep (the replicated function), the object returned from vbStarts(), and a numeric vector that explains how many times each parameter should be repeated (i.e., the same as the number of groups).\n\n( svLKt <- Map(rep,sv0,c(2,2,2)) )\n\n#R|  $Linf\n#R|  [1] 591.1587 591.1587\n#R|  \n#R|  $K\n#R|  [1] 0.3930388 0.3930388\n#R|  \n#R|  $t0\n#R|  [1] -1.544479 -1.544479\n\n\nThe model is fit to the data by including the VBGF expression object, data=, and start= as arguments to nls(). The parameter estimates and confidence intervals may be extracted from the saved nls() object with coef() and confint().8 Note that the parameters will be appended with numbers in the alphabetical order of the groups.9 Thus, in this example, it is seen that the estimated \\(L_{\\infty}\\) for females (appended with a “1”) is greater than that for males.8 Column-bound here for aesthetic reasons.9 Unless your chose to order the levels of the group variable differently.\n\nfitLKt <- nls(vbLKt,data=w14T,start=svLKt)\ncbind(Ests=coef(fitLKt),confint(fitLKt))\n\n#R|               Ests        2.5%       97.5%\n#R|  Linf1 648.2083813 627.2685519 672.1242978\n#R|  Linf2 574.1512545 561.6722232 588.0005006\n#R|  K1      0.3615399   0.3171679   0.4106412\n#R|  K2      0.3354067   0.2946359   0.3805994\n#R|  t01    -1.2836317  -1.4846294  -1.0991040\n#R|  t02    -1.9702829  -2.2978880  -1.6783578\n\n\n \n\n\nModel Fits from Predicted Values\nThe model fit above can be used to predict the mean length at age for all groups, both within and outside the observed range of ages. These results can then be used to show the model fit by group. However, a bit of work outside of ggplot is required to prepare the relevant data.\nA data frame that contains predicted mean lengths at age over a range of ages for all groups is needed. I begin this process by finding (and assigning to an object for later use) the range of ages for each group.1010 as.data.frame() removes the tibble returned by group_by(), which I don’t prefer\n\nobsagerng <- w14T |>\n  group_by(sex) |>\n  summarize(min=min(age),\n            max=max(age)) |>\n  as.data.frame()\nobsagerng\n\n#R|       sex min max\n#R|  1 female   0  11\n#R|  2   male   1  11\n\n\nFrom this, I create a temporary vector of 101 ages11 evenly spaced over a range of ages larger than what was observed.1211 Use a larger value for length.out= to make the line produced further below more smooth.12 Zero was an observed age here, if not I usually make sure it is included.\n\nages <- seq(-1,12,length.out=101)\n\nI then create a data frame that has the name of each group repeated as many times as there are ages in the temporary age vector (i.e., 101 here) and has ages from the temporary age vector repeated for each group (i.e., twice here). Note the careful use of each= and times= in rep() below.\n\npreds <- data.frame(sex=rep(grps,each=length(ages)),\n                    age=rep(ages,times=ngrps))\nheadtail(preds)\n\n#R|         sex   age\n#R|  1   female -1.00\n#R|  2   female -0.87\n#R|  3   female -0.74\n#R|  200   male 11.74\n#R|  201   male 11.87\n#R|  202   male 12.00\n\n\nPredicted mean lengths at each age for each group are then appended to this data frame by giving the fitted nls() object and this data frame to predict().\n\npreds <- preds |>\n  mutate(fit=predict(fitLKt,preds))\nheadtail(preds)\n\n#R|         sex   age       fit\n#R|  1   female -1.00  63.17550\n#R|  2   female -0.87  90.03599\n#R|  3   female -0.74 115.66324\n#R|  200   male 11.74 568.37143\n#R|  201   male 11.87 568.61804\n#R|  202   male 12.00 568.85411\n\n\nFinally, I add a fourth variable that will be TRUE if the age is within the range of observed ages for the group. group_by() below behaves like a loop here in the sense that what follows that line will be completed for the first group, then the second group, and so on. For the mutate() lines suppose that we are working with the first group (i.e., “female”). In this case, unique(sex) will return female such that obsagerng[obsagerng$sex==unique(sex),] will find the row of obsagerng where its sex variable is equal to “female”. The $min appended to that will extract just the value in the min variable of that row (so the minimum observed age for females). The age>=obsagerng[obsagerng$sex==unique(sex),]$min portion is thus asking if the age variable in preds is greater than or equal to the minimum observed age for females. If it is it will return TRUE, otherwise FALSE will be returned. The second part mutate() asks if the age variable in preds is less than or equal to the maximum observed age for females, again returning TRUE or FALSE as appropriate. Those two conditions are connected with an & such that if they are both TRUE then a TRUE is returned, otherwise a FALSE is returned. The result is that the new inrng variable will be TRUE if the age variable within preds is within the observed range of ages for each sex in preds.1313 FSA::peek() is used here to show an evenly spaced 20 rows in the data frame. This provides more output than headtail() for observing the results of code.\n\npreds <- preds |>\n  group_by(sex) |>\n  mutate(inrng=age>=obsagerng[obsagerng$sex==unique(sex),]$min &\n               age<=obsagerng[obsagerng$sex==unique(sex),]$max)\nFSA::peek(preds)\n\n#R|         sex   age      fit inrng\n#R|  1   female -1.00  63.1755 FALSE\n#R|  11  female  0.30 282.5622  TRUE\n#R|  21  female  1.60 419.6791  TRUE\n#R|  32  female  3.03 511.9351  TRUE\n#R|  43  female  4.46 566.9479  TRUE\n#R|  53  female  5.76 597.4205  TRUE\n#R|  64  female  7.19 617.9233  TRUE\n#R|  74  female  8.49 629.2802  TRUE\n#R|  85  female  9.92 636.9214  TRUE\n#R|  96  female 11.35 641.4779 FALSE\n#R|  106   male -0.48 225.8590 FALSE\n#R|  117   male  0.95 358.5543 FALSE\n#R|  128   male  2.38 440.6943  TRUE\n#R|  138   male  3.68 487.8581  TRUE\n#R|  149   male  5.11 520.7348  TRUE\n#R|  159   male  6.41 539.6122  TRUE\n#R|  170   male  7.84 552.7712  TRUE\n#R|  181   male  9.27 560.9168  TRUE\n#R|  191   male 10.57 565.5938  TRUE\n#R|  202   male 12.00 568.8541 FALSE\n\n\n \nFigure 3 is created by combining similar code from the previous post and the use of color= from above. In brief, geom_point() adds points at the observed lengths at age, the first geom_line() adds the fitted models from the predicted mean lengths at all ages in preds as dashed lines, and the second geom_line() adds the fitted models from the predicted mean lengths only at observed ages for each group as solid lines.1414 Note the use filter() in the second geom_line() so that only data for which inrng==TRUE is used.\n\nggplot() +\n  geom_point(data=w14T,aes(x=age,y=tl,color=sex),\n             size=2,alpha=0.3) +\n  geom_line(data=preds,aes(x=age,y=fit,color=sex),\n              linewidth=1,linetype=\"dashed\") +\n  geom_line(data=filter(preds,inrng),aes(x=age,y=fit,color=sex),\n              linewidth=1) +\n  scale_y_continuous(name=\"Total Length (mm)\",limits=c(0,700)) +\n  scale_x_continuous(name=\"Age (years)\",breaks=0:11) +\n  scale_color_manual(values=c(\"male\"=\"darkblue\",\"female\"=\"darkred\")) +\n  theme(panel.grid.minor.x=element_blank(),\n        legend.position=c(0.8,0.2),\n        legend.title=element_blank())\n\n\n\n\nFigure 3: Fit of typical von Bertalanffy growth function to male and female Lake Erie Walleye in 2014. The dashed lines show the model fits outside the range of observed ages for each sex.\n\n\n\n\n \n\n\nModel Fit with Confidence Band\nCreating a graphic that has the model fit with confidence (or prediction) bands for multiple groups again requires some preparatory work before using ggplot().\nFor simplicity and completeness of presentation, the code below is repeated from above.\n\nvb <- vbFuns(param=\"Typical\")     ## Typical VBGF\ngrps <- unique(w14T$sex)          ## Names of groups\nngrps <- length(grps)             ## Number of groups\nobsagerng <- w14T |>              ## Range of observed ages by group\n  group_by(sex) |>\n  summarize(min=min(age),\n            max=max(age))\nsv0 <- vbStarts(tl~age,data=w14T) ## Starting values ignoring groups\n\nAs before, starting values are needed for each group. Here, however, I place the starting values into a data frame where each row corresponds to one group and a variable that identifies the groups is included.1515 For simplicity name this variable the same as it is in the main data frame.\n\n( svLKt <- data.frame(sex=grps,\n                      Map(rep,sv0,c(ngrps,ngrps,ngrps))) )\n\n#R|       sex     Linf         K        t0\n#R|  1 female 591.1587 0.3930388 -1.544479\n#R|  2   male 591.1587 0.3930388 -1.544479\n\n\nThe starting values created here are the same for each group. This will likely work in most cases (of fish growth data) but likely not all. Starting values can be entered into the data frame manually as shown below.1616 Ogle (2016) and Ogle et al. (2017) discuss alternative methods of finding starting values. But note that this may take some work if there are many groups.\n\n## Not run: Demo of manually entering starting values; not needed in this case\n( svLKt <- data.frame(sex=grps,\n                      Linf=c(630,580),\n                      K=c(0.34,0.34),\n                      t0=c(-1,-2)) )\n\nThe method used here basically loops through the groups, uses the procedures of the previous post (for one group) and above to find fitted values and confidence (or prediction) bands for each group, and then (row) binds those results together to produce a synthetic data frame for all groups. The process for a single group is wrapped into a function called vbLOOP1() below. The ordered arguments to vbLOOP1() are a group name, the original data frame, the data frame of starting values for all groups, the data frame of observed age ranges, and a vector that identifies the overall range over which to predict mean lengths at age. vbLOOP1 will default to returning confidence intervals, but prediction intervals can be returned by including interval=\"prediction\".1717 See code comments for the parts of this function that are specific to this case and, thus, might have to be changed for other data.\n\nvbLOOP1 <- function(grp,dat,svs,oagerng,eagerng,interval=\"confidence\") {\n  ## !! This requires a 'sex', 'tl', and 'age' variable in data frames !!\n  ## !!   Otherwise need to change 'sex', 'tl', and 'age' below\n  ## !!   Everything else can stay as is\n  \n  ## Loop notification (for peace of mind)\n  cat(grp,\"Loop\\n\")\n  ## Isolate group's data, starting values, and age range\n  dat1 <- dplyr::filter(dat,sex==grp)\n  sv1 <- svs |>\n    filter(sex==grp) |>\n    select(-sex) |>\n    as.list()\n  oagerng1 <- filter(oagerng,sex==grp)\n  ## Make ages for predictions\n  ages <- seq(min(eagerng),max(eagerng),length.out=101)\n  ## Fit von B to that group\n  fit1 <- nls(tl~vb(age,Linf,K,t0),data=dat1,start=sv1)\n  ## Make data frame of predicted mean lengths at age with CIs\n  preds1 <- data.frame(sex=grp,\n                       age=ages,\n                       fit=investr::predFit(fit1,data.frame(age=ages),\n                                            interval=interval)) |>\n    mutate(inrng=age>=oagerng1$min & age<=oagerng1$max) |>\n    as.data.frame()\n  ## Rename variables\n  names(preds1) <- c(\"sex\",\"age\",\"fit\",\"lwr\",\"upr\",\"inrng\")\n  ## Return data frame\n  preds1\n}\n\n \nThe code below initiates an object called preds that will hold the resulting data frame and then loops through the values in grps, running vbLOOP1() for each group with the w14T data frame of observed lengths and ages, svLKt data frame of starting values, obsagerng data frame of observed age ranges, and ages for making predictions that are between -1 and 12. The results for each group are row bound (i.e., using rbind()) together to produce the stacked results partially shown with peek().\n\npreds <-  NULL\nfor (i in grps) preds <- rbind(preds,vbLOOP1(i,w14T,svLKt,obsagerng,c(-1,12)))\n\n#R|  female Loop\n#R|  male Loop\n\npeek(preds)\n\n#R|         sex   age       fit       lwr       upr inrng\n#R|  1   female -1.00  63.17589  32.40811  93.94366 FALSE\n#R|  11  female  0.30 282.56223 275.45559 289.66887  TRUE\n#R|  21  female  1.60 419.67905 417.10638 422.25173  TRUE\n#R|  32  female  3.03 511.93506 508.44481 515.42531  TRUE\n#R|  43  female  4.46 566.94788 562.17160 571.72416  TRUE\n#R|  53  female  5.76 597.42054 589.97092 604.87016  TRUE\n#R|  64  female  7.19 617.92339 607.37308 628.47370  TRUE\n#R|  74  female  8.49 629.28032 616.34116 642.21948  TRUE\n#R|  85  female  9.92 636.92157 621.94832 651.89482  TRUE\n#R|  96  female 11.35 641.47810 625.02853 657.92767 FALSE\n#R|  106   male -0.48 225.85896 206.22610 245.49182 FALSE\n#R|  117   male  0.95 358.55434 354.06691 363.04177 FALSE\n#R|  128   male  2.38 440.69430 436.91620 444.47240  TRUE\n#R|  138   male  3.68 487.85809 483.57573 492.14046  TRUE\n#R|  149   male  5.11 520.73480 516.13704 525.33256  TRUE\n#R|  159   male  6.41 539.61222 533.94616 545.27827  TRUE\n#R|  170   male  7.84 552.77120 545.45179 560.09060  TRUE\n#R|  181   male  9.27 560.91675 552.00041 569.83310  TRUE\n#R|  191   male 10.57 565.59384 555.46575 575.72192  TRUE\n#R|  202   male 12.00 568.85412 557.68844 580.01980 FALSE\n\n\n \nFigure 4 is then constructed almost identically to Figure 3 except that geom_ribbon() is used to produce the confidence bands, with the lower part of the ribbon at the lower confidence values (i.e., ymin=lwr) and the upper part at the upper confidence value (i.e., ymax=upr) produced from the loop above.18 fill= gives the color of the enclosed ribbon. Further note that aesthetics= must be defined in scale_color_manual() because geom_ribbon() used fill=, whereas the other geoms used color=.18 Add geom_ribbon() first so that it is behind the points and model lines.\n\nggplot() +\n  geom_ribbon(data=preds,aes(x=age,ymin=lwr,ymax=upr,fill=sex),alpha=0.25) +\n  geom_point(data=w14T,aes(x=age,y=tl,color=sex),\n             size=2,alpha=0.3) +\n  geom_line(data=preds,aes(x=age,y=fit,color=sex),\n              linewidth=1,linetype=\"dashed\") +\n  geom_line(data=filter(preds,inrng),aes(x=age,y=fit,color=sex),\n              linewidth=1) +\n  scale_y_continuous(name=\"Total Length (mm)\",limits=c(0,700)) +\n  scale_x_continuous(name=\"Age (years)\",breaks=0:11) +\n  scale_color_manual(values=c(\"male\"=\"darkblue\",\"female\"=\"darkred\"),\n                     aesthetics=c(\"color\",\"fill\")) +\n  theme(panel.grid.minor.x=element_blank(),\n        legend.position=c(0.8,0.2),\n        legend.title=element_blank())\n\n\n\n\nFigure 4: Fit of typical von Bertalanffy growth function to male and female Lake Erie Walleye in 2014. The dashed lines show the model fits outside the range of observed ages for each sex.\n\n\n\n\n\n\n\n \nOf course, the graph can also be separated by the grouping variable (Figure 5).\n\nggplot() +\n  geom_ribbon(data=preds,aes(x=age,ymin=lwr,ymax=upr,fill=sex),alpha=0.25) +\n  geom_point(data=w14T,aes(x=age,y=tl,color=sex),\n             size=2,alpha=0.3) +\n  geom_line(data=preds,aes(x=age,y=fit,color=sex),\n              linewidth=1,linetype=\"dashed\") +\n  geom_line(data=filter(preds,inrng),aes(x=age,y=fit,color=sex),\n              linewidth=1) +\n  scale_y_continuous(name=\"Total Length (mm)\",limits=c(0,700)) +\n  scale_x_continuous(name=\"Age (years)\",breaks=0:11) +\n  scale_color_manual(values=c(\"male\"=\"darkblue\",\"female\"=\"darkred\"),\n                     aesthetics=c(\"color\",\"fill\")) +\n  theme(panel.grid.minor.x=element_blank(),\n        legend.position=\"none\") +\n  facet_wrap(vars(sex))\n\n\n\n\nFigure 5: Fit of typical von Bertalanffy growth function to male and female Lake Erie Walleye in 2014. The dashed lines show the model fits outside the range of observed ages for each sex.\n\n\n\n\n \n\n\nMore than Two Groups\nThe process defined above can be extended to more than two groups. Here I examine just female walleye captured in four years, as an example. Note here that year must be explicitly turned to a factor so that it will be treated as a group identifier rather than a numeric value.\n\nwfT <- WalleyeErie2 |>\n  filter(sex==\"female\",loc==1,year %in% c(2005,2008,2011,2014)) |>\n  mutate(year=factor(year)) |>\n  select(-loc,-setID,-grid,-sex)\n\nThe code below is repeated from above, but everywhere where sex was in the code has been changed to year (our new grouping variable). Once again note that using the same starting values for all groups may not always work (but it did here).\n\ngrps <- unique(wfT$year)          ## Names of groups\nngrps <- length(grps)             ## Number of groups\nobsagerng <- wfT |>               ## Range of observed ages by group\n  group_by(year) |>\n  summarize(min=min(age),\n            max=max(age))\n\nsv0 <- vbStarts(tl~age,data=wfT)  ## Starting values ignoring groups\n( svLKt <- data.frame(year=grps,\n                      Map(rep,sv0,c(ngrps,ngrps,ngrps))) )\n\n#R|    year     Linf         K        t0\n#R|  1 2005 703.7264 0.2529961 -1.903874\n#R|  2 2008 703.7264 0.2529961 -1.903874\n#R|  3 2011 703.7264 0.2529961 -1.903874\n#R|  4 2014 703.7264 0.2529961 -1.903874\n\n\nThe vbLOOP1() function needs to be modified by replacing all instances of sex to year. Be careful to change all instances here.\n\nvbLOOP1 <- function(grp,dat,svs,oagerng,eagerng,interval=\"confidence\") {\n  ## !! This requires a 'year', 'tl', and 'age' variable in data frames !!\n  ## !!   Otherwise need to change 'year', 'tl', and 'age' below\n  ## !!   Everything else can stay as is\n  \n  ## Loop notification (for peace of mind)\n  cat(grp,\"Loop\\n\")\n  ## Isolate group's data, starting values, and age range\n  dat1 <- dplyr::filter(dat,year==grp)\n  sv1 <- svs |>\n    filter(year==grp) |>\n    select(-year) |>\n    as.list()\n  oagerng1 <- filter(oagerng,year==grp)\n  ## Make ages for predictions\n  ages <- seq(min(eagerng),max(eagerng),length.out=101)\n  ## Fit von B to that group\n  fit1 <- nls(tl~vb(age,Linf,K,t0),data=dat1,start=sv1)\n  ## Make data frame of predicted mean lengths at age with CIs\n  preds1 <- data.frame(year=grp,\n                       age=ages,\n                       fit=investr::predFit(fit1,data.frame(age=ages),\n                                            interval=interval)) |>\n    mutate(inrng=age>=oagerng1$min & age<=oagerng1$max) |>\n    as.data.frame()\n  ## Rename variables\n  names(preds1) <- c(\"year\",\"age\",\"fit\",\"lwr\",\"upr\",\"inrng\")\n  ## Return data frame\n  preds1\n}\n\nThis code is largerly the same as in the previous example except that the name of the observed data is changed as is the range over which the model will be evaluated.\n\npreds <-  NULL\nfor (i in grps) preds <- rbind(preds,vbLOOP1(i,wfT,svLKt,obsagerng,c(0,14)))\n\n#R|  2005 Loop\n#R|  2008 Loop\n#R|  2011 Loop\n#R|  2014 Loop\n\npeek(preds)\n\n#R|      year   age      fit      lwr      upr inrng\n#R|  1   2005  0.00 240.2624 210.7322 269.7926 FALSE\n#R|  21  2005  2.80 453.7806 447.9004 459.6609  TRUE\n#R|  43  2005  5.88 585.6538 570.6736 600.6340  TRUE\n#R|  64  2005  8.82 655.0832 622.4730 687.6935  TRUE\n#R|  85  2005 11.76 693.9627 642.5513 745.3741 FALSE\n#R|  106 2008  0.56 308.2649 300.5394 315.9905 FALSE\n#R|  128 2008  3.64 534.2380 528.2457 540.2303  TRUE\n#R|  149 2008  6.58 599.0074 589.8620 608.1528  TRUE\n#R|  170 2008  9.52 619.1141 602.5247 635.7036 FALSE\n#R|  191 2008 12.46 625.3559 605.0004 645.7115 FALSE\n#R|  213 2011  1.40 399.5019 396.3923 402.6116  TRUE\n#R|  234 2011  4.34 574.1318 568.6675 579.5961  TRUE\n#R|  255 2011  7.28 634.0238 625.8571 642.1905  TRUE\n#R|  276 2011 10.22 654.5647 642.6946 666.4349  TRUE\n#R|  298 2011 13.30 661.7922 647.7538 675.8307 FALSE\n#R|  319 2014  2.10 457.4716 454.3409 460.6023  TRUE\n#R|  340 2014  5.04 582.3197 576.4395 588.1998  TRUE\n#R|  361 2014  7.98 625.4476 613.3847 637.5105  TRUE\n#R|  383 2014 11.06 640.7339 624.5441 656.9237 FALSE\n#R|  404 2014 14.00 645.6264 627.5198 663.7329 FALSE\n\n\nOnce again, change all instances of sex to year below. I also need to modify the limits= of the y-axis and the breaks= of the x-axis. Also note that I removed scale_color_manual() so that the default colors would be used. If you don’t want to use the default colors you would need to make sure that you identify as many colors as you have groups (four in this case).\n\nggplot() +\n  geom_ribbon(data=preds,aes(x=age,ymin=lwr,ymax=upr,fill=year),alpha=0.25) +\n  geom_point(data=wfT,aes(x=age,y=tl,color=year),\n             size=2,alpha=0.3) +\n  geom_line(data=preds,aes(x=age,y=fit,color=year),\n              linewidth=1,linetype=\"dashed\") +\n  geom_line(data=filter(preds,inrng),aes(x=age,y=fit,color=year),\n              linewidth=1) +\n  scale_y_continuous(name=\"Total Length (mm)\",limits=c(0,800)) +\n  scale_x_continuous(name=\"Age (years)\",breaks=0:16) +\n  theme(panel.grid.minor.x=element_blank(),\n        legend.position=\"none\") +\n  facet_wrap(vars(year))\n\n\n\n\nFigure 6: Fit of typical von Bertalanffy growth function to female Lake Erie Walleye in 2005, 2008, 2011, and 2014. The dashed lines show the model fits outside the range of observed ages for each sex.\n\n\n\n\n \n\n\n\n\n\n\n\n\n\nReferences\n\nOgle, D. H. 2016. Introductory Fisheries Analyses with R. CRC Press, Boca Raton, FL.\n\n\nOgle, D. H., T. O. Brenden, and J. L. McCormick. 2017. Growth Estimation: Growth Models and Statistical Inference. Pages 265–359 in M. C. Quist and D. A. Isermann, editors. Age and Growth of Fishes: Principles and Techniques. American Fisheries Society, Bethesda, MD.\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{h.ogle2019,\n  author = {Derek H. Ogle},\n  title = {Von {Bertalanffy} {Growth} {Plots} {II}},\n  date = {2019-01-02},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2020-1-2_vonB_plots_2},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDerek H. Ogle. 2019, January 2. von\nBertalanffy Growth Plots II."
  },
  {
    "objectID": "blog/posts/2021-3-15-AgeBiasPlots/index.html",
    "href": "blog/posts/2021-3-15-AgeBiasPlots/index.html",
    "title": "Age Bias Plots in ggplot2",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below. I also set the default ggplot theme to theme_bw() for a classic “black-and-white” plot (rather than the default plot with a gray background).\n\n\n\nlibrary(FSA)\nlibrary(dplyr)\nlibrary(ggplot2)\ntheme_set(theme_bw())\n\n \n\nIntroduction\nAge-bias and difference plots can be constructed with plot() and plotAB() in the FSA package. However, these types of plots can be more flexibly constructed using ggplot2. Below I will use ggplot2 to recreate many of the plots shown in the documentation for plot() and plotAB().\n \n\n\nData\nThe WhitefishLC data frame from FSA.1 contains age readings made by two readers on scales, fin rays, and otoliths, along with consensus readings for each structure.1 These data are loaded automatically with library(FSA).\n\nhead(WhitefishLC)\n\n#R|    fishID  tl scale1 scale2 scaleC finray1 finray2 finrayC otolith1 otolith2\n#R|  1      1 345      3      3      3       3       3       3        3        3\n#R|  2      2 334      4      3      4       3       3       3        3        3\n#R|  3      3 348      7      5      6       3       3       3        3        3\n#R|  4      4 300      4      3      4       3       2       3        3        3\n#R|  5      5 330      3      3      3       4       3       4        3        3\n#R|  6      6 316      4      4      4       2       3       3        6        5\n#R|    otolithC\n#R|  1        3\n#R|  2        3\n#R|  3        3\n#R|  4        3\n#R|  5        3\n#R|  6        6\n\n\nIntermediate and summary statistics for the comparison of paired ages (e.g., between consensus scale and otolith ages) can be extracted from the objected returned by ageBias() from FSA.22 As described in the documentation.\n\nab1 <- ageBias(scaleC~otolithC,data=WhitefishLC,\n               ref.lab=\"Otolith Age\",nref.lab=\"Scale Age\")\n\nFor example, the $data object of ab13 contains the original paired age estimates, the differences between those two estimates, and the mean of those two estimates.3 ab1 because that was the name assigned to the results from ageBias() in this example.\n\nhead(ab1$data)\n\n#R|    scaleC otolithC diff mean\n#R|  1      3        3    0  3.0\n#R|  2      4        3    1  3.5\n#R|  3      6        3    3  4.5\n#R|  4      4        3    1  3.5\n#R|  5      3        3    0  3.0\n#R|  6      4        6   -2  5.0\n\n\nIn addition, the $bias object of ab1 contains summary statistics of ages for the first structure given in the ageBias() formula by each age of the second structure given in that formula. For example, the first row below gives the number, minimum, maximum, mean, and standard error of the scale ages that were paired with an otolith age of 1. Additionally there is a t-test, adjusted p-value, and a significance statement for testing whether the mean scale age is different from the otolith age. Finally, confidence intervals (defaults to 95%) for the mean scale age at an otolith age of 1 is given, with a statement about whether a confidence interval could be calculated.44 See the documentation for ageBias() for the criterion used to decide if the confidence interval can be calculated.\n\nhead(ab1$bias)\n\n#R|    otolithC  n min max     mean        SE          t   adj.p   sig       LCI\n#R|  1        1  9   1   2 1.444444 0.1756821  2.5298218 0.28212 FALSE 1.0393208\n#R|  2        2  7   1   5 2.000000 0.5773503  0.0000000 1.00000 FALSE 0.5872748\n#R|  3        3 17   1   6 3.352941 0.2416423  1.4605937 0.81743 FALSE 2.8406824\n#R|  4        4 18   2   6 3.833333 0.2322102 -0.7177407 1.00000 FALSE 3.3434126\n#R|  5        5  8   4   8 5.250000 0.4909902  0.5091751 1.00000 FALSE 4.0889926\n#R|  6        6 10   3   6 4.600000 0.2666667 -5.2500003 0.00686  TRUE 3.9967581\n#R|         UCI canCI\n#R|  1 1.849568  TRUE\n#R|  2 3.412725  TRUE\n#R|  3 3.865200  TRUE\n#R|  4 4.323254  TRUE\n#R|  5 6.411007  TRUE\n#R|  6 5.203242  TRUE\n\n\nThe results in $bias.diff are similar to those for $bias except that the difference in age between the two structures is summarized for each otolith age.\n\nhead(ab1$bias.diff)\n\n#R|    otolithC  n min max       mean        SE          t   adj.p   sig         LCI\n#R|  1        1  9   0   1  0.4444444 0.1756821  2.5298218 0.28212 FALSE  0.03932075\n#R|  2        2  7  -1   3  0.0000000 0.5773503  0.0000000 1.00000 FALSE -1.41272519\n#R|  3        3 17  -2   3  0.3529412 0.2416423  1.4605937 0.81743 FALSE -0.15931758\n#R|  4        4 18  -2   2 -0.1666667 0.2322102 -0.7177407 1.00000 FALSE -0.65658738\n#R|  5        5  8  -1   3  0.2500000 0.4909902  0.5091751 1.00000 FALSE -0.91100742\n#R|  6        6 10  -3   0 -1.4000000 0.2666667 -5.2500003 0.00686  TRUE -2.00324188\n#R|           UCI canCI\n#R|  1  0.8495680  TRUE\n#R|  2  1.4127252  TRUE\n#R|  3  0.8652000  TRUE\n#R|  4  0.3232540  TRUE\n#R|  5  1.4110074  TRUE\n#R|  6 -0.7967581  TRUE\n\n\nThese data frames are used in ggplot2 code below to create various versions of age-bias and difference plots.\n\n\n\n\n\n\nImportant\n\n\n\nAt times multiple data frames will be used when constructing the same plot so that layers of the plot can have different variables.\n\n\n \n\n\nBasic Age-Bias Plot\nFigure 1 is the age-bias plot created by default by plotAB() from FSA.\n\nFSA::plotAB(ab1)\n\n\n\n\nFigure 1: Default age-bias plot from plotAB() in FSA.\n\n\n\n\n \nFigure 1 is largely recreated (Figure 2) with the following ggplot2 code.\n\nggplot(data=ab1$bias) +\n  geom_abline(slope=1,intercept=0,linetype=\"dashed\",color=\"gray\") +\n  geom_errorbar(aes(x=otolithC,ymin=LCI,ymax=UCI,color=sig),width=0) +\n  geom_point(aes(x=otolithC,y=mean,color=sig,fill=sig),shape=21) +\n  scale_fill_manual(values=c(\"FALSE\"=\"black\",\"TRUE\"=\"white\"),guide=\"none\") +\n  scale_color_manual(values=c(\"FALSE\"=\"black\",\"TRUE\"=\"red3\"),guide=\"none\") +\n  scale_x_continuous(name=ab1$ref.lab,breaks=0:25) +\n  scale_y_continuous(name=ab1$nref.lab,breaks=0:25)\n\n\n\n\nFigure 2: Recreation of the default age-bias plot using ggplot2.\n\n\n\n\nThe specifics of the code above are described below.\n\nThe base data used in this plot is the $bias data.frame discussed above.\nThe 45o agreement line (i.e., slope of 1 and intercept of 0) is added with geom_abline(), using a dashed linetype= and a gray color=. This “layer” is first so that it sits behind the other results.\nError bars are added with geom_errorbar(). The aes()thetics here map the consensus otolith age to the x= axis and the lower and upper confidence interval values for the mean consensus scale age at each consensus otolith age to ymin= and ymax=. The color= of the lines are mapped to the sig variable so that points that are significantly different from the 45o agreement line will have a different color (with scale_color_manual() described below). Finally, width=0 assures that the error bars will not have “end caps.”\nPoints at the mean consensus scale age (y=) for each otolith age (x=) are added with geom_point(). Again, the color= and fill= are mapped to the sig variable so that they will appear different depending on whether the points are significantly different from the 45o agreement line or not. Finally, shape=21 represents a plotted point as an open circle that is outlined with color= and filled with fill=.\nscale_fill_manual() and scale_color_manual() are used to set the colors and fills for the levels in the sig variable. Note that guide=\"none\" is used so that a legend is not constructed for the colors and fills.\nscale_x_continuous() and scale_y_continuous() are used to set the labels (with name=) and axis breaks for the x- and y-axes, respectively. The names are drawn from labels that were given in the original call to ageBias() and stored in ab1.\n\nThe gridlines and the size of the fonts could be adjusted by modifying theme theme, which I did not do here for simplicity.\n \n\n\nMore Examples\nBelow are more examples of how ggplot2 can be used to recreate graphs from plot() in FSA. For example, Figure 3 is similar to Figure 2, but uses $bias.diff from ab1 to plot mean differences between scale and otolith ages against otolith ages. The reference for differences is a horizontal line at 0 so geom_abline() from above was replaced with geom_hline() here.\n\nggplot(data=ab1$bias.diff) +\n  geom_hline(yintercept=0,linetype=\"dashed\",color=\"gray\") +\n  geom_errorbar(aes(x=otolithC,ymin=LCI,ymax=UCI,color=sig),width=0) +\n  geom_point(aes(x=otolithC,y=mean,color=sig,fill=sig),shape=21) +\n  scale_fill_manual(values=c(\"FALSE\"=\"black\",\"TRUE\"=\"white\"),guide=\"none\") +\n  scale_color_manual(values=c(\"FALSE\"=\"black\",\"TRUE\"=\"red3\"),guide=\"none\") +\n  scale_x_continuous(name=ab1$ref.lab,breaks=0:25) +\n  scale_y_continuous(name=paste(ab1$nref.lab,\"-\",ab1$ref.lab),breaks=-15:5)\n\n\n\n\nFigure 3: Age difference plot using ggplot2.\n\n\n\n\n \nFigure 4 is similar but it includes the raw data points from $data and colors the mean (and confidence intervals) for the differences based on the significance as in Figure 2. Because data were drawn from different data frames (i.e., ab1$data and ab1$bias.diff) the data= and aes= arguments had to be moved into the specific geom_s. Also note that the raw data were made semi-transparent (with alpha=0.1) to emphasize the over-plotting of the discrete ages.\n\nggplot() +\n  geom_hline(yintercept=0,linetype=\"dashed\",color=\"gray\") +\n  geom_point(data=ab1$data,aes(x=otolithC,y=diff),alpha=0.1,size=1.75) +\n  geom_errorbar(data=ab1$bias.diff,aes(x=otolithC,ymin=LCI,ymax=UCI,color=sig),\n                width=0) +\n  geom_point(data=ab1$bias.diff,aes(x=otolithC,y=mean,color=sig,fill=sig),\n             shape=21,size=1.75) +\n  scale_fill_manual(values=c(\"FALSE\"=\"black\",\"TRUE\"=\"white\"),guide=\"none\") +\n  scale_color_manual(values=c(\"FALSE\"=\"black\",\"TRUE\"=\"red3\"),guide=\"none\") +\n  scale_x_continuous(name=ab1$ref.lab,breaks=seq(0,25,1)) +\n  scale_y_continuous(name=paste(ab1$nref.lab,\"-\",ab1$ref.lab),breaks=-15:5)\n\n\n\n\nFigure 4: Age difference plot using ggplot2 including points for individual observations.\n\n\n\n\n \nFigure 5 is the same as Figure 4 except that a loess smoother has been added with geom_smooth() to emphasize the trend in the differences in ages. The smoother should be fit to the raw data so be sure to use ab1$data in geom_smooth(). The smoother defaults to blue (as shown here) but I decreased the width of the line slightly with linewidth=0.65.\n\nggplot() +\n  geom_hline(yintercept=0,linetype=\"dashed\",color=\"gray\") +\n  geom_point(data=ab1$data,aes(x=otolithC,y=diff),alpha=0.1,size=1.75) +\n  geom_errorbar(data=ab1$bias.diff,aes(x=otolithC,ymin=LCI,ymax=UCI,color=sig),\n                width=0) +\n  geom_point(data=ab1$bias.diff,aes(x=otolithC,y=mean,color=sig,fill=sig),\n             shape=21,size=1.75) +\n  scale_fill_manual(values=c(\"FALSE\"=\"black\",\"TRUE\"=\"white\"),guide=\"none\") +\n  scale_color_manual(values=c(\"FALSE\"=\"black\",\"TRUE\"=\"red3\"),guide=\"none\") +\n  scale_x_continuous(name=ab1$ref.lab,breaks=seq(0,25,1)) +\n  scale_y_continuous(name=paste(ab1$nref.lab,\"-\",ab1$ref.lab),breaks=-15:5) +\n  geom_smooth(data=ab1$data,aes(x=otolithC,y=diff),linewidth=0.65)\n\n\n\n\nFigure 5: Age difference plot using ggplot2 including points for individual observations and a loess smoother.\n\n\n\n\n \n\n\nWhat Prompted This\nGraphics made in ggplot2 are more flexible than the ones produced in FSA. For example, a user recently asked if it was possible to make an “age-bias plot” that used “error bars” based on the standard deviation rather than the standard error. While it is questionable whether this is what should be plotted, it is nevertheless up to the user and their use case. Because this cannot be done using the plots in FSA we turned to ggplot to make such a graph.\nStandard deviations are not returned in any of the ageBias() results (saved in ab1). However, the standard error and sample size are returned in the $bias data frame. The standard deviation can be “back-calculated” from these two values using SD=SE*sqrt(n). Two new variables called LSD and USD that are the means minus and plus two standard deviations can then be created. All three of these variables are added to the $bias data frame using mutate() from dplyr.\n\nab1$bias <- ab1$bias %>%\n  mutate(SD=SE*sqrt(n),\n         LSD=mean-2*SD,\n         USD=mean+2*SD)\n\nA plot (Figure 6) like the very first plot above but using two standard deviations for the error bars is then created by mapping ymin= and ymax= to LSD and USD, respectively, in geom_errorbar(). Note that I removed the color related to the significance test as those don’t pertain to the results when using standard deviations to represent “error bars.”\n\nggplot(data = ab1$bias)+\n  geom_abline(slope=1,intercept=0,linetype=\"dashed\",color=\"gray\") +\n  geom_errorbar(aes(x=otolithC,ymin=LSD,ymax=USD),width=0) +\n  geom_point(aes(x=otolithC,y=mean)) +\n  scale_x_continuous(name =ab1$ref.lab,breaks=0:25) +\n  scale_y_continuous(name=ab1$nref.lab,breaks=0:25)\n\n\n\n\nFigure 6: Mean scale age for each otolith age with error bars represented by two standard deviations.\n\n\n\n\nFinally, to demonstrate the flexibility of using ggplot with these type of data, I used a violin plot to show the distribution of scale ages for each otolith age while also highlighting the mean scale age for each otolith age (Figure 7). The violin plots are created with geom_violin() using the raw data stored in $data. The group= must be set to the x-axis variable (i.e., otolith age) so that a separate violin will be constructed for each age on the x-axis. I filled the violins with grey to make them stand out more.\n\nggplot() +\n  geom_abline(slope=1,intercept=0,linetype=\"dashed\",color=\"gray\") +\n  geom_violin(data=WhitefishLC,aes(x=otolithC,y=scaleC,group=otolithC),\n              fill=\"grey\") +\n  geom_point(data=ab1$bias,aes(x=otolithC,y=mean),size=2) +\n  scale_x_continuous(name=ab1$ref.lab,breaks=0:25) +\n  scale_y_continuous(name=ab1$nref.lab,breaks=0:25)\n\n\n\n\nFigure 7: Violin plots and mean scale age at each otolith age.\n\n\n\n\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{lant2021,\n  author = {Michael Lant},\n  title = {Age {Bias} {Plots} in Ggplot2},\n  date = {2021-03-15},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2021-3-15-AgeBiasPlots},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nMichael Lant. 2021, March 15. Age\nBias Plots in ggplot2."
  },
  {
    "objectID": "blog/posts/2021-5-11_compSlopes-replacement/index.html",
    "href": "blog/posts/2021-5-11_compSlopes-replacement/index.html",
    "title": "Replace compSlopes() with emtrends()",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below."
  },
  {
    "objectID": "blog/posts/2021-5-11_compSlopes-replacement/index.html#conclusion",
    "href": "blog/posts/2021-5-11_compSlopes-replacement/index.html#conclusion",
    "title": "Replace compSlopes() with emtrends()",
    "section": "Conclusion",
    "text": "Conclusion\nemtrends() in emmeans provides a more general solution to comparing multiple slopes than what was used in compSlopes() in FSA prior to v0.9.0. As compSlopes() was removed from FSA in 2022, you should now use emtrends() for this purpose.\nemmeans has extensive vignettes that further explain its use. Please see this discussion for the use case described in this post. Their “Basics” vignette is also useful.\nIn the next post I will demonstrate how to use emmeans() from the emmeans package to replace compIntercepts(), which was also removed from FSA.\n\n\n\n\n\n\nNote\n\n\n\nThis change to FSA does not affect anything in Ogle (2016). However, the use of compSlopes() in this supplement to Ogle (2016) will no longer work as described and will need to use emtrends() instead."
  },
  {
    "objectID": "blog/posts/2021-5-12_compIntercepts-replacement/index.html",
    "href": "blog/posts/2021-5-12_compIntercepts-replacement/index.html",
    "title": "Replace compIntercepts() with emmeans()",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below."
  },
  {
    "objectID": "blog/posts/2021-5-12_compIntercepts-replacement/index.html#conclusion",
    "href": "blog/posts/2021-5-12_compIntercepts-replacement/index.html#conclusion",
    "title": "Replace compIntercepts() with emmeans()",
    "section": "Conclusion",
    "text": "Conclusion\nemmeans() in emmeans provides a more general solution to comparing multiple slopes than what was used in compIntercepts() in FSA prior to v0.9.0. As compIntercepts() was removed from FSA in 2022, you should now use emmeans() for this purpose.\nemmeans has extensive vignettes that further explain its use. Their “Basics” vignette is also useful.\nIn a previous post I demonstrated how to use emtrends() from emmeans to replace compSlopes(), which was also removed from FSA.\n\n\n\n\n\n\nNote\n\n\n\nThis change to FSA does not affect anything in Ogle (2016). However, the use of compSlopes() in this supplement to Ogle (2016) will no longer work as described and will need to use emmeans() instead."
  },
  {
    "objectID": "blog/posts/2021-5-25_fitPlot-replacement/index.html",
    "href": "blog/posts/2021-5-25_fitPlot-replacement/index.html",
    "title": "Replace fitPlot() with ggplot",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below. I also set the default ggplot theme to theme_bw() for a classic “black-and-white” plot (rather than the default plot with a gray background).\n\n\n\nlibrary(FSA)         ## for peek()\nlibrary(emmeans)     ## for emmeans()\nlibrary(dplyr)       ## for mutate(), select(), filter(), group_by(), summarize()\nlibrary(ggplot2)\ntheme_set(theme_bw())\n\n\n\n\n\n\n\nWarning\n\n\n\nSome functions illustrated below were in the FSA package but have now been removed and put into the non-released FSAmisc package that I maintain. These functions are used below only to show what could be done in older versions of FSA but should now be done as described in this post. DO NOT USE any of the functions below that begin with FSAmisc::.\n\n\n \n\nIntroduction\nWe deprecated fitPlot() from FSA v0.9.0 and fully removed it by the start of 2022. We took this action to make FSA more focused on fisheries applications and to eliminate “black box” functions. fitPlot() was originally designed for students to quickly visualize the results of one- and two-way ANOVAs and simple, indicator variable, and logistic regressions.1 We now feel that students are better served by learning how to create these visualizations using methods provided by ggplot2, which require more code, but are more modern, flexible, and transparent.1 Over time functionality for non-linear regressions was added.\nThe basic plots produced by fitPlot() are recreated here using ggplot2 to provide a resource to help users that relied on fitPlot() transition to ggplot2.\n \n\n\nExample Data\nExamples below use the Mirex data set from FSA, which contains the concentration of mirex in the tissue and the body weight of two species of salmon (chinook and coho) captured in six years. The year variable is converted to a factor for modeling purposes and a new variable is created that indicates if the mirex concentration was greater that 0.2 or not. This new variable is used to demonstrate a logistic regression.22 peek() from FSA is used to examine a portion of the data from evenly-spaced row.\n\ndata(Mirex,package=\"FSA\")\nMirex <- Mirex |>\n  mutate(year=factor(year),\n         gt2=ifelse(mirex>0.2,1,0))\npeek(Mirex,n=10)\n\n#R|      year weight mirex species gt2\n#R|  1   1977   0.41  0.16 chinook   0\n#R|  14  1977   3.29  0.23    coho   1\n#R|  27  1982   0.70  0.10    coho   0\n#R|  41  1982   5.09  0.27    coho   1\n#R|  54  1986   1.82  0.12 chinook   0\n#R|  68  1986   8.40  0.13 chinook   0\n#R|  81  1992  10.00  0.48 chinook   1\n#R|  95  1996   5.70  0.16    coho   0\n#R|  108 1999   5.11  0.11    coho   0\n#R|  122 1999  11.82  0.09 chinook   0\n\n\n \n\n\nOne-Way ANOVA\nThe code below fits a one-way ANOVA model to examine if mean weight differs by species.\n\naov1 <- lm(weight~species,data=Mirex)\nanova(aov1)\n\n#R|  Analysis of Variance Table\n#R|  \n#R|  Response: weight\n#R|             Df Sum Sq Mean Sq F value    Pr(>F)    \n#R|  species     1  282.4 282.399  27.657 6.404e-07 ***\n#R|  Residuals 120 1225.3  10.211                      \n#R|  ---\n#R|  Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n \nThere are at least two simple ways to visualize results from a one-way ANOVA. First, summarized means of raw data with 95% confidence intervals derived from the standard error, sample size, and degrees-of-freedom specific to each group are shown. These are computed below.\n\nsumdata <- Mirex |>\n  group_by(species) |>\n  summarize(n=n(),\n            mn=mean(weight),\n            se=se(weight)) |>\n  mutate(lci=mn-qt(0.975,df=n-1)*se,\n         uci=mn+qt(0.975,df=n-1)*se)\nsumdata\n\n#R|  # A tibble: 2 × 6\n#R|    species     n    mn    se   lci   uci\n#R|    <fct>   <int> <dbl> <dbl> <dbl> <dbl>\n#R|  1 chinook    67  6.31 0.474  5.37  7.26\n#R|  2 coho       55  3.26 0.279  2.70  3.82\n\n\n \nSecond, marginal means may be predicted or estimated from the fitted model.3 The main difference from above is that confidence intervals for the marginal means use an “overall” standard deviation and degrees-of-freedom estimated from across all groups. The estimated marginal means may be computed with with emmeans() from emmeans.43 These are discussed in detail in this vignette from the emmeans package.4 They may also be computed with predict(aov1,newdata=data.frame(species=c(\"chinook\",\"coho\")),interval=\"confidence\").\n\naov1mc <- emmeans::emmeans(aov1,specs=pairwise~species)\naov1mcs <- summary(aov1mc)\naov1mcs$emmeans\n\n#R|   species emmean    SE  df lower.CL upper.CL\n#R|   chinook   6.31 0.390 120     5.54     7.09\n#R|   coho      3.26 0.431 120     2.40     4.11\n#R|  \n#R|  Confidence level used: 0.95\n\n\n \nfitPlot() from FSA used the summarized means with 95% confidence intervals for both species.\n\nFSAmisc::fitPlot(aov1)\n\n\n\n\n\n\n\n\n \n\nUsing Manually Summarized Means\nThe summarized means saved in sumdata above can be plotted as shown below to recreate the fitPlot() result. width=0.1 in geom_errorbar() is used to reduce the width of the “caps” at the confidence values and group=1 is needed in geom_line() as there is only one point for each factor level. Changes (themes, colors, labels, etc) to this basic plot can be made as usual for ggplot()s (and is illustrated further below).\n\nggplot(data=sumdata,mapping=aes(x=species)) +\n  geom_errorbar(mapping=aes(ymin=lci,ymax=uci),width=0.1) +\n  geom_line(mapping=aes(y=mn,group=1)) +\n  geom_point(mapping=aes(y=mn))\n\n\n\n\n\n\n\n\n \n\n\nUsing Built-In Functions for Summarized Means\nThis plot can also be constructed without having previously summarized the group means by using stat_summary() coupled with mean_cl_normal() and mean(). Below note how each geom= in each stat_summary() mirrors what was used above. Also note the use of width=0.1 and group=1 here as done above.\n\nggplot(data=Mirex,mapping=aes(x=species,y=weight)) +  \n  stat_summary(fun.data=mean_cl_normal,geom=\"errorbar\",width=0.1) +  \n  stat_summary(fun=mean,geom=\"line\",mapping=aes(group=1)) +  \n  stat_summary(fun=mean,geom=\"point\")\n\n\n\n\n\n\n\n\n \n\n\nUsing Marginal Means from emmeans\nThe estimated marginal means may be plotted similarly to the manually summarized means. However, the aov1mcs$emmeans data frame created above is used, which also requires using lower.CL and upper.CL for the ymin= and ymax= in geom_errorbar() and emmean for the y= mean value in geom_line() and geom_point().55 Review the output from aov1mcs$emmeans above taking special note of the variable names.\n\nggplot(data=aov1mcs$emmeans,mapping=aes(x=species)) +\n  geom_errorbar(mapping=aes(ymin=lower.CL,ymax=upper.CL),width=0.1) +\n  geom_line(mapping=aes(y=emmean,group=1)) +\n  geom_point(mapping=aes(y=emmean))\n\n\n\n\n\n\n\n\n \n\n\n\nTwo-Way ANOVA\nThe code below fits a two-way ANOVA model to examine if mean weight differs by species, by year, or by the interaction between species and year.\n\naov2 <- lm(weight~year*species,data=Mirex)\nanova(aov2)\n\n#R|  Analysis of Variance Table\n#R|  \n#R|  Response: weight\n#R|                Df Sum Sq Mean Sq F value    Pr(>F)    \n#R|  year           5 281.86  56.373  6.9954 1.039e-05 ***\n#R|  species        1 221.69 221.689 27.5099 7.648e-07 ***\n#R|  year:species   5 117.69  23.538  2.9208   0.01628 *  \n#R|  Residuals    110 886.44   8.059                      \n#R|  ---\n#R|  Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n \nfitPlot() from FSA used the mean with 95% confidence interval for all combinations of species and year.\n\nFSAmisc::fitPlot(aov2)\n\n\n\n\n\n\n\n\n \n\nUsing Built-In Functions for Summarized Means\nAgain, stat_summary() can be used to efficiently calculate and then plot the 95% confidence intervals and means similar to what was shown above for a one-way ANOVA. However, there are three major differences.\nFirst, in the main ggplot() call the color of the points and lines is mapped to one of the two factor variables (species in this case) whereas the other factor variable is mapped to x=.6 Second, the group= aesthetic for the line geom must be set to the factor that describes how the lines should be connected, which will be the same as the variable mapped to the color aesthetic (e.g., species in this case). Third, the intervals and (possibly) the points at each level on the x-axis will overlap if they are not “dodged” a small amount.7 The “dodge” amount should be set outside the geom()s so that each geom uses the same amount of “dodging.” This will assure that the intervals, points, and connecting lines for each level defined by the colors align. Below this “dodge” amount is set with position_dodge() and saved to an object called pd which is then set equal to position= in each geom().6 These two variables can, of course, be exchanged. However, I generally prefer to have the variable with more levels on the x-axis.7 Note this same problem occurs for the fitPlot(), though there is no simple solution for it.\n\npd <- position_dodge(width=0.2)\nggplot(data=Mirex,mapping=aes(x=year,y=weight,color=species)) +  \n  stat_summary(fun.data=mean_cl_normal,geom=\"errorbar\",width=0.2,position=pd) + \n  stat_summary(fun=mean,geom=\"line\",mapping=aes(group=species),position=pd) +  \n  stat_summary(fun=mean,geom=\"point\",position=pd)\n\n\n\n\n\n\n\n\n \n\n\nUsing Marginal Means from emmeans\nThe mearginal means are again computed with emmeans(), but with year:species so that the marginal means and confidence intervals are estimated for each combination of year and species.\n\naov2mc <- emmeans::emmeans(aov2,specs=pairwise~year:species)\naov2mcs <- summary(aov2mc)\naov2mcs$emmeans\n\n#R|   year species emmean    SE  df lower.CL upper.CL\n#R|   1977 chinook   3.35 0.819 110    1.723     4.97\n#R|   1982 chinook   3.94 0.819 110    2.319     5.57\n#R|   1986 chinook   6.20 0.819 110    4.571     7.82\n#R|   1992 chinook   8.91 1.073 110    6.788    11.04\n#R|   1996 chinook   7.79 0.856 110    6.090     9.48\n#R|   1999 chinook   8.71 0.787 110    7.148    10.27\n#R|   1977 coho      3.06 0.819 110    1.436     4.68\n#R|   1982 coho      3.43 0.819 110    1.808     5.06\n#R|   1986 coho      2.71 0.819 110    1.090     4.34\n#R|   1992 coho      4.60 1.270 110    2.084     7.12\n#R|   1996 coho      2.67 1.004 110    0.681     4.66\n#R|   1999 coho      4.05 1.159 110    1.753     6.35\n#R|  \n#R|  Confidence level used: 0.95\n\n\nThe plot of these marginal means is constructed similarly to that for the one-way ANOVA but using the dodging and color aesthetics described above.\n\npd <- position_dodge(width=0.2)\nggplot(data=aov2mcs$emmeans,mapping=aes(x=year,color=species)) +\n  geom_errorbar(mapping=aes(ymin=lower.CL,ymax=upper.CL),width=0.2,position=pd) +\n  geom_line(mapping=aes(y=emmean,group=species),position=pd) +\n  geom_point(mapping=aes(y=emmean),position=pd)\n\n\n\n\n\n\n\n\n \n\n\n\nSimple Linear Regression\nThe code below fits a simple linear regression for examining the relationship between mirex concentration and salmon weight.\n\nslr <- lm(mirex~weight,data=Mirex)\nanova(slr)\n\n#R|  Analysis of Variance Table\n#R|  \n#R|  Response: mirex\n#R|             Df  Sum Sq  Mean Sq F value    Pr(>F)    \n#R|  weight      1 0.22298 0.222980  26.556 1.019e-06 ***\n#R|  Residuals 120 1.00758 0.008396                      \n#R|  ---\n#R|  Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n \nfitPlot() from FSA showed the best-fit line with a 95% confidence band.\n\nFSAmisc::fitPlot(slr,interval=\"confidence\")\n\n\n\n\n\n\n\n\n \n\nUsing Manually Predicted Values I\nOne method for recreating this plot is to create a new data frame that first has the two variables of observed data and then adds on predicted values of the response at each observed value of the explanatory variable with 95% confidence intervals. The two observed variables are selected from the original data frame with select(). If this new data frame is given to newdata= in predict() with interval=\"confidence\" then the predicted values (and 95% confidence intervals) will be constructed at each value of the explanatory variable. The two data frames are then column-bound together with cbind() to make one data frame for plotting (further below).\n\nslrdf <- Mirex |>\n  select(weight,mirex)\nslrdf <- cbind(slrdf,predict(slr,newdata=slrdf,interval=\"confidence\"))\npeek(slrdf,n=6)\n\n#R|      weight mirex       fit        lwr       upr\n#R|  1     0.41  0.16 0.1226593 0.09588108 0.1494376\n#R|  24    7.75  0.34 0.2119229 0.19088398 0.2329618\n#R|  49    0.34  0.02 0.1218080 0.09477073 0.1488453\n#R|  73    1.90  0.10 0.1407796 0.11907549 0.1624837\n#R|  98    9.10  0.29 0.2283406 0.20287925 0.2538019\n#R|  122  11.82  0.09 0.2614192 0.22530410 0.2975342\n\n\nThe confidence band is first plotted as a “ribbon” with the best-fit line then added followed by the observed points. In this plot, weight is globally mapped to x= in ggplot() so that it will be used for each geom. The lower and upper confidence values are mapped to ymin= and ymax= in geom_ribbon(), whereas the predicted or “fit”ted values are mapped to y= geom_line() to make the line and the observed mirex concentrations are mapped to y= in geom_point() to plot the observed points. Further note the use of alpha= to make the confidence band semi-transparent and size= to make the fitted line slightly larger than the default. Again all aspects of this plot can be changed in the usual ggplot way.\n\nggplot(data=slrdf,mapping=aes(x=weight)) +\n  geom_ribbon(mapping=aes(ymin=lwr,ymax=upr),alpha=0.2) +\n  geom_line(mapping=aes(y=fit),size=1) +\n  geom_point(mapping=aes(y=mirex))\n\n\n\n\n\n\n\n\n \n\n\nUsing Manually Predicted Values II\nWith more sparse data sets there may not be enough predicted values to make a smooth plot. In these cases, a separate data frame with more designated values for the explanatory variable is useful. The first line below creates a data frame of weights that consists of 101 evenly spaced values from the minimum to maximum observed weight in the original data frame. Concentrations of mirex at each of these weights are then predicted from the regression line and bound to the data frame.\n\nnd <- data.frame(weight=seq(min(slrdf$weight),max(slrdf$weight),length.out=101))\nnd <- cbind(nd,predict(slr,newdata=nd,interval=\"confidence\"))\npeek(slrdf,n=6)\n\n#R|      weight mirex       fit        lwr       upr\n#R|  1     0.41  0.16 0.1226593 0.09588108 0.1494376\n#R|  24    7.75  0.34 0.2119229 0.19088398 0.2329618\n#R|  49    0.34  0.02 0.1218080 0.09477073 0.1488453\n#R|  73    1.90  0.10 0.1407796 0.11907549 0.1624837\n#R|  98    9.10  0.29 0.2283406 0.20287925 0.2538019\n#R|  122  11.82  0.09 0.2614192 0.22530410 0.2975342\n\n\nThe plot is now constructed from two data frames – slrdf with the original observed data and nd with predicted concentrations of mirex at specifically chosen weights. Given this, the data to use must be specifically declared within each geom, with geom_ribbon() and geom_line() using the predicted data frame (i.e., nd) and geom_point() using the observed data (i.e., slrdf).\n\nggplot() +\n  geom_ribbon(data=nd,mapping=aes(x=weight,ymin=lwr,ymax=upr),alpha=0.2) +\n  geom_line(data=nd,mapping=aes(x=weight,y=fit),size=1) +\n  geom_point(data=slrdf,mapping=aes(x=weight,y=mirex))\n\n\n\n\n\n\n\n\n \n\n\nUsing A Built-In Function\nThe best-fit line can also be added to a scatterplot with geom_smooth(), where method=\"lm\" makes sure that a linear model is used for the “smoother.”\n\nggplot(data=Mirex,mapping=aes(x=weight,y=mirex)) +\n  geom_smooth(method=\"lm\",alpha=0.2) +\n  geom_point()\n\n\n\n\n\n\n\n\n \n\n\n\nIndicator Variable Regression\nThe code below fits an indicator variable regression to examine if the relationship between mirex concentration and salmon weight differs betwen species.\n\nivr <- lm(mirex~weight*species,data=Mirex)\nanova(ivr)\n\n#R|  Analysis of Variance Table\n#R|  \n#R|  Response: mirex\n#R|                  Df  Sum Sq  Mean Sq F value    Pr(>F)    \n#R|  weight           1 0.22298 0.222980 26.8586 9.155e-07 ***\n#R|  species          1 0.00050 0.000498  0.0600   0.80690    \n#R|  weight:species   1 0.02744 0.027444  3.3057   0.07158 .  \n#R|  Residuals      118 0.97964 0.008302                      \n#R|  ---\n#R|  Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n \nfitPlot() from FSA showed the best-fit line for both species.\n\nFSAmisc::fitPlot(ivr,interval=\"confidence\")\n\n\n\n\n\n\n\n\n \n\nUsing Manually Predicted Values\nThe process of constructing a similar plot in ggplot() follows the same general procedure as that for a simple linear regression. First, make a data frame that has the observed variables used in the model and predicted values and confidence limits for each observation.88 Again, one may want to make a data frame with more values of the explanatory variable if the observed data is sparse.\n\nivrdf <- select(Mirex,weight,mirex,species)\nivrdf <- cbind(ivrdf,predict(ivr,newdata=ivrdf,interval=\"confidence\"))\npeek(ivrdf,n=6)\n\n#R|      weight mirex species        fit        lwr       upr\n#R|  1     0.41  0.16 chinook 0.13939054 0.09905499 0.1797261\n#R|  24    7.75  0.34 chinook 0.20990801 0.18638517 0.2334308\n#R|  49    0.34  0.02    coho 0.09192064 0.04956596 0.1342753\n#R|  73    1.90  0.10    coho 0.12580003 0.09660968 0.1549904\n#R|  98    9.10  0.29 chinook 0.22287784 0.19567885 0.2500768\n#R|  122  11.82  0.09 chinook 0.24900965 0.21056798 0.2874513\n\n\n \nThen plot the data as before but making sure to map color= and fill= (just for the ribbon) to the species factor variable.\n\nggplot(data=ivrdf,mapping=aes(x=weight,color=species)) +\n  geom_ribbon(mapping=aes(ymin=lwr,ymax=upr,fill=species),alpha=0.2) +\n  geom_line(mapping=aes(y=fit),size=1) +\n  geom_point(mapping=aes(y=mirex))\n\n\n\n\n\n\n\n\n \n\n\nUsing a Built-In Function\nThis plot can also be constructed with geom_smooth(), again making sure to map the color= and fill= to the species factor variable.\n\nggplot(data=Mirex,mapping=aes(x=weight,y=mirex,color=species,fill=species)) +\n  geom_smooth(method=\"lm\",alpha=0.2) +\n  geom_point()\n\n\n\n\n\n\n\n\n \n\n\n\nLogistic Regression\nThe code below fits a logistic regression to examine the relationship between the probability that mirex concentration is greater than 0.2 and salmon weight.\n\nlogreg <- glm(gt2~weight,data=Mirex,family=\"binomial\")\nsummary(logreg)\n\n#R|  \n#R|  Call:\n#R|  glm(formula = gt2 ~ weight, family = \"binomial\", data = Mirex)\n#R|  \n#R|  Deviance Residuals: \n#R|      Min       1Q   Median       3Q      Max  \n#R|  -1.7696  -0.7462  -0.5566   0.9537   1.9789  \n#R|  \n#R|  Coefficients:\n#R|              Estimate Std. Error z value Pr(>|z|)    \n#R|  (Intercept) -2.19359    0.41871  -5.239 1.61e-07 ***\n#R|  weight       0.29822    0.06496   4.591 4.41e-06 ***\n#R|  ---\n#R|  Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#R|  \n#R|  (Dispersion parameter for binomial family taken to be 1)\n#R|  \n#R|      Null deviance: 158.35  on 121  degrees of freedom\n#R|  Residual deviance: 132.32  on 120  degrees of freedom\n#R|  AIC: 136.32\n#R|  \n#R|  Number of Fisher Scoring iterations: 3\n\n\n \nfitPlot() from FSA showed the fitted logistic regression curve with the observed values transparently at the top and bottom of the y-axis and symbols at the proportion of “successes” for “windows” of the x-axis.\n\nFSAmisc::fitPlot(logreg)\n\n\n\n\n\n\n\n\n \n\nUsing Manually Predicted Values\nThe first method for showing the logistic regression curve follows the general methodology for simple linear regression shown above. Note, however, that predict() does not produce confidence interval values for a logistic regression. Thus, the plot created in this way cannot have a confidence band.\n\nlogregdf <- select(Mirex,gt2,weight)\nlogregdf$fit <- predict(logreg,newdata=logregdf,\n                        type=\"response\",interval=\"confidence\")\npeek(logregdf,n=6)\n\n#R|      gt2 weight       fit\n#R|  1     0   0.41 0.1119161\n#R|  24    1   7.75 0.5293765\n#R|  49    0   0.34 0.1098580\n#R|  73    0   1.90 0.1642466\n#R|  98    1   9.10 0.6272046\n#R|  122   0  11.82 0.7910738\n\n\n\nggplot(data=logregdf,mapping=aes(x=weight)) +\n  geom_point(mapping=aes(y=gt2),alpha=0.25) +\n  geom_line(mapping=aes(y=fit),size=1)\n\n\n\n\n\n\n\n\n \n\n\nUsing a Built-In Function\nThe best-fit logistic regression curve with a confidence band can, however, be added to a scatterplot with geom_smooth(). In this case, method= must be changed to glm and method.args= must be used as shown below so that glm will construct a logistic (rather than linear) regression.\n\nggplot(data=Mirex,mapping=aes(x=weight,y=gt2)) +\n  geom_smooth(method=\"glm\",alpha=0.2,method.args=list(family=\"binomial\")) +\n  geom_point(alpha=0.25)\n\n\n\n\n\n\n\n\n \nNote that this method easily generalizes to an indicator variable logistic regression (note that color= and fill= are mapped to the species factor variable).\n\nlogreg2 <- glm(gt2~weight*species,data=Mirex,family=\"binomial\")\n\nggplot(data=Mirex,mapping=aes(x=weight,y=gt2,color=species,fill=species)) +\n  geom_smooth(method=\"glm\",alpha=0.2,\n              method.args=list(family=\"binomial\")) +\n  geom_point(alpha=0.25)\n\n\n\n\n\n\n\n\n \n\n\n\nPolynomial Regression\nThe code below fits a quadratic (second degree polynomial) regression for the relationship between mirex concentration and salmon weight.\n\npoly2 <- lm(mirex~weight+I(weight^2),data=Mirex)\nsummary(poly2)\n\n#R|  \n#R|  Call:\n#R|  lm(formula = mirex ~ weight + I(weight^2), data = Mirex)\n#R|  \n#R|  Residuals:\n#R|        Min        1Q    Median        3Q       Max \n#R|  -0.208068 -0.048257  0.000994  0.060883  0.244424 \n#R|  \n#R|  Coefficients:\n#R|                Estimate Std. Error t value Pr(>|t|)    \n#R|  (Intercept)  0.0875361  0.0209754   4.173 5.74e-05 ***\n#R|  weight       0.0283282  0.0086331   3.281  0.00136 ** \n#R|  I(weight^2) -0.0013524  0.0006953  -1.945  0.05413 .  \n#R|  ---\n#R|  Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#R|  \n#R|  Residual standard error: 0.09059 on 119 degrees of freedom\n#R|  Multiple R-squared:  0.2064,   Adjusted R-squared:  0.1931 \n#R|  F-statistic: 15.48 on 2 and 119 DF,  p-value: 1.06e-06\n\n\n \nfitPlot() from FSA showed the best-fit regression curve.\n\nFSAmisc::fitPlot(poly2,interval=\"confidence\")\n\n\n\n\n\n\n\n\n \n\nUsing Manually Predicted Values\nThis regression can be viewed similarly to the way the simple linear regressions was viewed.\n\npolydf <- select(Mirex,weight,mirex)\npolydf <- cbind(polydf,predict(poly2,newdata=polydf,interval=\"confidence\"))\nggplot(polydf,mapping=aes(x=weight)) +\n  geom_ribbon(mapping=aes(ymin=lwr,ymax=upr),alpha=0.2) +\n  geom_line(mapping=aes(y=fit),size=1) +\n  geom_point(mapping=aes(y=mirex))\n\n\n\n\n\n\n\n\n \n\n\nUsing a Built-In Function\nThis type of regression can also be viewed using geom_smooth() but the formula for the polynomial must be given to formula=. However, note that in this formula you put y and x rather than the names of the variables that are mapped to y and x.\n\nggplot(data=Mirex,mapping=aes(x=weight,y=mirex)) +\n  geom_smooth(method=\"lm\",formula=\"y~x+I(x^2)\",alpha=0.2) +\n  geom_point()\n\n\n\n\n\n\n\n\n \n\n\n\nNonlinear Regression\nThe concepts about producing a fitted line plot for a non-linear regression in ggplot is described in detail, with respect to a von Bertalanffy growth function, in this post and this post.\n \n\n\nConclusion\nfitPlot() in FSA was removed in early 2022. This post describes a more transparent (i.e., not a “black box”) and flexible set of methods for constructing similar plots using ggplot2 for those who will need to transition away from using fitPlot().\nAs mentioned in the examples above, each plot can be modified further using typical methods for ggplot2. These changes were not illustrated above to minimize the amount of code shown in this post. However, as an example, the code below shows a possible modification of the IVR plot shown above.\n\nggplot(data=Mirex,mapping=aes(x=weight,y=mirex,color=species,fill=species)) +\n  geom_smooth(method=\"lm\",alpha=0.1,size=1.25) +\n  geom_point(size=1.5) +\n  scale_y_continuous(name=\"Mirex Concentration in Tissue\",limits=c(0,0.5),\n                     expand=expansion(mult=0)) +\n  scale_x_continuous(name=\"Salmon Weight (kg)\",limits=c(0,15),\n                     expand=expansion(mult=0)) +\n  scale_color_manual(values=c(\"#E69F00\",\"#0072B2\"),\n                     aesthetics=c(\"color\",\"fill\")) +\n  theme(panel.grid.major=element_line(color=\"gray90\",linetype=\"dashed\"),\n        panel.grid.minor=element_blank(),\n        axis.title=element_text(size=rel(1.25)),\n        axis.text=element_text(size=rel(1.1)),\n        legend.position=c(0,1),\n        legend.justification=c(-0.05,1.02),\n        legend.title=element_blank(),\n        legend.text=element_text(size=rel(1.1)))\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{h.ogle2021,\n  author = {Derek H. Ogle},\n  title = {Replace {fitPlot()} with Ggplot},\n  date = {2021-05-25},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2021-5-25_fitPlot-replacement},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDerek H. Ogle. 2021, May 25. Replace\nfitPlot() with ggplot."
  },
  {
    "objectID": "blog/posts/2021-5-26_filterD-replacement/index.html",
    "href": "blog/posts/2021-5-26_filterD-replacement/index.html",
    "title": "Replace filterD()",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below.\n\n\n\nlibrary(dplyr)  ## for filter()\n\n\n\n\n\n\n\nWarning\n\n\n\nSome functions illustrated below were in the FSA package but have now been removed and put into the non-released FSAmisc package that I maintain. These functions are used below only to show what could be done in older versions of FSA but should now be done as described in this post. DO NOT USE any of the functions below that begin with FSAmisc::.\n\n\n \nWe deprecated filterD() from FSA v0.9.0 and fully removed it by the start of 2022. filterD() was an attempt to streamline the process of using filter() (from dplyr) followed by droplevels() to remove levels of a factor variable that no longer existed in the filtered data frame.\nFor example, consider the very simple data frame below.\n\nd <- data.frame(tl=runif(6,min=100,max=200),\n                spec=factor(c(\"LMB\",\"LMB\",\"SMB\",\"BG\",\"BG\",\"BG\")))\nd\n\n#R|          tl spec\n#R|  1 136.9208  LMB\n#R|  2 120.8994  LMB\n#R|  3 161.4157  SMB\n#R|  4 125.8987   BG\n#R|  5 132.3581   BG\n#R|  6 131.1328   BG\n\n\nNow suppose that this data frame is reduced to just Bluegill.\n\ndbg <- d |>\n  filter(spec==\"BG\")\n\nA quick frequency table of species caught shows that levels for species that no longer exist in the data frame are maintained.\n\nxtabs(~spec,data=dbg)\n\n#R|  spec\n#R|   BG LMB SMB \n#R|    3   0   0\n\n\nThis same “problem” occurs when using subset() from base R.\n\ndbg <- subset(d,spec==\"BG\")\nxtabs(~spec,data=dbg)\n\n#R|  spec\n#R|   BG LMB SMB \n#R|    3   0   0\n\n\nThese “problems” can be eliminated by submitting the new data frame to drop.levels().\n\ndbg2 <- droplevels(dbg)\nxtabs(~spec,data=dbg2)\n\n#R|  spec\n#R|  BG \n#R|   3\n\n\nfilterD() was a simple work-around that eliminated this second step and was useful for helping students who were just getting started with R.\n\ndbg3 <- FSAmisc::filterD(d,spec==\"BG\")\nxtabs(~spec,data=dbg3)\n\n#R|  spec\n#R|  BG \n#R|   3\n\n\nHowever, this was a hacky solution to a simple problem. Thus, we deprecated and subsequently removed filterD() from FSA. Thus, please use droplevels() (or fct_drop() from forcats) after using filter() to accomplish the same task of the defunct filterD().\n \n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{h.ogle2021,\n  author = {Derek H. Ogle},\n  title = {Replace {filterD()}},\n  date = {2021-05-26},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2021-5-26_filterD-replacement},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDerek H. Ogle. 2021, May 26. Replace\nfilterD()."
  },
  {
    "objectID": "blog/posts/2021-6-1_residPlot-replacement/index.html",
    "href": "blog/posts/2021-6-1_residPlot-replacement/index.html",
    "title": "Replace residPlot() with ggplot",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below. One function from nlstools is also used but the entire package is not loaded here. I also set the default ggplot theme to theme_bw() for a classic “black-and-white” plot (rather than the default plot with a gray background).\n\n\n\nlibrary(FSA)          ## for peek(), vbFuns(), vbStarts(), SpotVA1\nlibrary(dplyr)        ## for mutate()\nlibrary(ggplot2)\nlibrary(patchwork)    ## placing plots (in conclusion)\ntheme_set(theme_bw())\n\n\n\n\n\n\n\nNote\n\n\n\nSome functions illustrated below were in the FSA package but have now been removed and put into the non-released FSAmisc package that I maintain. These functions are used below only to show what could be done in older versions of FSA but should now be done as described in this post. DO NOT USE any of the functions below that begin with FSAmisc::.\n\n\n \n\nIntroduction\nWe deprecated residPlot() from FSA v0.9.0 and fully removed it by the start of 2022. We took this action to make FSA more focused on fisheries applications and to eliminate “black box” functions. residPlot() was originally designed for students to quickly visualize residuals from one- and two-way ANOVAs and simple, indicator variable, and logistic regressions.1 We now feel that students are better served by learning how to create these visualizations using methods provided by ggplot2, which require more code, but are more modern, flexible, and transparent.1 Over time functionality for non-linear regressions was added.\nThe basic plots produced by residPlot() are recreated here using ggplot2 to provide a resource to help users that relied on residPlot() transition to ggplot2.\n \n\n\nExample Data\nMost examples below use the Mirex data set from FSA, which contains the concentration of mirex in the tissue and the body weight of two species of salmon (chinook and coho) captured in six years. The year variable is converted to a factor for modeling purposes and a new variable is created that indicates if the mirex concentration was greater that 0.2 or not. These same data were used in this post about removing fitPlot() from FSA.22 peek() from FSA is used to examine a portion of the data from evenly-spaced row.\n\ndata(Mirex,package=\"FSA\")\nMirex <- Mirex |>\n  mutate(year=factor(year),\n         gt2=ifelse(mirex>0.2,1,0))\npeek(Mirex,n=10)\n\n#R|      year weight mirex species gt2\n#R|  1   1977   0.41  0.16 chinook   0\n#R|  14  1977   3.29  0.23    coho   1\n#R|  27  1982   0.70  0.10    coho   0\n#R|  41  1982   5.09  0.27    coho   1\n#R|  54  1986   1.82  0.12 chinook   0\n#R|  68  1986   8.40  0.13 chinook   0\n#R|  81  1992  10.00  0.48 chinook   1\n#R|  95  1996   5.70  0.16    coho   0\n#R|  108 1999   5.11  0.11    coho   0\n#R|  122 1999  11.82  0.09 chinook   0\n\n\n \n\n\nOne-Way ANOVA\nThe code below fits a one-way ANOVA model to examine if mean weight differs by species.\n\naov1 <- lm(weight~species,data=Mirex)\nanova(aov1)\n\n#R|  Analysis of Variance Table\n#R|  \n#R|  Response: weight\n#R|             Df Sum Sq Mean Sq F value    Pr(>F)    \n#R|  species     1  282.4 282.399  27.657 6.404e-07 ***\n#R|  Residuals 120 1225.3  10.211                      \n#R|  ---\n#R|  Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n \nresidPlot() from FSA produced a boxplot of residuals by group (left) and a histogram of residuals (right).\n\nFSAmisc::residPlot(aov1)\n\n\n\n\n\n\n\n\n \nA data frame of the two variables used in the ANOVA appended with the fitted values and residuals from the model fit must be made to construct this plot using ggplot(). Studentized residuals are included below in case you would prefer to plot them.33 These are “internally” Studentized residuals. “Externally” Studentized residuals can be obtained with rstandard().\n\ntmp <- Mirex |>\n  select(weight,species) |>\n  mutate(fits=fitted(aov1),\n         resids=resid(aov1),\n         sresids=rstudent(aov1))\npeek(tmp,n=8)\n\n#R|      weight species     fits     resids    sresids\n#R|  1     0.41 chinook 6.314776 -5.9047761 -1.8814369\n#R|  17    4.77    coho 3.257091  1.5129091  0.4762846\n#R|  35    2.92 chinook 6.314776 -3.3947761 -1.0710643\n#R|  52    1.70    coho 3.257091 -1.5570909 -0.4902213\n#R|  70    9.53 chinook 6.314776  3.2152239  1.0139117\n#R|  87    0.90    coho 3.257091 -2.3570909 -0.7430562\n#R|  105   2.61    coho 3.257091 -0.6470909 -0.2035546\n#R|  122  11.82 chinook 6.314776  5.5052239  1.7507263\n\n\n \nThe histogram of residuals is constructed with geom_histogram() below. Note that the color of the histogram bars are modified and the bin width is set to better control the number of bars in the histogram. Finally, the bottom multiplier for the y-axis is set to zero so that that histogram bars do not “hover” above the x-axis.\n\nggplot(data=tmp,mapping=aes(x=resids)) +\n  geom_histogram(color=\"gray30\",fill=\"gray70\",binwidth=0.5) +\n  scale_y_continuous(expand=expansion(mult=c(0,0.05)))\n\n\n\n\n\n\n\n\n \nThe boxplot of residuals by group (species in this case) is constructed with geom_boxplot() below (again controlling the colors of the boxplot).\n\nggplot(data=tmp,mapping=aes(x=species,y=resids)) +\n  geom_boxplot(color=\"gray30\",fill=\"gray70\")\n\n\n\n\n\n\n\n\n \nThese plots can be further modified using methods typical for ggplot (see conclusion section).\n \n\n\nTwo-Way ANOVA\nThe code below fits a two-way ANOVA model to examine if mean weight differs by species, by year, or by the interaction between species and year.\n\naov2 <- lm(weight~year*species,data=Mirex)\nanova(aov2)\n\n#R|  Analysis of Variance Table\n#R|  \n#R|  Response: weight\n#R|                Df Sum Sq Mean Sq F value    Pr(>F)    \n#R|  year           5 281.86  56.373  6.9954 1.039e-05 ***\n#R|  species        1 221.69 221.689 27.5099 7.648e-07 ***\n#R|  year:species   5 117.69  23.538  2.9208   0.01628 *  \n#R|  Residuals    110 886.44   8.059                      \n#R|  ---\n#R|  Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n \nresidPlot() from FSA showed a boxplot of residuals by each combination of the two factor variables (left) and a histogram of the residuals (right).\n\nFSAmisc::residPlot(aov2)\n\n\n\n\n\n\n\n\n \nA data frame of the three variables used in the ANOVA appended with the fitted values and residuals from the model fit must be constructed.\n\ntmp <- Mirex |>\n  select(weight,species,year) |>\n  mutate(fits=fitted(aov2),\n         resids=resid(aov2),\n         sresids=rstudent(aov2))\n\n \nThe histogram of residuals is constructed exactly as before and won’t be repeated here. The boxplot of residuals by group is constructed with one of the factor variables on the x-axis and the other factor variable as separate facets.44 These two variables can, of course, be exchanged. However, I generally prefer to have the variable with more levels on the x-axis.\n\nggplot(data=tmp,mapping=aes(x=year,y=resids)) +\n  geom_boxplot(color=\"gray30\",fill=\"gray70\") +\n  facet_wrap(vars(species))\n\n\n\n\n\n\n\n\n \n\n\nSimple Linear Regression\nThe code below fits a simple linear regression for examining the relationship between mirex concentration and salmon weight.\n\nslr <- lm(mirex~weight,data=Mirex)\nanova(slr)\n\n#R|  Analysis of Variance Table\n#R|  \n#R|  Response: mirex\n#R|             Df  Sum Sq  Mean Sq F value    Pr(>F)    \n#R|  weight      1 0.22298 0.222980  26.556 1.019e-06 ***\n#R|  Residuals 120 1.00758 0.008396                      \n#R|  ---\n#R|  Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n \nresidPlot() from FSA showed a scatterplot of residuals versus fitted values (left) and a histogram of residuals (right).\n\nFSAmisc::residPlot(slr)\n\n\n\n\n\n\n\n\n \nA data frame of the two variables used in the ANOVA appended with the fitted values and residuals from the model fit must be constructed.\n\ntmp <- Mirex |>\n  select(weight,mirex) |>\n  mutate(fits=fitted(slr),\n         resids=resid(slr),\n         sresids=rstudent(slr))\n\n \nThe histogram of residuals is constructed exactly as before and won’t be repeated here. The scatterplot of residuals versus fitted values is constructed with geom_point() as below. Note that geom_hline() is used to place the horizontal line at 0 on the y-axis.\n\nggplot(data=tmp,mapping=aes(x=fits,y=resids)) +\n  geom_point() +\n  geom_hline(yintercept=0,linetype=\"dashed\")\n\n\n\n\n\n\n\n\n \nIt is also possible to include a loess smoother to help identify a possible nonlinearity in this residual plot.\n\nggplot(data=tmp,mapping=aes(x=fits,y=resids)) +\n  geom_point() +\n  geom_hline(yintercept=0,linetype=\"dashed\") +\n  geom_smooth()\n\n\n\n\n\n\n\n\n \n\n\nIndicator Variable Regression\nThe code below fits an indicator variable regression to examine if the relationship between mirex concentration and salmon weight differs betwen species.\n\nivr <- lm(mirex~weight*species,data=Mirex)\nanova(ivr)\n\n#R|  Analysis of Variance Table\n#R|  \n#R|  Response: mirex\n#R|                  Df  Sum Sq  Mean Sq F value    Pr(>F)    \n#R|  weight           1 0.22298 0.222980 26.8586 9.155e-07 ***\n#R|  species          1 0.00050 0.000498  0.0600   0.80690    \n#R|  weight:species   1 0.02744 0.027444  3.3057   0.07158 .  \n#R|  Residuals      118 0.97964 0.008302                      \n#R|  ---\n#R|  Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n \nresidPlot() from FSA is the same for an IVR as for an SLR, except that the points on the residual plot (left) had different colors for the different groups.\n\nFSAmisc::residPlot(ivr)\n\n\n\n\n\n\n\n\n \nA data frame of the three variables used in the ANOVA appended with the fitted values and residuals from the model fit must be constructed.\n\ntmp <- Mirex |>\n  select(weight,mirex,species) |>\n  mutate(fits=fitted(ivr),\n         resids=resid(ivr),\n         sresids=rstudent(ivr))\n\n \nThe histogram of residuals is constructed exactly as before and won’t be repeated here. The scatterplot of residuals versus fitted values is constructed with geom_point(). Note that color= and shape= are both set equal to the factor variable to change the color and plotting character to represent the different groups.\n\nggplot(data=tmp,mapping=aes(x=fits,y=resids,color=species,shape=species)) +\n  geom_point() +\n  geom_hline(yintercept=0,linetype=\"dashed\")\n\n\n\n\n\n\n\n\n \n\n\nNonlinear Regression\nThe following code fits a von Bertalanffy growth function (VBGF) to the total length and age data for spot found in the SpotVA1 data frame built into FSA. Fitting the VBGF is described in more detail here.\n\nvb <- vbFuns()\nvbs <- vbStarts(tl~age,data=SpotVA1)\nnlreg <- nls(tl~vb(age,Linf,K,t0),data=SpotVA1,start=vbs)\n\n \nresidPlot() from FSA produced plots exactly as for a simple linear regression.\n\nFSAmisc::residPlot(nlreg)\n\n\n\n\n\n\n\n\n \nA data frame of the two variables used in the ANOVA appended with the fitted values and residuals from the model fit must be constructed. The rstudent() function does not work for non-linear models, but the Studentized residuals are computed with nlsResiduals() from nlstools. However, these values are “buried” in the Standardized residuals column of the resi2 matrix returned by that function; thus, it takes a little work to extract them as shown below.\n\ntmp <- SpotVA1 |>\n  select(tl,age) |>\n  mutate(fits=fitted(nlreg),\n         resids=resid(nlreg),\n         sresids=nlstools::nlsResiduals(nlreg)$resi2[,\"Standardized residuals\"])\npeek(tmp,n=8)\n\n#R|        tl age      fits     resids    sresids\n#R|  1    6.5   0  7.348034 -0.8480343 -0.8051925\n#R|  58   8.3   1  9.251581 -0.9515812 -0.9035082\n#R|  115  8.5   1  9.251581 -0.7515812 -0.7136121\n#R|  173  9.7   1  9.251581  0.4484188  0.4257650\n#R|  230  9.8   2 10.771696 -0.9716957 -0.9226066\n#R|  288 10.5   2 10.771696 -0.2716957 -0.2579700\n#R|  345 11.5   3 11.985613 -0.4856128 -0.4610802\n#R|  403 13.9   4 12.955010  0.9449900  0.8972498\n\n\n \nOnce this data frame is constructed the residual plot and histogram of residuals are constructed exactly as for linear regression and won’t be repeated here.\n \n\n\nConclusion\nThe residPlot() function in FSA was removed by 2022. This post describes a more transparent (i.e., not a “black box”) and flexible set of methods for constructing similar plots using ggplot2 for those who will need to transition away from using residPlot().55 Different “residual plots” are available in plot() (from base R when given an object from lm()), car::residualPlots(), DHARMa::plotResiduals(), and ggResidpanel::resid_panel().\nAs mentioned in the examples above, each plot can be modified further using typical methods for ggplot2. These changes were not illustrated above to minimize the amount of code shown in this post. However, as an example, the code below shows a possible modification of the IVR residual plot shown above.66 patchwork is used here to place the plots side-by-side.\n\n## Recreate the data frame of results for the IVR\ntmp <- Mirex |>\n  select(weight,mirex,species) |>\n  mutate(fits=fitted(ivr),\n         resids=resid(ivr),\n         sresids=rstudent(ivr))\n\n## Create a general theme that can be applied to both plots\ntheme_DHO <- theme_bw() +\n  theme(panel.grid.major=element_line(color=\"gray90\",linetype=\"dashed\"),\n        panel.grid.minor=element_blank(),\n        axis.title=element_text(size=rel(1.25)),\n        axis.text=element_text(size=rel(1.1)),\n        legend.position=c(0,1),\n        legend.justification=c(-0.05,1.02),\n        legend.title=element_blank(),\n        legend.text=element_text(size=rel(1.1)))\n\n## Construct the residual plot\nr1 <- ggplot(tmp,aes(x=fits,y=sresids,color=species)) +\n  geom_point(size=1.5,alpha=0.5) +\n  geom_hline(yintercept=0,linetype=\"dashed\") +\n  geom_smooth(se=FALSE) +\n  scale_y_continuous(name=\"Studentized Residuals\") +\n  scale_x_continuous(name=\"Fitted Values\") +\n  scale_color_manual(values=c(\"#E69F00\",\"#0072B2\"),guide=\"none\") +\n  theme_DHO\n\n## Construct the histogram of residuals\nr2 <- ggplot(tmp,aes(x=sresids,color=species,fill=species)) +\n  geom_histogram(alpha=0.5,binwidth=0.25) +\n  scale_y_continuous(name=\"Frequency\",expand=expansion(mult=c(0,0.05))) +\n  scale_x_continuous(name=\"Studentized Residuals\") +\n  scale_color_manual(values=c(\"#E69F00\",\"#0072B2\"),\n                     aesthetics=c(\"color\",\"fill\")) +\n  theme_DHO\n\n## Put plots side-by-side (the \"+\" is provided by patchwork)\nr1 + r2\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@misc{h.ogle2021,\n  author = {Derek H. Ogle},\n  title = {Replace {residPlot()} with Ggplot},\n  date = {2021-06-01},\n  url = {https://fishr-core-team.github.io/fishR//blog/posts/2021-6-1_residPlot-replacement},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDerek H. Ogle. 2021, June 1. Replace\nresidPlot() with ggplot."
  },
  {
    "objectID": "blog/posts/2022-12-22_AFS_Style_Figures/index.html",
    "href": "blog/posts/2022-12-22_AFS_Style_Figures/index.html",
    "title": "AFS Style in ggplot2 Figures",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below."
  },
  {
    "objectID": "blog/posts/2022-12-22_AFS_Style_Figures/index.html#plot-specific-elements",
    "href": "blog/posts/2022-12-22_AFS_Style_Figures/index.html#plot-specific-elements",
    "title": "AFS Style in ggplot2 Figures",
    "section": "Plot-Specific Elements",
    "text": "Plot-Specific Elements\nI suggest the following changes to the plot-specific elements. Implementing these suggestions will result in Figure 2 (A).\n\nName the second argument to ggplot() (i.e., mapping=). ggplot() is smart enough to figure this out but I think it is awkward to name the first argument (i.e., data=) but not the second.\nI moved the text for the axis labels (i.e., titles) into scale_y_continuous() and scale_x_continuous() for simplicity (and thus removed ylab() and xlab()).\nI changed expand=c(0,0) in scale_y_continuous() and scale_x_continuous() to expand=expansion(mult=c(0,0)) to follow more recent ggplot2 conventions. This still results in no scale expansion at the top or bottom of axis.\nI removed limits= in scale_fill_manual() and used a named vector in values= to accomplish the same task. I think this makes it easier to see which category gets which color.\nI removed ggtitle() as I am going to accomplish that same task with patchwork as shown below (i.e., where the two plots are place side-by-side).\nI used legend.title=element_blank() in theme() rather than labs(fill=\"\") to remove to legend title. I think(?) this handles the freed up space better.\nI included legend.position= in theme() here because Glassic et al. (2019) positioned the legend within the plot area and, thus, will need to be set specific to each plot (i.e., will need to manually find a “white area”).\n\n\nlen_wt_afs1 <- ggplot(data=length_weight_data,\n                      mapping=aes(x=length,y=weight,fill=species)) +\n  # set symbol shape and size\n  geom_point(shape=21,size=2) +\n  # set the limits, tick breaks, and scale expansion for the y- and x-axis\n  scale_y_continuous(name=\"Weight (g)\",\n                      limits=c(0,2400),breaks=seq(0,2400,400),\n                      expand=expansion(mult=c(0,0))) +\n  scale_x_continuous(name=\"Length (mm)\",limits=c(100,600),breaks=seq(100,600,100),\n                      expand=expansion(mult=c(0,0))) +\n  # set the symbol colors and make new labels for each level\n  scale_fill_manual(values=c(\"lmb\"=\"black\",\"cat\"=\"white\"),\n                    labels=c(\"Largemouth Bass\",\"Channel Catfish\")) +\n  theme(\n    # remove legend title\n    legend.title=element_blank(),\n    # set legend position within the plot\n    legend.position = c(0.35,0.95)\n  )"
  },
  {
    "objectID": "blog/posts/2022-12-22_AFS_Style_Figures/index.html#custom-theme-for-all-plots",
    "href": "blog/posts/2022-12-22_AFS_Style_Figures/index.html#custom-theme-for-all-plots",
    "title": "AFS Style in ggplot2 Figures",
    "section": "Custom Theme for All Plots",
    "text": "Custom Theme for All Plots\nTheme elements that will be consistent across plots can be put into a custom theme that can then be easily applied to any plot. The code below, for example, shows the start of a new theme called theme_AFS() that has theme_classic() as its base but will have several elements replaced. theme_AFS() will use a base font size of 14 and Times New Roman as defaults, which will minimize some of the authors’ code (as described below).\n\ntheme_AFS <- function(base_size=14,base_family=\"Times New Roman\") {\n  theme_classic(base_size=base_size,base_family=base_family) +\n    theme(\n      ### Change theme elements here ###\n    )\n}\n\nWithin theme() I add nearly all of the elements that Glassic et al. (2019) included, though I reordered the items in a way that makes sense to me (e.g., axis title then axis tick labels then axis ticks then axis line). Other adjustments are:\n\nI removed text= because the font family was already set with base_family=.\nI removed legend.position= because, as described above, Glassic et al. (2019) positioned the legend within the plot area.\nI removed size=14 from axis.title.y=, axis.title.x=, axis.text.y=, and axis.text.x= because that was set with base_size=.\nI replaced axis.ticks.y= and axis.ticks.x= with axis.ticks= because their elements were the same and using axis.ticks= will set both at the same time.\n\n\ntheme_AFS <- function(base_size=14,base_family=\"Times New Roman\") {\n  theme_classic(base_size=base_size,base_family=base_family) +\n    theme(\n      # modify plot title,the B in this case\n      plot.title=element_text(family=\"Arial\",face=\"bold\"),\n      # margin for the plot\n      plot.margin=unit(c(0.5,0.5,0.5,0.5),\"cm\"),\n      # set axis label (i.e., title) colors and margins\n      axis.title.y=element_text(colour=\"black\",margin=margin(t=0,r=10,b=0,l=0)),\n      axis.title.x=element_text(colour=\"black\",margin=margin(t=10,r=0,b=0,l=0)),\n      # set tick label color, margin, and position and orientation\n      axis.text.y=element_text(colour=\"black\",margin=margin(t=0,r=5,b=0,l=0),\n                               vjust=0.5,hjust=1),\n      axis.text.x=element_text(colour=\"black\",margin=margin(t=5,r=0,b=0,l=0),\n                               vjust=0,hjust=0.5,),\n      # set size of the tick marks for y- and x-axis\n      axis.ticks=element_line(linewidth=0.5),\n      # adjust length of the tick marks\n      axis.ticks.length=unit(0.2,\"cm\"),\n      # set the axis size,color,and end shape\n      axis.line=element_line(colour=\"black\",linewidth=0.5,lineend=\"square\"),\n      # adjust size of text for legend\n      legend.text=element_text(size=12)\n    )\n}\n\ntheme_AFS() can then be “added” to any plot to apply its elements. For example, applying theme_AFS() to the code that produced Figure 2 (A) will produce Figure 2 (B). It is important, however, to make sure that the plot-specific theme() elements are applied after the custom theme.\n\nlen_wt_afs2 <- ggplot(data=length_weight_data,\n                      mapping=aes(x=length,y=weight,fill=species)) +\n  # set symbol shape and size\n  geom_point(shape=21,size=2) +\n  # set the limits, tick breaks, and scale expansion for the y- and x-axis\n  scale_y_continuous(name=\"Weight (g)\",\n                     limits=c(0,2400),breaks=seq(0,2400,400),\n                     expand=expansion(mult=c(0,0))) +\n  scale_x_continuous(name=\"Length (mm)\",\n                     limits=c(100,600),breaks=seq(100,600,100),\n                     expand=expansion(mult=c(0,0))) +\n  # set the symbol colors and make new labels for each level\n  scale_fill_manual(values=c(\"lmb\"=\"black\",\"cat\"=\"white\"),\n                    labels=c(\"Largemouth Bass\",\"Channel Catfish\")) +\n  theme_AFS() +\n  theme(\n    # remove legend title\n    legend.title=element_blank(),\n    # set legend position within the plot\n    legend.position = c(0.35,0.95)\n  )\n\n\n\n\n\n\n\nHint\n\n\n\nSee the “Themes” chapter of Wickham et al. (2022) for an excellent description of using themes in ggplot2 graphics."
  },
  {
    "objectID": "blog/posts/2022-12-22_AFS_Style_Figures/index.html#using-patchwork-to-position-plots",
    "href": "blog/posts/2022-12-22_AFS_Style_Figures/index.html#using-patchwork-to-position-plots",
    "title": "AFS Style in ggplot2 Figures",
    "section": "Using patchwork to Position Plots",
    "text": "Using patchwork to Position Plots\nThe patchwork package provides simple but extensive tools for combining multiple plots. Two plots can simply be “added” together to place them side-by-side (Figure 2). plot_annotation() is used to add letters to the two panels.88 See the excellent documentation for patchwork to better understand what this package can do.\n\nlen_wt_afs1 + len_wt_afs2 +\n  plot_annotation(tag_levels=\"A\")\n\n\n\n\nFigure 2: Figures made with ggplot2 including one with (A) only plot-specific modifications to default values and (B) with plot specific modifications and a custom theme that adheres to American Fisheries Society guidelines for authors. Panel B reproduces panel B in Figure 1 above and Figure 2 in Glassic et al. (2019).\n\n\n\n\n\n\n\n\n\n\nHint\n\n\n\nAnnotating plots with patchwork will place the annotations on the very edge of the figure panel. Use ggtitle() to move them more to the right as Glassic et al. (2019) had them."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "fishR",
    "section": "",
    "text": "fishR provides resources for fisheries-related analyses performed in R, an environment for statistical analyses and graphics that has gained wide popularity with fisheries scientists. We hope the resources in the navigation bar above will help you use or expand your knowledge of R for fisheries-related analyses."
  },
  {
    "objectID": "pages/books.html",
    "href": "pages/books.html",
    "title": "Fisheries-Related R Books",
    "section": "",
    "text": "You may submit additions or corrections by using the links at the bottom of the sidebar menu to the right. Thank you for your contribution to this resource.\n\n\n\n \n\n\n\n\n\nAge and Growth of Fish: Principles and Techniques\n\n\n\n\n\n\n\n\nEditors: Michael Quist and Daniel Isermann\nYear: 2017\nBook Webpage\nR Resources\nReviews: Here and here.\n\n\n\n\n\n \n\n\n\n\n\n\nAnalysis and Interpretation of Freshwater Fisheries Data I\n\n\n\n\n\n\n\n\nEditors: Christopher Guy and Michael Brown\nYear: 2007\nBook Webpage\nR Resources\nReviews: Here (2nd page), here (paywall), and here (paywall)\n\n\n\n\n\n \n\n\n\n\n\n\nIntroductory Fisheries Analyses with R\n\n\n\n\n\n\n\n\nAuthor: Derek H. Ogle\nYear: 2015\nBook Webpage\nR Resources: Chapter Scripts, Supplements, related package\nReviews: Here (paywall)\n\n\n\n\n\n \n\n\n\n\n\n\nUsing R for Modelling and Quantitative Methods in Fisheries\n\n\n\n\n\n\n\n\nAuthor: Malcolm Haddon\nYear: 2020\nBook Webpage\nR Resources: within book link and related package"
  },
  {
    "objectID": "pages/contribute.html",
    "href": "pages/contribute.html",
    "title": "Get Involved with fishR",
    "section": "",
    "text": "It is our vision that fishR will be a website where others contribute content or resources. Specific opportunities to get involved or to contribute to this community are:\n\nSubmit edits or corrections to any page (by “Edit this page” and submitting a pull request, by “Report an issue”, or simply sending us an e-mail).\nSubmit a data set for inclusion in FSAdata and thus the fishR webpage.\nSubmit (for here) a post of using R for a particular fisheries-related analysis (we can help you with the formatting).\nSubmit (for here) a teaching-related concept explanation, class or homework exercise, or case study (again, we can help with formatting).\nSuggest additions to the website.\nDiscuss a post or teaching resource (see discussion box at bottom of all posts and teaching resources).\nTell others about the fishR website!!"
  },
  {
    "objectID": "pages/data_Comp_byPackage.html",
    "href": "pages/data_Comp_byPackage.html",
    "title": "Fisheries-related datasets in CRAN packages",
    "section": "",
    "text": "Datasets from packages not controlled by the fishR Core Team (i.e., FSA and FSAdata) are entered manually, so please submit a GitHub Issue (see link at bottom of right sidebar menu) with any corrections or additions.\n\n\n\n \n\nalr3\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nlakemary\nAge and length of Bluegill from Lake Mary, MN\n\n\nwalleye\nAge and length of Walleye from Butternut Lake, WI in 3 different management periods\n\n\nwblake\nAge and length of Smallmouth Bass from West Bearsking Lake, MN (exclude age-9 and older)\n\n\nwblake2\nAge and length of Smallmouth Bass from West Bearsking Lake, MN (all fish)\n\n\n\n \n\n\nAquaticLifeHistory\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\ngrowth_data\nLength-at-age data for common blacktip sharks (Carcharhinus limbatus) from Indonesia\n\n\nmaturity_data\nLength-at-maturity and age-at-maturity data for female silky sharks (Carcharhinus falciformis) from Papua New Guinea\n\n\n\n \n\n\nCatDyn\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\ngayhake\nIndustrial and Artisanal Catch and Effort Data from the Chilean Hake Fishery\n\n\ngayhakelm\nLength and Month data of Chilean hake from Artisanal Fishery\n\n\ngayhakelw\nLength and Weight data of Chilean hake from Artisanal Fishery\n\n\nlolgahi\nIndustrial Trawling Data from the Squid Fishery of the Falkland Islands\n\n\ntwelver\nExhaustive recorded operational activity of the Anguilla japonica sport fishery in Taiwan during the 1983-1984 season\n\n\n\n \n\n\nCOUNT\n\n\n\nDataset\nDescription\n\n\n\n\nfishing\nSite abundance and characteristics from commercial fishing\n\n\n\n \n\n\nfishkirkko2015\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nfishkirkkojarvi2015\nWeight-length data for six freshwater species from Lake Kirkkojarvi, Finland\n\n\n\n \n\n\nfishmethods\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nalkdata\nAge-length key (summarized form) for Gulf of Hauraki snapper shown in Table 8.3 of Quinn and Deriso (1999)\n\n\nbonito\nGrowth increment data derived from tagging experiments on Pacific bonito (Sarda chiliensis)\n\n\ncatch\nNumber of cod captured in 10 standardized bottom trawl hauls from Massachusetts, 1985\n\n\ncodcluslen\nLengths of Atlantic cod caught during Massachusetts Division of Marine Fisheries bottom trawl survey, spring 1985\n\n\ncodstrcluslen\nLengths of Atlantic cod caught during Massachusetts Division of Marine Fisheries stratified random bottom trawl survey, spring 1985\n\n\ncounts\nRun size data of alewife (Alosa pseudoharengus) in Herring River, MA from 1980-2010\n\n\ncowcod\nCatch data (metric tons) for cowcod Sebastes levis 1900 to 2008\n\n\ndarter\nSequence of catch data for the faintail darter from removal experiments by Mahon\n\n\nGerking\nMarked and released sunfish in an Indiana lake for 14 days by Gerking (1953)\n\n\ngoosefish\nThe mean lengths by year and number of observations for length>=smallest length at first capture (Lc) for northern goosefish used in Gedamke and Hoenig (2006)\n\n\nhaddock\nAge, weight at spawning, partial recruitment, and fraction mature data for haddock (Melanogrammus aeglefinus) used by Gabriel et al. (1989) to calculate spawning stock biomass-per-recruit\n\n\nHightower\nThe complete capture histories of striped bass for Lake Gaston, North Carolina\n\n\nJensen\nThe age data are from reconstructed catches of lake whitefish reported by Jensen (1996) in Table 1 and were expanded to individual observations from the age frequency table\n\n\nkappenman\nPacific cod catch per effort from Table 1 in Kappenman (1999)\n\n\nKimura\nLength and age data for male and female Pacific Hake\n\n\nlingcod\nCatch data (metric tons) for lingcod 1889 to 2001\n\n\nmaki\nFrom Table 1 of Maki et al. (2001) for 3 years combined\n\n\nmenhaden\nAge, fecundity-at-age, partial recruitment, fraction mature, and nautral mortality data for menhaden to calculate eggs-per-recruit\n\n\nnshrimp\nRecruit and postrecruit survey indices and catch data for Gulf of Maine northern shrimp (Pandulus borealis), 1985-2007\n\n\nP.donacina\nGrowth increment data derived from a tagging experiment on Paphis donacina\n\n\npinfish\nLength, age and sex data for pinfish (Lagodon rhomboides) from Tampa Bay, Florida\n\n\nrig\nTagging growth increment data for New Zealand rig (Mustelus lenticulatus), after removal of outliers\n\n\nrockbass\nAge data from a sample of rock bass trap-netted from Cayuga Lake, New York\n\n\nsblen\nTotal length (inches) of striped bass collected by Massachusetts volunteer anglers in 2014\n\n\nsbotos\nAges of striped bass interpreted from the same otolith sections by two age readers\n\n\nShepherd\nSeasonal length frequency data of Raja clavata\n\n\nsole\nFlathead sole CPUEs for a side-by-side trawl calibration study of National Marine Fisheries Service (NMFS) and Alaska Department of Fish and Game (ADFG) vessels\n\n\nstriper\nEstimates of recruits and female spawning stock biomass for striped bass from the Atlantic State Marine Fisheries 2016 stock assessment\n\n\ntrout\nRelease lengths, recapture lengths and times-at-large for trout in the Kenai River\n\n\nwolffish\nSpring untransformed mean catch per tow for wolffish (Anarhichas lupus)\n\n\nyellowtail\nFall average catch per tow for southern New England yellowtail flounder\n\n\n\n \n\n\nfishMod\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nTigerFlathead\nData set arising from a south-east Australia fish survey, see Bax and Williams (1999)\n\n\n\n \n\n\nFSA\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nBluegillJL\nCapture histories (2 samples) of Bluegill from Jewett Lake, MI.\n\n\nBrookTroutTH\nCatch-at-age for Tobin Harbor, Isle Royale Brook Trout.\n\n\nChinookArg\nLengths and weights for Chinook Salmon from three locations in Argentina.\n\n\nCodNorwegian\nStock and recruitment data for Norwegian cod, 1937-1960.\n\n\nCutthroatAL\nCapture histories (9 samples) of Cutthroat Trout from Auke Lake.\n\n\nEcoli\nPopulation growth of Escherichia coli.\n\n\nMirex\nMirex concentration, weight, capture year, and species of Lake Ontario salmon.\n\n\nPikeNY\nSummarized multiple mark-recapture data for all Northern Pike from Buckhorn Marsh, NY.\n\n\nPikeNYPartial1\nCapture histories (4 samples), in capture history format, of a subset of Northern Pike from Buckhorn Marsh, NY.\n\n\nPSDlit\nGabelhouse five-cell length categories for various species.\n\n\nSMBassLS\nCatch-effort data for Little Silver Lake (Ont) Smallmouth Bass.\n\n\nSMBassWB\nGrowth increment data for West Bearskin Lake, MN, Smallmouth Bass.\n\n\nSpotVA1\nAge and length of spot.\n\n\nWhitefishLC\nAssigned ages from two readers on three structures for Lake Whitefish from Lake Champlain.\n\n\nWR79\nAges and lengths for a hypothetical sample from Westerheim and Ricker (1979).\n\n\nWSlit\nAll known standard weight equations.\n\n\n\n \n\n\nFSAdata\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nAfricanRivers\nCharacteristics of a sample of West African rivers.\n\n\nAHerringChile\nAges and lengths of Araucanian Herring from Chilean waters.\n\n\nAlewifeLH\nAges of Lake Huron Alewife assigned from otoliths and scales.\n\n\nAnchovetaChile\nAges and lengths of Anchoveta from Chilean waters.\n\n\nBassFL\nCatch-at-age for Suwanee and Largemouth Bass.\n\n\nBGHRfish\nFish information from samples collected from Big Hill Reservoir, KS, 2014.\n\n\nBGHRsample\nInformation for each electrofishing sample from Big Hill Reservoir, KS, 2014.\n\n\nBlackDrum2001\nBiological data for Black Drum from Virginia waters of the Atlantic Ocean, 2001.\n\n\nBloaterLH\nStock and recruitment data for Lake Huron Bloaters, 1981-1996.\n\n\nBlueCatfish\nAges and lengths of Blue Catfish.\n\n\nBlueCrab\nCatch and effort data for male Blue Crabs.\n\n\nBluefishAge\nAges of Bluefish assigned from otoliths by two readers.\n\n\nBluegillIL\nLength-at-marking and recapture and time-at-large of Bluegill.\n\n\nBluegillLM\nLengths and weights for Bluegill from Lake Mary, MN.\n\n\nBluntnoseIL1\nSubampled lengths of Bluntnose Minnows from Inch Lake, WI.\n\n\nBonito\nAges and lengths of Australian Bonito.\n\n\nBrookTroutNC\nStock and recruitment data for Brook Trout from Ball Creek, NC, 1991-2004.\n\n\nBrookTroutNEWP\nCatches in removal events for Brook Trout in the Nashwaak Experimental Watersheds Project.\n\n\nBrookTroutNEWP1\nCatches in removal events for Brook Trout in the Nashwaak Experimental Watersheds Project.\n\n\nBrookTroutOnt\nSummarized single mark-recapture data for Brook Trout across many years.\n\n\nBrownTroutVC1\nSingle census mark-recapture data with lengths for Brown Trout from Valley Creek, MN.\n\n\nBSkateGB\nStock and recruitment data for Barndoor Skate from Georges Bank, 1966-2007.\n\n\nBullTroutRML1\nLengths and weights for Bull Trout from two Rocky Mountain lakes and two eras.\n\n\nBullTroutRML2\nAges and lengths of Bull Trout from two Rocky Mountain lakes at two times.\n\n\nBullTroutTC\nCatch-at-age for Bull Trout in Trestle Creek, ID.\n\n\nCabezon\nAges, lengths, and maturity for female Cabezon from Oregon.\n\n\nCasselman1990\nInstantaneous growth rates for two calcified ageing structures.\n\n\nCCatfishNB\nCatch-at-age of Channel Catfish from two sections of the Platte River, NB.\n\n\nChinookKR\nStock and recruitment data for Klamath River Chinook Salmon, 1979-2000.\n\n\nCiscoTL\nLengths, weights, and sex of Cisco from Trout Lake, WI.\n\n\nCrappieARMS\nStock and recruitment data for Crappies from four reservoirs in Arkansas and Mississippi, USA.\n\n\nCreekChub\nAges (subsample) and lengths (all fish) for Creek Chub.\n\n\nCreelMN\nResults of a large number of creel surveys in Minnestoa lakes.\n\n\nCroaker1\nAges of Atlantic Croaker assigned from otoliths by two readers.\n\n\nCroaker2\nAges, lengths, and sexes of Atlantic Croaker by sex.\n\n\nCutthroatALf\nCapture histories (9 samples) of Cutthroat Trout from Auke Lake.\n\n\nDarterMahon\nCatch and effort data for Fantail Darter.\n\n\nDarterOnt\nAges and lengths of Channel Darters from two locations.\n\n\nDeckeretal1999\nCatches in removal events of Cutthroat Trout and Coho Salmon in Little Stawamus Creek (British Columbia, Canada) in 1997.\n\n\nEuroPerchTJ\nAges, lengths, and sexes of European Perch.\n\n\nFHCatfish\nCatch-at-age of Flathead Catfish from three southeastern rivers.\n\n\nFHCatfishATL\nCatch-at-age of Flathead Catfish from three Atlantic rivers.\n\n\nFWDrumLE1\nAges and lengths of Lake Erie Freshwater Drum.\n\n\nFWDrumLE2\nAges (subsample) and lengths (all fish) for Freshwater Drum from Lake Erie.\n\n\nGhats\nSpecies accumulation data for fish of the Western Ghats of India.\n\n\nGreensCreekMine\nCatches in removal events of Coho Salmon and Dolly Varden Char at various locations near the Greens Creek (AK) Mine site.\n\n\nHake\nStock and recruitment data for Hake, 1982-1996.\n\n\nHalibutPAC\nStock and recruitment data for Pacific Halibut, 1929-1991.\n\n\nHerman\nLengths for Walleye, Yellow Perch, Black Crappie, and Black Bullheads from Lake Herman, SD.\n\n\nHerringBWE\nStock and recruitment data for Blackwater Estuary Herring, 1962-1997.\n\n\nHerringISS\nStock and recruitment data for Icelandic summer spawning Herring, 1946-1996.\n\n\nHumpbackWFCR\nCapture histories (2 sample) of Humpback Whitefish.\n\n\nInchLake1\nLengths for all fish captured in Inch Lake, WI, in two years\n\n\nInchLake2\nLengths and weights for fish captured in Inch Lake\n\n\nJobfishSIO\nCatch and effort data for South Indian Ocean Jobfish.\n\n\nJonesStockwell\nCatches in removal events of Brown and Rainbow Trout at various locations.\n\n\nJonubi1\nAges and lengths of male Jonubi.\n\n\nJonubi2\nAges (subsample) and lengths (all fish) of Jonubi.\n\n\nKingCrabAK\nStock and recruitment data for Red King Crab in Alaska, 1960-2004.\n\n\nLakeTroutALTER\nBiological data for Lake Trout from the Arctic LTER (AK).\n\n\nLakeTroutEggs\nLength and egg deposition of Lake Superior Lake Trout.\n\n\nLakeTroutGIS\nStock and recruitment data for Lake Trout from Gull Island Shoal, Lake Superior, 1964-1991.\n\n\nLakeTroutMI\nStock and recruitment data for Lake Trout in Lake Superior, 1971-1991.\n\n\nLizardfish\nStock and recruitment data for Greater Lizardfish, 1955-1964.\n\n\nLJCisco\nAges and lengths of Longjaw Cisco from two locations in Lake Michigan.\n\n\nLMBassBL\nLengths for Largemouth Bass from Boomer Lake, OK.\n\n\nLMBassLCB\nLengths for Largemouth Bass from Lake Carl Blackwell, OK.\n\n\nLobsterHI\nCatch and effort data for Hawaiian Islands Slipper Lobster.\n\n\nLobsterPEI\nCatch and effort data for Prince Edward Island Lobster.\n\n\nMenhaden1\nCatch-at-age for Gulf Menhaden, 1964-2004.\n\n\nMorwong1\nAges of Morwong assigned from otoliths by Reader A at two times.\n\n\nMorwong2\nAges of Morwong assigned from otoliths by Reader B at two times.\n\n\nMorwong3\nAges of Morwong assigned from otoliths by two readers.\n\n\nMorwong4\nAges and lengths of Morwong.\n\n\nMorwong4a\nAges (subsample) and lengths (all fish) for Morwong from Morwong4.\n\n\nMosquitofish\nAges and lengths of Eastern Mosquitofish from ten locations from southern France to southern Spain.\n\n\nMulletBS\nAges of Red Mullet assigned from whole and broken-burnt otoliths.\n\n\nMuskieSLR\nAges of Muskellunge assigned from scales and cleithra.\n\n\nMuskieWI06MR\nSummarized mark-recapture data for Muskellunge from many Wisconsin Lakes, 2006.\n\n\nPallid\nLengths and weights for Pallid Sturgeon from four locations in the Missouri River.\n\n\nPathfinder\nCatch and effort for three Snapper species in a depletion experiment.\n\n\nPikeHL\nCapture histories (2 samples) of Northern Pike from Harding Lake.\n\n\nPikeIL\nCatch and effort data for Northern Pike from Island Lake, NB.\n\n\nPikeNYPartial2\nCapture histories (4 samples) of a subset of Northern Pike from Buckthorn Marsh.\n\n\nPikeWindermere\nStock and recruitment data for Northern Pike from Lake Windermere, 1944-1981.\n\n\nPSalmonAK\nStock and recruitment data for Alaskan Pink Salmon, 1960-1990.\n\n\nPygmyWFBC\nBiological data for Pygmy Whitefish from Dina Lake #1 (British Columbia), 2000 and 2001.\n\n\nRBSmeltErie\nRecruitment time-series for Rainbow Smelt in Lake Erie, 1977-1996.\n\n\nRBSmeltLM\nLengths for Rainbow Smelt from Lake Michigan, 1977.\n\n\nRBTroutKenai\nLength-at-marking and recapture and time-at-large of Rainbow Trout.\n\n\nRBTroutUNSP\nCapture histories (2 sample) of Rainbow Trout.\n\n\nRedDrum\nAges and lengths for Red Drum from the Atlantic Coast.\n\n\nRiffleshell\nSummarized multiple mark-recapture data for Tan Riffleshell.\n\n\nRockBassCL\nCatch-at-age of Cayuga Lake Rock Bass.\n\n\nRockBassLO1\nAges and lengths of Lake Ontario Rock Bass.\n\n\nRockBassLO2\nAges (subsample) and lengths (all fish) for Rock Bass from Lake Ontario.\n\n\nRuffeSLRH92\nBiological data for Ruffe captured from the St. Louis River in 1992.\n\n\nRuffeTL89\nLengths of Ruffe captured from the St. Louis River in July, 1989.\n\n\nRWhitefishAI\nAges and lengths of Round Whitefish.\n\n\nRWhitefishIR\nAges and lengths of Round Whitefish.\n\n\nSalmonADP\nCatches in removal events of salmon parr.\n\n\nSalmonidsMCCA\nCatches in removal events of Cutthroate Trout and Steelhead of various sizes in two reaches of McGarvey Creek (CA).\n\n\nSardineChile\nAges and lengths of two year-classes of Sardine from Chilean waters.\n\n\nSardineLK\nAges and lengths of larval Lake Tanganyika Sardine.\n\n\nSardinesPacific\nStock and recruitment data for Pacific Sardines, 1935-1990.\n\n\nSculpinALTER\nBiological data for Slimy Sculpin from the Arctic LTER (AK).\n\n\nShadCR\nAges of American Shad assigned from scales by three readers at two times.\n\n\nShrimpGuam\nCatch and effort data for Deepwater Caridean Shrimp.\n\n\nSimonsonLyons\nCatches in removal events of trout at various locations.\n\n\nSiscowetMI2004\nAges (subsample) and lengths (all fish) for male and female Siscowet Lake Trout captured at four locations in Michigan waters of Lake Superior.\n\n\nSLampreyGL\nStock and recruitment data for Sea Lamprey in the Great Lakes, 1997-2007.\n\n\nSnapper\nLengths for Snapper from Australia.\n\n\nSnapperHG1\nAge (subsample) and length (all fish) of Snapper from two survey locations.\n\n\nSnapperHG2\nAges (subsample) and lengths (all fish) for Snapper.\n\n\nSockeyeKL\nStock and recruitment data for Sockeye Salmon from Karluk Lake, AK, 1921-1948.\n\n\nSockeyeSR\nStock and recruitment data for Skeena River Sockeye Salmon, 1940-1967.\n\n\nSpottedSucker1\nAges and lengths of Spotted Sucker.\n\n\nSpotVA2\nAges (subsample) and lengths (all fish) for Spot.\n\n\nStripedBass1\nAges of Striped Bass assigned from scales and otoliths.\n\n\nStripedBass2\nAges and lengths of Atlantic Ocean Striped Bass.\n\n\nStripedBass3\nAges (subsample) and lengths (all fish) for Striped Bass.\n\n\nStripedBass4\nAges of Striped Bass assigned from scales by two readers.\n\n\nStripedBass5\nAges of Striped Bass assigned from otoliths by two readers.\n\n\nStripedBass6\nAges of Striped Bass assigned from scales and otoliths.\n\n\nSturgeonBL\nSummarized multiple mark-recapture data for Lake Sturgeon.\n\n\nSturgeonGB\nCapture years and ages for Lake Sturgeon from Goulais Bay, Lake Superior, Ont.\n\n\nSunfishIN\nSummarized multiple mark-recapture data for Redear Sunfish.\n\n\nSunfishLP\nCatch-at-age for Bluegill and Redear Sunfish in Florida.\n\n\nTPrawnsEG\nStock and recruitment data for Exmouth Gulf Tiger Prawn, 1970-83.\n\n\nTroutADP\nCatches in removal events of trout.\n\n\nTroutBR\nAges and lengths of migratory Brown and Rainbow Trout.\n\n\nTroutperchLM1\nAges, lengths, and sexes of Troutperch.\n\n\nTroutperchLM2\nLengths for Troutperch from Lake Michigan, 1977.\n\n\nTroutperchLM3\nSubsampled lengths of Troutperch from Lake Michigan, 1977.\n\n\nVendaceLP\nStock and recruitment data for Vendace from Lake Puulavesi, 1982-1996.\n\n\nVendaceLP2\nStock and recruitment data for Vendace from Lake Pyhajarvi.\n\n\nWalleyeEL\nStock and recruitment data for Walleye from Escanaba Lake, WI, 1958-1992.\n\n\nWalleyeErie\nRecruitment time-series for Walleye in Lake Erie, 1959-1972.\n\n\nWalleyeErie2\nBiological data for Walleye from Lake Erie, 2003-2014.\n\n\nWalleyeKS\nCatch-at-age for Walleye from eight Kansas reservoirs.\n\n\nWalleyeML\nBack-calculated lengths-at-age for Walleye from Lake Mille Lacs, 2000-2011.\n\n\nWalleyeMN06a\nCatch-at-age for Walleye.\n\n\nWalleyeMN06b\nSummarized multiple mark-recapture data for Walleye from four lakes in Northern Minnesota.\n\n\nWalleyePL\nSummarized multiple mark-recapture data for YOY walleye.\n\n\nWalleyePS\nAges of Walleye assigned from otoliths, scales, and spines.\n\n\nWalleyeRL\nGrowth increment data for Red Lakes Walleye.\n\n\nWalleyeWad\nCatches-at-age for male and female Walleye from Lake Winnebago, WI, 2010.\n\n\nWalleyeWyrlng\nAnnual catches of yearling Walleye in bottom trawls from Lake Winnebago, WI, 1986-2010.\n\n\nWhitefishGSL\nCatch-at-age of Great Slave Lake Whitefish (commercial) by area.\n\n\nWhitefishLS\nLandings and value of Lake Superior Lake Whitefish.\n\n\nWhitefishMB\nAges of Lake Whitefish from four lakes assigned from scales and fin-rays.\n\n\nWhitefishTB\nStock and recruitment data for Lake Whitefish in Thunder Bay, Lake Superior, 1975-1988.\n\n\nWhiteGrunt1\nCatch-at-age for White Grunt.\n\n\nWhiteGrunt2\nAges, lengths, and sexes of White Grunt.\n\n\nWShrimpGA\nStock and recruitment data for White Shrimp off the coast of Georgia (USA), 1979-2000.\n\n\nYERockfish\nAges, lengths, and maturity for Yelloweye Rockfish.\n\n\nYPerchCB1\nCatch-at-age for Yellow Perch from Chequamegon Bay, Lake Superior.\n\n\nYPerchCB2\nStock and recruitment data for Yellow Perch in Chequamegon Bay, 1975-1986.\n\n\nYPerchGB\nRecruitment time-series for Yellow Perch in Green Bay, 1978-1992.\n\n\nYPerchGL\nLengths and weights of Yellow Perch from Grafton Lake (ME) by year.\n\n\nYPerchRL\nRecruitment time-series for Yellow Perch in Red Lakes, MN, 1942-1960.\n\n\nYPerchSB\nStock and recruitment data for Yellow Perch from South Bay, Lake Huron, 1950-1983.\n\n\nYPerchSB1\nLengths for Yellow Perch from two locations in Saginaw Bay, Lake Michigan.\n\n\nYPerchTL\nLengths and weights for Yellow Perch from Trout Lake, WI.\n\n\nYTFlounder\nAges of Yellowtail Flounder assigned from scales and otoliths.\n\n\n\n \n\n\nMQMF\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nabdat\nCatch data for the Tasmanian abalone fishery\n\n\nblackisland\nLength from tagging data for blacklip abalone at the Black Island site, Tasmania\n\n\ndataspm\nCatch data for Pink Ling\n\n\nLatA\nSimulated age data for redfish from eastern Australia in the 1990s\n\n\nminnow\nWeekly length measurements of a minnow for use with seasonal growth curves\n\n\nnpf\nCatch data (year, biomass, effort) for several species in the Australian Northern Prawn Fishery\n\n\npttuna\nYellowfin tuna fishery data (catch effort by year) from Pella-Tomlinson 1969\n\n\nschaef\nYellowfin tuna fishery data (catch effort by year) from Schaefer 1957\n\n\ntasab\nMaturity and length data for Blacklip Abalone from Tasmania\n\n\ntigers\nPrawn recruitment data from Penn and Caputi (1986)\n\n\n\n \n\n\nStat2Data\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nFishEggs\nPercent dry mass of eggs, age, and month for Lake Ontario Lake Trout\n\n\n\n \n\n\nTropFishR\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nalba\nLength-frequency data of the clam Abra alba as presented by Brey et al. (1988)\n\n\nbream\nData of a covered codend experimental catch of the species Threadfin bream (Nemipterus japonicus) in South China Sea\n\n\nemperor\nInformation about sky emperor (Lethrinus mahsena) and its fisheries of offshore Mauritius banks (Nazareth banks). It can be used for production models\n\n\ngillnet\nData of an experiment with several gillnets with different mesh sizes\n\n\ngoatfish\nData of Yellowstriped goatfish (Upeneus vittatus) from Manila Bay, Philippines. Can be used for the estimation of the instantaneous mortality rate (Z)\n\n\nhaddock\nData of a covered codend experimental catch of the haddock (Melanogrammus aeglefinus)\n\n\nhake\nLength-frequency data and biological characteristics about hake (Merluccius merluccius) and its fisheries off Senegal\n\n\ntrammelnet\nData of an experiment with several trammel nets with different mesh sizes\n\n\ntrawl_fishery_java\nTimes series of catch and effort data from the trawl fishery off the North coast of Java\n\n\nwhiting\nDataset of North Sea whiting Merlangius merlangus caught during the period 1974-1980"
  },
  {
    "objectID": "pages/data_Comp_byTopic.html",
    "href": "pages/data_Comp_byTopic.html",
    "title": "Fisheries-related datasets in CRAN packages by Topic",
    "section": "",
    "text": "Datasets from packages not controlled by the fishR Core Team (i.e., FSA and FSAdata) are entered manually, so please submit a GitHub Issue (see link at bottom of right sidebar menu) with any corrections or additions.\n\n\n\n \n\nLength Expansion\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nFSAdata::BluntnoseIL1\nSubampled lengths of Bluntnose Minnows from Inch Lake, WI.\n\n\nFSAdata::TroutperchLM3\nSubsampled lengths of Troutperch from Lake Michigan, 1977.\n\n\n\n \n\n\nLength Conversion\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nFSAdata::BluegillLM\nLengths and weights for Bluegill from Lake Mary, MN.\n\n\nFSAdata::LakeTroutALTER\nBiological data for Lake Trout from the Arctic LTER (AK).\n\n\nFSAdata::Pallid\nLengths and weights for Pallid Sturgeon from four locations in the Missouri River.\n\n\n\n \n\n\nAge Comparison\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nFSAdata::AlewifeLH\nAges of Lake Huron Alewife assigned from otoliths and scales.\n\n\nFSAdata::BluefishAge\nAges of Bluefish assigned from otoliths by two readers.\n\n\nFSAdata::Croaker1\nAges of Atlantic Croaker assigned from otoliths by two readers.\n\n\nFSAdata::Morwong1\nAges of Morwong assigned from otoliths by Reader A at two times.\n\n\nFSAdata::Morwong2\nAges of Morwong assigned from otoliths by Reader B at two times.\n\n\nFSAdata::Morwong3\nAges of Morwong assigned from otoliths by two readers.\n\n\nFSAdata::MulletBS\nAges of Red Mullet assigned from whole and broken-burnt otoliths.\n\n\nFSAdata::MuskieSLR\nAges of Muskellunge assigned from scales and cleithra.\n\n\nFSAdata::PygmyWFBC\nBiological data for Pygmy Whitefish from Dina Lake #1 (British Columbia), 2000 and 2001.\n\n\nFSAdata::ShadCR\nAges of American Shad assigned from scales by three readers at two times.\n\n\nFSAdata::StripedBass1\nAges of Striped Bass assigned from scales and otoliths.\n\n\nFSAdata::StripedBass4\nAges of Striped Bass assigned from scales by two readers.\n\n\nFSAdata::StripedBass5\nAges of Striped Bass assigned from otoliths by two readers.\n\n\nFSAdata::StripedBass6\nAges of Striped Bass assigned from scales and otoliths.\n\n\nFSAdata::WalleyePS\nAges of Walleye assigned from otoliths, scales, and spines.\n\n\nFSAdata::WhitefishMB\nAges of Lake Whitefish from four lakes assigned from scales and fin-rays.\n\n\nFSAdata::YTFlounder\nAges of Yellowtail Flounder assigned from scales and otoliths.\n\n\n\n \n\n\nAge-Length Key\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nfishmethods::alkdata\nAge-length key (summarized form) for Gulf of Hauraki snapper shown in Table 8.3 of Quinn and Deriso (1999)\n\n\nFSAdata::CreekChub\nAges (subsample) and lengths (all fish) for Creek Chub.\n\n\nFSAdata::FWDrumLE2\nAges (subsample) and lengths (all fish) for Freshwater Drum from Lake Erie.\n\n\nFSAdata::Jonubi2\nAges (subsample) and lengths (all fish) of Jonubi.\n\n\nFSAdata::Morwong4a\nAges (subsample) and lengths (all fish) for Morwong from Morwong4.\n\n\nFSAdata::RockBassLO2\nAges (subsample) and lengths (all fish) for Rock Bass from Lake Ontario.\n\n\nFSAdata::SiscowetMI2004\nAges (subsample) and lengths (all fish) for male and female Siscowet Lake Trout captured at four locations in Michigan waters of Lake Superior.\n\n\nFSAdata::SnapperHG1\nAge (subsample) and length (all fish) of Snapper from two survey locations.\n\n\nFSAdata::SnapperHG2\nAges (subsample) and lengths (all fish) for Snapper.\n\n\nFSAdata::SpotVA2\nAges (subsample) and lengths (all fish) for Spot.\n\n\nFSAdata::StripedBass3\nAges (subsample) and lengths (all fish) for Striped Bass.\n\n\nFSA::WR79\nAges and lengths for a hypothetical sample from Westerheim and Ricker (1979).\n\n\n\n \n\n\nBack-Calculation\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nFSA::SMBassWB\nGrowth increment data for West Bearskin Lake, MN, Smallmouth Bass.\n\n\n\n \n\n\nLength Frequency\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nTropFishR::alba\nLength-frequency data of the clam Abra alba as presented by Brey et al. (1988)\n\n\nFSAdata::BluegillLM\nLengths and weights for Bluegill from Lake Mary, MN.\n\n\nFSAdata::BluntnoseIL1\nSubampled lengths of Bluntnose Minnows from Inch Lake, WI.\n\n\nFSAdata::BullTroutRML1\nLengths and weights for Bull Trout from two Rocky Mountain lakes and two eras.\n\n\nFSAdata::CiscoTL\nLengths, weights, and sex of Cisco from Trout Lake, WI.\n\n\nCatDyn::gayhakelm\nLength and Month data of Chilean hake from Artisanal Fishery\n\n\nFSAdata::Herman\nLengths for Walleye, Yellow Perch, Black Crappie, and Black Bullheads from Lake Herman, SD.\n\n\nFSAdata::InchLake1\nLengths for all fish captured in Inch Lake, WI, in two years\n\n\nFSAdata::InchLake2\nLengths and weights for fish captured in Inch Lake\n\n\nFSAdata::LakeTroutALTER\nBiological data for Lake Trout from the Arctic LTER (AK).\n\n\nFSAdata::LMBassBL\nLengths for Largemouth Bass from Boomer Lake, OK.\n\n\nFSAdata::LMBassLCB\nLengths for Largemouth Bass from Lake Carl Blackwell, OK.\n\n\nFSAdata::PygmyWFBC\nBiological data for Pygmy Whitefish from Dina Lake #1 (British Columbia), 2000 and 2001.\n\n\nFSAdata::RBSmeltLM\nLengths for Rainbow Smelt from Lake Michigan, 1977.\n\n\nFSAdata::RuffeSLRH92\nBiological data for Ruffe captured from the St. Louis River in 1992.\n\n\nFSAdata::RuffeTL89\nLengths of Ruffe captured from the St. Louis River in July, 1989.\n\n\nfishmethods::sblen\nTotal length (inches) of striped bass collected by Massachusetts volunteer anglers in 2014\n\n\nFSAdata::SculpinALTER\nBiological data for Slimy Sculpin from the Arctic LTER (AK).\n\n\nfishmethods::Shepherd\nSeasonal length frequency data of Raja clavata\n\n\nFSAdata::Snapper\nLengths for Snapper from Australia.\n\n\nFSAdata::TroutperchLM2\nLengths for Troutperch from Lake Michigan, 1977.\n\n\nFSAdata::TroutperchLM3\nSubsampled lengths of Troutperch from Lake Michigan, 1977.\n\n\nFSAdata::WalleyeErie2\nBiological data for Walleye from Lake Erie, 2003-2014.\n\n\nFSAdata::YPerchGL\nLengths and weights of Yellow Perch from Grafton Lake (ME) by year.\n\n\nFSAdata::YPerchSB1\nLengths for Yellow Perch from two locations in Saginaw Bay, Lake Michigan.\n\n\nFSAdata::YPerchTL\nLengths and weights for Yellow Perch from Trout Lake, WI.\n\n\n\n \n\n\nSize Structure\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nFSAdata::BluntnoseIL1\nSubampled lengths of Bluntnose Minnows from Inch Lake, WI.\n\n\nFSAdata::Herman\nLengths for Walleye, Yellow Perch, Black Crappie, and Black Bullheads from Lake Herman, SD.\n\n\nFSAdata::InchLake1\nLengths for all fish captured in Inch Lake, WI, in two years\n\n\nFSAdata::LakeTroutALTER\nBiological data for Lake Trout from the Arctic LTER (AK).\n\n\nFSAdata::LMBassBL\nLengths for Largemouth Bass from Boomer Lake, OK.\n\n\nFSAdata::LMBassLCB\nLengths for Largemouth Bass from Lake Carl Blackwell, OK.\n\n\nFSA::PSDlit\nGabelhouse five-cell length categories for various species.\n\n\nFSAdata::RBSmeltLM\nLengths for Rainbow Smelt from Lake Michigan, 1977.\n\n\nFSAdata::RuffeTL89\nLengths of Ruffe captured from the St. Louis River in July, 1989.\n\n\nFSAdata::SculpinALTER\nBiological data for Slimy Sculpin from the Arctic LTER (AK).\n\n\nFSAdata::Snapper\nLengths for Snapper from Australia.\n\n\nFSAdata::TroutperchLM2\nLengths for Troutperch from Lake Michigan, 1977.\n\n\nFSAdata::TroutperchLM3\nSubsampled lengths of Troutperch from Lake Michigan, 1977.\n\n\nFSAdata::WalleyeErie2\nBiological data for Walleye from Lake Erie, 2003-2014.\n\n\nFSAdata::YPerchSB1\nLengths for Yellow Perch from two locations in Saginaw Bay, Lake Michigan.\n\n\nFSAdata::YPerchTL\nLengths and weights for Yellow Perch from Trout Lake, WI.\n\n\n\n \n\n\nWeight-Length\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nFSAdata::BlackDrum2001\nBiological data for Black Drum from Virginia waters of the Atlantic Ocean, 2001.\n\n\nFSAdata::BluegillLM\nLengths and weights for Bluegill from Lake Mary, MN.\n\n\nFSAdata::BullTroutRML1\nLengths and weights for Bull Trout from two Rocky Mountain lakes and two eras.\n\n\nFSA::ChinookArg\nLengths and weights for Chinook Salmon from three locations in Argentina.\n\n\nFSAdata::CiscoTL\nLengths, weights, and sex of Cisco from Trout Lake, WI.\n\n\nfishkirkko2015::fishkirkkojarvi2015\nWeight-length data for six freshwater species from Lake Kirkkojarvi, Finland\n\n\nCatDyn::gayhakelw\nLength and Weight data of Chilean hake from Artisanal Fishery\n\n\nFSAdata::InchLake2\nLengths and weights for fish captured in Inch Lake\n\n\nFSAdata::LakeTroutALTER\nBiological data for Lake Trout from the Arctic LTER (AK).\n\n\nFSAdata::Pallid\nLengths and weights for Pallid Sturgeon from four locations in the Missouri River.\n\n\nFSAdata::PygmyWFBC\nBiological data for Pygmy Whitefish from Dina Lake #1 (British Columbia), 2000 and 2001.\n\n\nFSAdata::RuffeSLRH92\nBiological data for Ruffe captured from the St. Louis River in 1992.\n\n\nFSAdata::SculpinALTER\nBiological data for Slimy Sculpin from the Arctic LTER (AK).\n\n\nFSAdata::WalleyeErie2\nBiological data for Walleye from Lake Erie, 2003-2014.\n\n\nFSAdata::YPerchGL\nLengths and weights of Yellow Perch from Grafton Lake (ME) by year.\n\n\nFSAdata::YPerchTL\nLengths and weights for Yellow Perch from Trout Lake, WI.\n\n\n\n \n\n\nDepletion\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nFSAdata::BlueCrab\nCatch and effort data for male Blue Crabs.\n\n\nfishmethods::darter\nSequence of catch data for the faintail darter from removal experiments by Mahon\n\n\nFSAdata::DarterMahon\nCatch and effort data for Fantail Darter.\n\n\nFSAdata::JobfishSIO\nCatch and effort data for South Indian Ocean Jobfish.\n\n\nFSAdata::LobsterHI\nCatch and effort data for Hawaiian Islands Slipper Lobster.\n\n\nFSAdata::LobsterPEI\nCatch and effort data for Prince Edward Island Lobster.\n\n\nFSAdata::Pathfinder\nCatch and effort for three Snapper species in a depletion experiment.\n\n\nFSAdata::PikeIL\nCatch and effort data for Northern Pike from Island Lake, NB.\n\n\nFSAdata::ShrimpGuam\nCatch and effort data for Deepwater Caridean Shrimp.\n\n\nFSA::SMBassLS\nCatch-effort data for Little Silver Lake (Ont) Smallmouth Bass.\n\n\n\n \n\n\nRemoval\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nFSAdata::BrookTroutNEWP\nCatches in removal events for Brook Trout in the Nashwaak Experimental Watersheds Project.\n\n\nFSAdata::BrookTroutNEWP1\nCatches in removal events for Brook Trout in the Nashwaak Experimental Watersheds Project.\n\n\nFSAdata::Deckeretal1999\nCatches in removal events of Cutthroat Trout and Coho Salmon in Little Stawamus Creek (British Columbia, Canada) in 1997.\n\n\nFSAdata::GreensCreekMine\nCatches in removal events of Coho Salmon and Dolly Varden Char at various locations near the Greens Creek (AK) Mine site.\n\n\nFSAdata::JonesStockwell\nCatches in removal events of Brown and Rainbow Trout at various locations.\n\n\nFSAdata::SalmonADP\nCatches in removal events of salmon parr.\n\n\nFSAdata::SalmonidsMCCA\nCatches in removal events of Cutthroate Trout and Steelhead of various sizes in two reaches of McGarvey Creek (CA).\n\n\nFSAdata::SimonsonLyons\nCatches in removal events of trout at various locations.\n\n\nFSAdata::TroutADP\nCatches in removal events of trout.\n\n\n\n \n\n\nCapture-Recapture\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nFSA::BluegillJL\nCapture histories (2 samples) of Bluegill from Jewett Lake, MI.\n\n\nFSAdata::BrookTroutOnt\nSummarized single mark-recapture data for Brook Trout across many years.\n\n\nFSAdata::BrownTroutVC1\nSingle census mark-recapture data with lengths for Brown Trout from Valley Creek, MN.\n\n\nFSA::CutthroatAL\nCapture histories (9 samples) of Cutthroat Trout from Auke Lake.\n\n\nFSAdata::CutthroatALf\nCapture histories (9 samples) of Cutthroat Trout from Auke Lake.\n\n\nfishmethods::Hightower\nThe complete capture histories of striped bass for Lake Gaston, North Carolina\n\n\nFSAdata::HumpbackWFCR\nCapture histories (2 sample) of Humpback Whitefish.\n\n\nFSAdata::MuskieWI06MR\nSummarized mark-recapture data for Muskellunge from many Wisconsin Lakes, 2006.\n\n\nFSAdata::PikeHL\nCapture histories (2 samples) of Northern Pike from Harding Lake.\n\n\nFSA::PikeNY\nSummarized multiple mark-recapture data for all Northern Pike from Buckhorn Marsh, NY.\n\n\nFSA::PikeNYPartial1\nCapture histories (4 samples), in capture history format, of a subset of Northern Pike from Buckhorn Marsh, NY.\n\n\nFSAdata::PikeNYPartial2\nCapture histories (4 samples) of a subset of Northern Pike from Buckthorn Marsh.\n\n\nFSAdata::RBTroutUNSP\nCapture histories (2 sample) of Rainbow Trout.\n\n\nFSAdata::Riffleshell\nSummarized multiple mark-recapture data for Tan Riffleshell.\n\n\nFSAdata::SturgeonBL\nSummarized multiple mark-recapture data for Lake Sturgeon.\n\n\nFSAdata::SunfishIN\nSummarized multiple mark-recapture data for Redear Sunfish.\n\n\nFSAdata::WalleyeMN06b\nSummarized multiple mark-recapture data for Walleye from four lakes in Northern Minnesota.\n\n\nFSAdata::WalleyePL\nSummarized multiple mark-recapture data for YOY walleye.\n\n\n\n \n\n\nMortality\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nFSAdata::BassFL\nCatch-at-age for Suwanee and Largemouth Bass.\n\n\nFSA::BrookTroutTH\nCatch-at-age for Tobin Harbor, Isle Royale Brook Trout.\n\n\nFSAdata::BullTroutTC\nCatch-at-age for Bull Trout in Trestle Creek, ID.\n\n\nFSAdata::CCatfishNB\nCatch-at-age of Channel Catfish from two sections of the Platte River, NB.\n\n\nFSAdata::FHCatfish\nCatch-at-age of Flathead Catfish from three southeastern rivers.\n\n\nFSAdata::FHCatfishATL\nCatch-at-age of Flathead Catfish from three Atlantic rivers.\n\n\nTropFishR::goatfish\nData of Yellowstriped goatfish (Upeneus vittatus) from Manila Bay, Philippines. Can be used for the estimation of the instantaneous mortality rate (Z)\n\n\nfishmethods::goosefish\nThe mean lengths by year and number of observations for length>=smallest length at first capture (Lc) for northern goosefish used in Gedamke and Hoenig (2006)\n\n\nfishmethods::Jensen\nThe age data are from reconstructed catches of lake whitefish reported by Jensen (1996) in Table 1 and were expanded to individual observations from the age frequency table\n\n\nFSAdata::Menhaden1\nCatch-at-age for Gulf Menhaden, 1964-2004.\n\n\nfishmethods::rockbass\nAge data from a sample of rock bass trap-netted from Cayuga Lake, New York\n\n\nFSAdata::RockBassCL\nCatch-at-age of Cayuga Lake Rock Bass.\n\n\nFSAdata::SunfishLP\nCatch-at-age for Bluegill and Redear Sunfish in Florida.\n\n\nFSAdata::WalleyeErie2\nBiological data for Walleye from Lake Erie, 2003-2014.\n\n\nFSAdata::WalleyeKS\nCatch-at-age for Walleye from eight Kansas reservoirs.\n\n\nFSAdata::WalleyeMN06a\nCatch-at-age for Walleye.\n\n\nFSAdata::WalleyeWad\nCatches-at-age for male and female Walleye from Lake Winnebago, WI, 2010.\n\n\nFSAdata::WhitefishGSL\nCatch-at-age of Great Slave Lake Whitefish (commercial) by area.\n\n\nFSAdata::WhiteGrunt1\nCatch-at-age for White Grunt.\n\n\nTropFishR::whiting\nDataset of North Sea whiting Merlangius merlangus caught during the period 1974-1980\n\n\nFSAdata::YPerchCB1\nCatch-at-age for Yellow Perch from Chequamegon Bay, Lake Superior.\n\n\n\n \n\n\nGrowth\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nTropFishR::alba\nLength-frequency data of the clam Abra alba as presented by Brey et al. (1988)\n\n\nFSAdata::BlackDrum2001\nBiological data for Black Drum from Virginia waters of the Atlantic Ocean, 2001.\n\n\nMQMF::blackisland\nLength from tagging data for blacklip abalone at the Black Island site, Tasmania\n\n\nFSAdata::BlueCatfish\nAges and lengths of Blue Catfish.\n\n\nFSAdata::BluegillIL\nLength-at-marking and recapture and time-at-large of Bluegill.\n\n\nfishmethods::bonito\nGrowth increment data derived from tagging experiments on Pacific bonito (Sarda chiliensis)\n\n\nFSAdata::BullTroutRML2\nAges and lengths of Bull Trout from two Rocky Mountain lakes at two times.\n\n\nFSAdata::Cabezon\nAges, lengths, and maturity for female Cabezon from Oregon.\n\n\nFSAdata::CreekChub\nAges (subsample) and lengths (all fish) for Creek Chub.\n\n\nFSAdata::Croaker2\nAges, lengths, and sexes of Atlantic Croaker by sex.\n\n\nFSAdata::DarterOnt\nAges and lengths of Channel Darters from two locations.\n\n\nFSAdata::EuroPerchTJ\nAges, lengths, and sexes of European Perch.\n\n\nFSAdata::FWDrumLE1\nAges and lengths of Lake Erie Freshwater Drum.\n\n\nAquaticLifeHistory::growth_data\nLength-at-age data for common blacktip sharks (Carcharhinus limbatus) from Indonesia\n\n\nFSAdata::Jonubi1\nAges and lengths of male Jonubi.\n\n\nfishmethods::Kimura\nLength and age data for male and female Pacific Hake\n\n\nalr3::lakemary\nAge and length of Bluegill from Lake Mary, MN\n\n\nFSAdata::LakeTroutALTER\nBiological data for Lake Trout from the Arctic LTER (AK).\n\n\nMQMF::LatA\nSimulated age data for redfish from eastern Australia in the 1990s\n\n\nFSAdata::LJCisco\nAges and lengths of Longjaw Cisco from two locations in Lake Michigan.\n\n\nMQMF::minnow\nWeekly length measurements of a minnow for use with seasonal growth curves\n\n\nFSAdata::Morwong4\nAges and lengths of Morwong.\n\n\nfishmethods::P.donacina\nGrowth increment data derived from a tagging experiment on Paphis donacina\n\n\nfishmethods::pinfish\nLength, age and sex data for pinfish (Lagodon rhomboides) from Tampa Bay, Florida\n\n\nFSAdata::RBTroutKenai\nLength-at-marking and recapture and time-at-large of Rainbow Trout.\n\n\nFSAdata::RedDrum\nAges and lengths for Red Drum from the Atlantic Coast.\n\n\nfishmethods::rig\nTagging growth increment data for New Zealand rig (Mustelus lenticulatus), after removal of outliers\n\n\nFSAdata::RockBassLO1\nAges and lengths of Lake Ontario Rock Bass.\n\n\nFSAdata::RuffeSLRH92\nBiological data for Ruffe captured from the St. Louis River in 1992.\n\n\nFSAdata::RWhitefishAI\nAges and lengths of Round Whitefish.\n\n\nFSAdata::RWhitefishIR\nAges and lengths of Round Whitefish.\n\n\nFSAdata::SardineChile\nAges and lengths of two year-classes of Sardine from Chilean waters.\n\n\nFSAdata::SardineLK\nAges and lengths of larval Lake Tanganyika Sardine.\n\n\nFSAdata::SculpinALTER\nBiological data for Slimy Sculpin from the Arctic LTER (AK).\n\n\nfishmethods::Shepherd\nSeasonal length frequency data of Raja clavata\n\n\nFSAdata::SiscowetMI2004\nAges (subsample) and lengths (all fish) for male and female Siscowet Lake Trout captured at four locations in Michigan waters of Lake Superior.\n\n\nFSA::SMBassWB\nGrowth increment data for West Bearskin Lake, MN, Smallmouth Bass.\n\n\nFSAdata::SpottedSucker1\nAges and lengths of Spotted Sucker.\n\n\nFSA::SpotVA1\nAge and length of spot.\n\n\nFSAdata::StripedBass2\nAges and lengths of Atlantic Ocean Striped Bass.\n\n\nfishmethods::trout\nRelease lengths, recapture lengths and times-at-large for trout in the Kenai River\n\n\nFSAdata::TroutBR\nAges and lengths of migratory Brown and Rainbow Trout.\n\n\nFSAdata::TroutperchLM1\nAges, lengths, and sexes of Troutperch.\n\n\nalr3::walleye\nAge and length of Walleye from Butternut Lake, WI in 3 different management periods\n\n\nFSAdata::WalleyeErie2\nBiological data for Walleye from Lake Erie, 2003-2014.\n\n\nFSAdata::WalleyeML\nBack-calculated lengths-at-age for Walleye from Lake Mille Lacs, 2000-2011.\n\n\nFSAdata::WalleyeRL\nGrowth increment data for Red Lakes Walleye.\n\n\nalr3::wblake\nAge and length of Smallmouth Bass from West Bearsking Lake, MN (exclude age-9 and older)\n\n\nalr3::wblake2\nAge and length of Smallmouth Bass from West Bearsking Lake, MN (all fish)\n\n\nFSAdata::WhiteGrunt2\nAges, lengths, and sexes of White Grunt.\n\n\nFSAdata::YERockfish\nAges, lengths, and maturity for Yelloweye Rockfish.\n\n\n\n \n\n\nRecruitment\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nFSAdata::BloaterLH\nStock and recruitment data for Lake Huron Bloaters, 1981-1996.\n\n\nFSAdata::BrookTroutNC\nStock and recruitment data for Brook Trout from Ball Creek, NC, 1991-2004.\n\n\nFSAdata::BSkateGB\nStock and recruitment data for Barndoor Skate from Georges Bank, 1966-2007.\n\n\nFSAdata::ChinookKR\nStock and recruitment data for Klamath River Chinook Salmon, 1979-2000.\n\n\nFSA::CodNorwegian\nStock and recruitment data for Norwegian cod, 1937-1960.\n\n\nFSAdata::CrappieARMS\nStock and recruitment data for Crappies from four reservoirs in Arkansas and Mississippi, USA.\n\n\nFSAdata::Hake\nStock and recruitment data for Hake, 1982-1996.\n\n\nFSAdata::HalibutPAC\nStock and recruitment data for Pacific Halibut, 1929-1991.\n\n\nFSAdata::HerringBWE\nStock and recruitment data for Blackwater Estuary Herring, 1962-1997.\n\n\nFSAdata::HerringISS\nStock and recruitment data for Icelandic summer spawning Herring, 1946-1996.\n\n\nFSAdata::KingCrabAK\nStock and recruitment data for Red King Crab in Alaska, 1960-2004.\n\n\nFSAdata::LakeTroutGIS\nStock and recruitment data for Lake Trout from Gull Island Shoal, Lake Superior, 1964-1991.\n\n\nFSAdata::LakeTroutMI\nStock and recruitment data for Lake Trout in Lake Superior, 1971-1991.\n\n\nFSAdata::Lizardfish\nStock and recruitment data for Greater Lizardfish, 1955-1964.\n\n\nFSAdata::PikeWindermere\nStock and recruitment data for Northern Pike from Lake Windermere, 1944-1981.\n\n\nFSAdata::PSalmonAK\nStock and recruitment data for Alaskan Pink Salmon, 1960-1990.\n\n\nFSAdata::RBSmeltErie\nRecruitment time-series for Rainbow Smelt in Lake Erie, 1977-1996.\n\n\nFSAdata::SardinesPacific\nStock and recruitment data for Pacific Sardines, 1935-1990.\n\n\nFSAdata::SLampreyGL\nStock and recruitment data for Sea Lamprey in the Great Lakes, 1997-2007.\n\n\nFSAdata::SockeyeKL\nStock and recruitment data for Sockeye Salmon from Karluk Lake, AK, 1921-1948.\n\n\nFSAdata::SockeyeSR\nStock and recruitment data for Skeena River Sockeye Salmon, 1940-1967.\n\n\nMQMF::tigers\nPrawn recruitment data from Penn and Caputi (1986)\n\n\nFSAdata::TPrawnsEG\nStock and recruitment data for Exmouth Gulf Tiger Prawn, 1970-83.\n\n\nFSAdata::VendaceLP\nStock and recruitment data for Vendace from Lake Puulavesi, 1982-1996.\n\n\nFSAdata::VendaceLP2\nStock and recruitment data for Vendace from Lake Pyhajarvi.\n\n\nFSAdata::WalleyeEL\nStock and recruitment data for Walleye from Escanaba Lake, WI, 1958-1992.\n\n\nFSAdata::WalleyeErie\nRecruitment time-series for Walleye in Lake Erie, 1959-1972.\n\n\nFSAdata::WalleyeWyrlng\nAnnual catches of yearling Walleye in bottom trawls from Lake Winnebago, WI, 1986-2010.\n\n\nFSAdata::WhitefishTB\nStock and recruitment data for Lake Whitefish in Thunder Bay, Lake Superior, 1975-1988.\n\n\nFSAdata::WShrimpGA\nStock and recruitment data for White Shrimp off the coast of Georgia (USA), 1979-2000.\n\n\nFSAdata::YPerchCB2\nStock and recruitment data for Yellow Perch in Chequamegon Bay, 1975-1986.\n\n\nFSAdata::YPerchGB\nRecruitment time-series for Yellow Perch in Green Bay, 1978-1992.\n\n\nFSAdata::YPerchRL\nRecruitment time-series for Yellow Perch in Red Lakes, MN, 1942-1960.\n\n\nFSAdata::YPerchSB\nStock and recruitment data for Yellow Perch from South Bay, Lake Huron, 1950-1983.\n\n\n\n \n\n\nMaturity\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nFSAdata::Cabezon\nAges, lengths, and maturity for female Cabezon from Oregon.\n\n\nStat2Data::FishEggs\nPercent dry mass of eggs, age, and month for Lake Ontario Lake Trout\n\n\nfishmethods::maki\nFrom Table 1 of Maki et al. (2001) for 3 years combined\n\n\nAquaticLifeHistory::maturity_data\nLength-at-maturity and age-at-maturity data for female silky sharks (Carcharhinus falciformis) from Papua New Guinea\n\n\nFSAdata::RuffeSLRH92\nBiological data for Ruffe captured from the St. Louis River in 1992.\n\n\nMQMF::tasab\nMaturity and length data for Blacklip Abalone from Tasmania\n\n\nFSAdata::WalleyeErie2\nBiological data for Walleye from Lake Erie, 2003-2014.\n\n\nFSAdata::YERockfish\nAges, lengths, and maturity for Yelloweye Rockfish.\n\n\n\n \n\n\nData Manipulation\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nFSAdata::BGHRfish\nFish information from samples collected from Big Hill Reservoir, KS, 2014.\n\n\nFSAdata::BGHRsample\nInformation for each electrofishing sample from Big Hill Reservoir, KS, 2014.\n\n\n\n \n\n\nOther\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nMQMF::abdat\nCatch data for the Tasmanian abalone fishery\n\n\nFSAdata::AfricanRivers\nCharacteristics of a sample of West African rivers.\n\n\nTropFishR::bream\nData of a covered codend experimental catch of the species Threadfin bream (Nemipterus japonicus) in South China Sea\n\n\nFSAdata::Casselman1990\nInstantaneous growth rates for two calcified ageing structures.\n\n\nfishmethods::catch\nNumber of cod captured in 10 standardized bottom trawl hauls from Massachusetts, 1985\n\n\nfishmethods::codcluslen\nLengths of Atlantic cod caught during Massachusetts Division of Marine Fisheries bottom trawl survey, spring 1985\n\n\nfishmethods::codstrcluslen\nLengths of Atlantic cod caught during Massachusetts Division of Marine Fisheries stratified random bottom trawl survey, spring 1985\n\n\nfishmethods::counts\nRun size data of alewife (Alosa pseudoharengus) in Herring River, MA from 1980-2010\n\n\nfishmethods::cowcod\nCatch data (metric tons) for cowcod Sebastes levis 1900 to 2008\n\n\nFSAdata::CreelMN\nResults of a large number of creel surveys in Minnestoa lakes.\n\n\nMQMF::dataspm\nCatch data for Pink Ling\n\n\nFSA::Ecoli\nPopulation growth of Escherichia coli.\n\n\nTropFishR::emperor\nInformation about sky emperor (Lethrinus mahsena) and its fisheries of offshore Mauritius banks (Nazareth banks). It can be used for production models\n\n\nCOUNT::fishing\nSite abundance and characteristics from commercial fishing\n\n\nCatDyn::gayhake\nIndustrial and Artisanal Catch and Effort Data from the Chilean Hake Fishery\n\n\nFSAdata::Ghats\nSpecies accumulation data for fish of the Western Ghats of India.\n\n\nTropFishR::gillnet\nData of an experiment with several gillnets with different mesh sizes\n\n\nfishmethods::haddock\nAge, weight at spawning, partial recruitment, and fraction mature data for haddock (Melanogrammus aeglefinus) used by Gabriel et al. (1989) to calculate spawning stock biomass-per-recruit\n\n\nTropFishR::hake\nLength-frequency data and biological characteristics about hake (Merluccius merluccius) and its fisheries off Senegal\n\n\nfishmethods::kappenman\nPacific cod catch per effort from Table 1 in Kappenman (1999)\n\n\nFSAdata::LakeTroutEggs\nLength and egg deposition of Lake Superior Lake Trout.\n\n\nfishmethods::lingcod\nCatch data (metric tons) for lingcod 1889 to 2001\n\n\nCatDyn::lolgahi\nIndustrial Trawling Data from the Squid Fishery of the Falkland Islands\n\n\nfishmethods::menhaden\nAge, fecundity-at-age, partial recruitment, fraction mature, and nautral mortality data for menhaden to calculate eggs-per-recruit\n\n\nFSA::Mirex\nMirex concentration, weight, capture year, and species of Lake Ontario salmon.\n\n\nMQMF::npf\nCatch data (year, biomass, effort) for several species in the Australian Northern Prawn Fishery\n\n\nfishmethods::nshrimp\nRecruit and postrecruit survey indices and catch data for Gulf of Maine northern shrimp (Pandulus borealis), 1985-2007\n\n\nMQMF::pttuna\nYellowfin tuna fishery data (catch effort by year) from Pella-Tomlinson 1969\n\n\nMQMF::schaef\nYellowfin tuna fishery data (catch effort by year) from Schaefer 1957\n\n\nfishmethods::sole\nFlathead sole CPUEs for a side-by-side trawl calibration study of National Marine Fisheries Service (NMFS) and Alaska Department of Fish and Game (ADFG) vessels\n\n\nfishmethods::striper\nEstimates of recruits and female spawning stock biomass for striped bass from the Atlantic State Marine Fisheries 2016 stock assessment\n\n\nfishMod::TigerFlathead\nData set arising from a south-east Australia fish survey, see Bax and Williams (1999)\n\n\nTropFishR::trammelnet\nData of an experiment with several trammel nets with different mesh sizes\n\n\nTropFishR::trawl_fishery_java\nTimes series of catch and effort data from the trawl fishery off the North coast of Java\n\n\nCatDyn::twelver\nExhaustive recorded operational activity of the Anguilla japonica sport fishery in Taiwan during the 1983-1984 season\n\n\nFSAdata::WhitefishLS\nLandings and value of Lake Superior Lake Whitefish.\n\n\nTropFishR::whiting\nDataset of North Sea whiting Merlangius merlangus caught during the period 1974-1980\n\n\nfishmethods::wolffish\nSpring untransformed mean catch per tow for wolffish (Anarhichas lupus)\n\n\nfishmethods::yellowtail\nFall average catch per tow for southern New England yellowtail flounder"
  },
  {
    "objectID": "pages/data_fishR_alpha.html",
    "href": "pages/data_fishR_alpha.html",
    "title": "Datasets from FSA and FSAdata",
    "section": "",
    "text": "Dataset\nDescription\n\n\n\n\nAfricanRivers\nCharacteristics of a sample of West African rivers.\n\n\nAHerringChile\nAges and lengths of Araucanian Herring from Chilean waters.\n\n\nAlewifeLH\nAges of Lake Huron Alewife assigned from otoliths and scales.\n\n\nAnchovetaChile\nAges and lengths of Anchoveta from Chilean waters.\n\n\nBassFL\nCatch-at-age for Suwanee and Largemouth Bass.\n\n\nBGHRfish\nFish information from samples collected from Big Hill Reservoir, KS, 2014.\n\n\nBGHRsample\nInformation for each electrofishing sample from Big Hill Reservoir, KS, 2014.\n\n\nBlackDrum2001\nBiological data for Black Drum from Virginia waters of the Atlantic Ocean, 2001.\n\n\nBloaterLH\nStock and recruitment data for Lake Huron Bloaters, 1981-1996.\n\n\nBlueCatfish\nAges and lengths of Blue Catfish.\n\n\nBlueCrab\nCatch and effort data for male Blue Crabs.\n\n\nBluefishAge\nAges of Bluefish assigned from otoliths by two readers.\n\n\nBluegillIL\nLength-at-marking and recapture and time-at-large of Bluegill.\n\n\nBluegillJL\nCapture histories (2 samples) of Bluegill from Jewett Lake, MI.\n\n\nBluegillLM\nLengths and weights for Bluegill from Lake Mary, MN.\n\n\nBluntnoseIL1\nSubampled lengths of Bluntnose Minnows from Inch Lake, WI.\n\n\nBonito\nAges and lengths of Australian Bonito.\n\n\nBrookTroutNC\nStock and recruitment data for Brook Trout from Ball Creek, NC, 1991-2004.\n\n\nBrookTroutNEWP\nCatches in removal events for Brook Trout in the Nashwaak Experimental Watersheds Project.\n\n\nBrookTroutNEWP1\nCatches in removal events for Brook Trout in the Nashwaak Experimental Watersheds Project.\n\n\nBrookTroutOnt\nSummarized single mark-recapture data for Brook Trout across many years.\n\n\nBrookTroutTH\nCatch-at-age for Tobin Harbor, Isle Royale Brook Trout.\n\n\nBrownTroutVC1\nSingle census mark-recapture data with lengths for Brown Trout from Valley Creek, MN.\n\n\nBSkateGB\nStock and recruitment data for Barndoor Skate from Georges Bank, 1966-2007.\n\n\nBullTroutRML1\nLengths and weights for Bull Trout from two Rocky Mountain lakes and two eras.\n\n\nBullTroutRML2\nAges and lengths of Bull Trout from two Rocky Mountain lakes at two times.\n\n\nBullTroutTC\nCatch-at-age for Bull Trout in Trestle Creek, ID.\n\n\nCabezon\nAges, lengths, and maturity for female Cabezon from Oregon.\n\n\nCasselman1990\nInstantaneous growth rates for two calcified ageing structures.\n\n\nCCatfishNB\nCatch-at-age of Channel Catfish from two sections of the Platte River, NB.\n\n\nChinookArg\nLengths and weights for Chinook Salmon from three locations in Argentina.\n\n\nChinookKR\nStock and recruitment data for Klamath River Chinook Salmon, 1979-2000.\n\n\nCiscoTL\nLengths, weights, and sex of Cisco from Trout Lake, WI.\n\n\nCodNorwegian\nStock and recruitment data for Norwegian cod, 1937-1960.\n\n\nCrappieARMS\nStock and recruitment data for Crappies from four reservoirs in Arkansas and Mississippi, USA.\n\n\nCreekChub\nAges (subsample) and lengths (all fish) for Creek Chub.\n\n\nCreelMN\nResults of a large number of creel surveys in Minnestoa lakes.\n\n\nCroaker1\nAges of Atlantic Croaker assigned from otoliths by two readers.\n\n\nCroaker2\nAges, lengths, and sexes of Atlantic Croaker by sex.\n\n\nCutthroatAL\nCapture histories (9 samples) of Cutthroat Trout from Auke Lake.\n\n\nCutthroatALf\nCapture histories (9 samples) of Cutthroat Trout from Auke Lake.\n\n\nDarterMahon\nCatch and effort data for Fantail Darter.\n\n\nDarterOnt\nAges and lengths of Channel Darters from two locations.\n\n\nDeckeretal1999\nCatches in removal events of Cutthroat Trout and Coho Salmon in Little Stawamus Creek (British Columbia, Canada) in 1997.\n\n\nEcoli\nPopulation growth of Escherichia coli.\n\n\nEuroPerchTJ\nAges, lengths, and sexes of European Perch.\n\n\nFHCatfish\nCatch-at-age of Flathead Catfish from three southeastern rivers.\n\n\nFHCatfishATL\nCatch-at-age of Flathead Catfish from three Atlantic rivers.\n\n\nFWDrumLE1\nAges and lengths of Lake Erie Freshwater Drum.\n\n\nFWDrumLE2\nAges (subsample) and lengths (all fish) for Freshwater Drum from Lake Erie.\n\n\nGhats\nSpecies accumulation data for fish of the Western Ghats of India.\n\n\nGreensCreekMine\nCatches in removal events of Coho Salmon and Dolly Varden Char at various locations near the Greens Creek (AK) Mine site.\n\n\nHake\nStock and recruitment data for Hake, 1982-1996.\n\n\nHalibutPAC\nStock and recruitment data for Pacific Halibut, 1929-1991.\n\n\nHerman\nLengths for Walleye, Yellow Perch, Black Crappie, and Black Bullheads from Lake Herman, SD.\n\n\nHerringBWE\nStock and recruitment data for Blackwater Estuary Herring, 1962-1997.\n\n\nHerringISS\nStock and recruitment data for Icelandic summer spawning Herring, 1946-1996.\n\n\nHumpbackWFCR\nCapture histories (2 sample) of Humpback Whitefish.\n\n\nInchLake1\nLengths for all fish captured in Inch Lake, WI, in two years\n\n\nInchLake2\nLengths and weights for fish captured in Inch Lake\n\n\nJobfishSIO\nCatch and effort data for South Indian Ocean Jobfish.\n\n\nJonesStockwell\nCatches in removal events of Brown and Rainbow Trout at various locations.\n\n\nJonubi1\nAges and lengths of male Jonubi.\n\n\nJonubi2\nAges (subsample) and lengths (all fish) of Jonubi.\n\n\nKingCrabAK\nStock and recruitment data for Red King Crab in Alaska, 1960-2004.\n\n\nLakeTroutALTER\nBiological data for Lake Trout from the Arctic LTER (AK).\n\n\nLakeTroutEggs\nLength and egg deposition of Lake Superior Lake Trout.\n\n\nLakeTroutGIS\nStock and recruitment data for Lake Trout from Gull Island Shoal, Lake Superior, 1964-1991.\n\n\nLakeTroutMI\nStock and recruitment data for Lake Trout in Lake Superior, 1971-1991.\n\n\nLizardfish\nStock and recruitment data for Greater Lizardfish, 1955-1964.\n\n\nLJCisco\nAges and lengths of Longjaw Cisco from two locations in Lake Michigan.\n\n\nLMBassBL\nLengths for Largemouth Bass from Boomer Lake, OK.\n\n\nLMBassLCB\nLengths for Largemouth Bass from Lake Carl Blackwell, OK.\n\n\nLobsterHI\nCatch and effort data for Hawaiian Islands Slipper Lobster.\n\n\nLobsterPEI\nCatch and effort data for Prince Edward Island Lobster.\n\n\nMenhaden1\nCatch-at-age for Gulf Menhaden, 1964-2004.\n\n\nMirex\nMirex concentration, weight, capture year, and species of Lake Ontario salmon.\n\n\nMorwong1\nAges of Morwong assigned from otoliths by Reader A at two times.\n\n\nMorwong2\nAges of Morwong assigned from otoliths by Reader B at two times.\n\n\nMorwong3\nAges of Morwong assigned from otoliths by two readers.\n\n\nMorwong4\nAges and lengths of Morwong.\n\n\nMorwong4a\nAges (subsample) and lengths (all fish) for Morwong from Morwong4.\n\n\nMosquitofish\nAges and lengths of Eastern Mosquitofish from ten locations from southern France to southern Spain.\n\n\nMulletBS\nAges of Red Mullet assigned from whole and broken-burnt otoliths.\n\n\nMuskieSLR\nAges of Muskellunge assigned from scales and cleithra.\n\n\nMuskieWI06MR\nSummarized mark-recapture data for Muskellunge from many Wisconsin Lakes, 2006.\n\n\nPallid\nLengths and weights for Pallid Sturgeon from four locations in the Missouri River.\n\n\nPathfinder\nCatch and effort for three Snapper species in a depletion experiment.\n\n\nPikeHL\nCapture histories (2 samples) of Northern Pike from Harding Lake.\n\n\nPikeIL\nCatch and effort data for Northern Pike from Island Lake, NB.\n\n\nPikeNY\nSummarized multiple mark-recapture data for all Northern Pike from Buckhorn Marsh, NY.\n\n\nPikeNYPartial1\nCapture histories (4 samples), in capture history format, of a subset of Northern Pike from Buckhorn Marsh, NY.\n\n\nPikeNYPartial2\nCapture histories (4 samples) of a subset of Northern Pike from Buckthorn Marsh.\n\n\nPikeWindermere\nStock and recruitment data for Northern Pike from Lake Windermere, 1944-1981.\n\n\nPSalmonAK\nStock and recruitment data for Alaskan Pink Salmon, 1960-1990.\n\n\nPSDlit\nGabelhouse five-cell length categories for various species.\n\n\nPygmyWFBC\nBiological data for Pygmy Whitefish from Dina Lake #1 (British Columbia), 2000 and 2001.\n\n\nRBSmeltErie\nRecruitment time-series for Rainbow Smelt in Lake Erie, 1977-1996.\n\n\nRBSmeltLM\nLengths for Rainbow Smelt from Lake Michigan, 1977.\n\n\nRBTroutKenai\nLength-at-marking and recapture and time-at-large of Rainbow Trout.\n\n\nRBTroutUNSP\nCapture histories (2 sample) of Rainbow Trout.\n\n\nRedDrum\nAges and lengths for Red Drum from the Atlantic Coast.\n\n\nRiffleshell\nSummarized multiple mark-recapture data for Tan Riffleshell.\n\n\nRockBassCL\nCatch-at-age of Cayuga Lake Rock Bass.\n\n\nRockBassLO1\nAges and lengths of Lake Ontario Rock Bass.\n\n\nRockBassLO2\nAges (subsample) and lengths (all fish) for Rock Bass from Lake Ontario.\n\n\nRuffeSLRH92\nBiological data for Ruffe captured from the St. Louis River in 1992.\n\n\nRuffeTL89\nLengths of Ruffe captured from the St. Louis River in July, 1989.\n\n\nRWhitefishAI\nAges and lengths of Round Whitefish.\n\n\nRWhitefishIR\nAges and lengths of Round Whitefish.\n\n\nSalmonADP\nCatches in removal events of salmon parr.\n\n\nSalmonidsMCCA\nCatches in removal events of Cutthroate Trout and Steelhead of various sizes in two reaches of McGarvey Creek (CA).\n\n\nSardineChile\nAges and lengths of two year-classes of Sardine from Chilean waters.\n\n\nSardineLK\nAges and lengths of larval Lake Tanganyika Sardine.\n\n\nSardinesPacific\nStock and recruitment data for Pacific Sardines, 1935-1990.\n\n\nSculpinALTER\nBiological data for Slimy Sculpin from the Arctic LTER (AK).\n\n\nShadCR\nAges of American Shad assigned from scales by three readers at two times.\n\n\nShrimpGuam\nCatch and effort data for Deepwater Caridean Shrimp.\n\n\nSimonsonLyons\nCatches in removal events of trout at various locations.\n\n\nSiscowetMI2004\nAges (subsample) and lengths (all fish) for male and female Siscowet Lake Trout captured at four locations in Michigan waters of Lake Superior.\n\n\nSLampreyGL\nStock and recruitment data for Sea Lamprey in the Great Lakes, 1997-2007.\n\n\nSMBassLS\nCatch-effort data for Little Silver Lake (Ont) Smallmouth Bass.\n\n\nSMBassWB\nGrowth increment data for West Bearskin Lake, MN, Smallmouth Bass.\n\n\nSnapper\nLengths for Snapper from Australia.\n\n\nSnapperHG1\nAge (subsample) and length (all fish) of Snapper from two survey locations.\n\n\nSnapperHG2\nAges (subsample) and lengths (all fish) for Snapper.\n\n\nSockeyeKL\nStock and recruitment data for Sockeye Salmon from Karluk Lake, AK, 1921-1948.\n\n\nSockeyeSR\nStock and recruitment data for Skeena River Sockeye Salmon, 1940-1967.\n\n\nSpottedSucker1\nAges and lengths of Spotted Sucker.\n\n\nSpotVA1\nAge and length of spot.\n\n\nSpotVA2\nAges (subsample) and lengths (all fish) for Spot.\n\n\nStripedBass1\nAges of Striped Bass assigned from scales and otoliths.\n\n\nStripedBass2\nAges and lengths of Atlantic Ocean Striped Bass.\n\n\nStripedBass3\nAges (subsample) and lengths (all fish) for Striped Bass.\n\n\nStripedBass4\nAges of Striped Bass assigned from scales by two readers.\n\n\nStripedBass5\nAges of Striped Bass assigned from otoliths by two readers.\n\n\nStripedBass6\nAges of Striped Bass assigned from scales and otoliths.\n\n\nSturgeonBL\nSummarized multiple mark-recapture data for Lake Sturgeon.\n\n\nSturgeonGB\nCapture years and ages for Lake Sturgeon from Goulais Bay, Lake Superior, Ont.\n\n\nSunfishIN\nSummarized multiple mark-recapture data for Redear Sunfish.\n\n\nSunfishLP\nCatch-at-age for Bluegill and Redear Sunfish in Florida.\n\n\nTPrawnsEG\nStock and recruitment data for Exmouth Gulf Tiger Prawn, 1970-83.\n\n\nTroutADP\nCatches in removal events of trout.\n\n\nTroutBR\nAges and lengths of migratory Brown and Rainbow Trout.\n\n\nTroutperchLM1\nAges, lengths, and sexes of Troutperch.\n\n\nTroutperchLM2\nLengths for Troutperch from Lake Michigan, 1977.\n\n\nTroutperchLM3\nSubsampled lengths of Troutperch from Lake Michigan, 1977.\n\n\nVendaceLP\nStock and recruitment data for Vendace from Lake Puulavesi, 1982-1996.\n\n\nVendaceLP2\nStock and recruitment data for Vendace from Lake Pyhajarvi.\n\n\nWalleyeEL\nStock and recruitment data for Walleye from Escanaba Lake, WI, 1958-1992.\n\n\nWalleyeErie\nRecruitment time-series for Walleye in Lake Erie, 1959-1972.\n\n\nWalleyeErie2\nBiological data for Walleye from Lake Erie, 2003-2014.\n\n\nWalleyeKS\nCatch-at-age for Walleye from eight Kansas reservoirs.\n\n\nWalleyeML\nBack-calculated lengths-at-age for Walleye from Lake Mille Lacs, 2000-2011.\n\n\nWalleyeMN06a\nCatch-at-age for Walleye.\n\n\nWalleyeMN06b\nSummarized multiple mark-recapture data for Walleye from four lakes in Northern Minnesota.\n\n\nWalleyePL\nSummarized multiple mark-recapture data for YOY walleye.\n\n\nWalleyePS\nAges of Walleye assigned from otoliths, scales, and spines.\n\n\nWalleyeRL\nGrowth increment data for Red Lakes Walleye.\n\n\nWalleyeWad\nCatches-at-age for male and female Walleye from Lake Winnebago, WI, 2010.\n\n\nWalleyeWyrlng\nAnnual catches of yearling Walleye in bottom trawls from Lake Winnebago, WI, 1986-2010.\n\n\nWhitefishGSL\nCatch-at-age of Great Slave Lake Whitefish (commercial) by area.\n\n\nWhitefishLC\nAssigned ages from two readers on three structures for Lake Whitefish from Lake Champlain.\n\n\nWhitefishLS\nLandings and value of Lake Superior Lake Whitefish.\n\n\nWhitefishMB\nAges of Lake Whitefish from four lakes assigned from scales and fin-rays.\n\n\nWhitefishTB\nStock and recruitment data for Lake Whitefish in Thunder Bay, Lake Superior, 1975-1988.\n\n\nWhiteGrunt1\nCatch-at-age for White Grunt.\n\n\nWhiteGrunt2\nAges, lengths, and sexes of White Grunt.\n\n\nWR79\nAges and lengths for a hypothetical sample from Westerheim and Ricker (1979).\n\n\nWShrimpGA\nStock and recruitment data for White Shrimp off the coast of Georgia (USA), 1979-2000.\n\n\nWSlit\nAll known standard weight equations.\n\n\nYERockfish\nAges, lengths, and maturity for Yelloweye Rockfish.\n\n\nYPerchCB1\nCatch-at-age for Yellow Perch from Chequamegon Bay, Lake Superior.\n\n\nYPerchCB2\nStock and recruitment data for Yellow Perch in Chequamegon Bay, 1975-1986.\n\n\nYPerchGB\nRecruitment time-series for Yellow Perch in Green Bay, 1978-1992.\n\n\nYPerchGL\nLengths and weights of Yellow Perch from Grafton Lake (ME) by year.\n\n\nYPerchRL\nRecruitment time-series for Yellow Perch in Red Lakes, MN, 1942-1960.\n\n\nYPerchSB\nStock and recruitment data for Yellow Perch from South Bay, Lake Huron, 1950-1983.\n\n\nYPerchSB1\nLengths for Yellow Perch from two locations in Saginaw Bay, Lake Michigan.\n\n\nYPerchTL\nLengths and weights for Yellow Perch from Trout Lake, WI.\n\n\nYTFlounder\nAges of Yellowtail Flounder assigned from scales and otoliths."
  },
  {
    "objectID": "pages/data_fishR_byTopic.html",
    "href": "pages/data_fishR_byTopic.html",
    "title": "Datasets from FSA and FSAdata by Topic",
    "section": "",
    "text": "Length Expansion\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nBluntnoseIL1\nSubampled lengths of Bluntnose Minnows from Inch Lake, WI.\n\n\nTroutperchLM3\nSubsampled lengths of Troutperch from Lake Michigan, 1977.\n\n\n\n \n\n\nLength Conversion\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nBluegillLM\nLengths and weights for Bluegill from Lake Mary, MN.\n\n\nLakeTroutALTER\nBiological data for Lake Trout from the Arctic LTER (AK).\n\n\nPallid\nLengths and weights for Pallid Sturgeon from four locations in the Missouri River.\n\n\n\n \n\n\nAge Comparison\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nAlewifeLH\nAges of Lake Huron Alewife assigned from otoliths and scales.\n\n\nBluefishAge\nAges of Bluefish assigned from otoliths by two readers.\n\n\nCroaker1\nAges of Atlantic Croaker assigned from otoliths by two readers.\n\n\nMorwong1\nAges of Morwong assigned from otoliths by Reader A at two times.\n\n\nMorwong2\nAges of Morwong assigned from otoliths by Reader B at two times.\n\n\nMorwong3\nAges of Morwong assigned from otoliths by two readers.\n\n\nMulletBS\nAges of Red Mullet assigned from whole and broken-burnt otoliths.\n\n\nMuskieSLR\nAges of Muskellunge assigned from scales and cleithra.\n\n\nPygmyWFBC\nBiological data for Pygmy Whitefish from Dina Lake #1 (British Columbia), 2000 and 2001.\n\n\nShadCR\nAges of American Shad assigned from scales by three readers at two times.\n\n\nStripedBass1\nAges of Striped Bass assigned from scales and otoliths.\n\n\nStripedBass4\nAges of Striped Bass assigned from scales by two readers.\n\n\nStripedBass5\nAges of Striped Bass assigned from otoliths by two readers.\n\n\nStripedBass6\nAges of Striped Bass assigned from scales and otoliths.\n\n\nWalleyePS\nAges of Walleye assigned from otoliths, scales, and spines.\n\n\nWhitefishMB\nAges of Lake Whitefish from four lakes assigned from scales and fin-rays.\n\n\nYTFlounder\nAges of Yellowtail Flounder assigned from scales and otoliths.\n\n\n\n \n\n\nAge-Length Key\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nCreekChub\nAges (subsample) and lengths (all fish) for Creek Chub.\n\n\nFWDrumLE2\nAges (subsample) and lengths (all fish) for Freshwater Drum from Lake Erie.\n\n\nJonubi2\nAges (subsample) and lengths (all fish) of Jonubi.\n\n\nMorwong4a\nAges (subsample) and lengths (all fish) for Morwong from Morwong4.\n\n\nRockBassLO2\nAges (subsample) and lengths (all fish) for Rock Bass from Lake Ontario.\n\n\nSiscowetMI2004\nAges (subsample) and lengths (all fish) for male and female Siscowet Lake Trout captured at four locations in Michigan waters of Lake Superior.\n\n\nSnapperHG1\nAge (subsample) and length (all fish) of Snapper from two survey locations.\n\n\nSnapperHG2\nAges (subsample) and lengths (all fish) for Snapper.\n\n\nSpotVA2\nAges (subsample) and lengths (all fish) for Spot.\n\n\nStripedBass3\nAges (subsample) and lengths (all fish) for Striped Bass.\n\n\nWR79\nAges and lengths for a hypothetical sample from Westerheim and Ricker (1979).\n\n\n\n \n\n\nBack-Calculation\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nSMBassWB\nGrowth increment data for West Bearskin Lake, MN, Smallmouth Bass.\n\n\n\n \n\n\nLength Frequency\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nBluegillLM\nLengths and weights for Bluegill from Lake Mary, MN.\n\n\nBluntnoseIL1\nSubampled lengths of Bluntnose Minnows from Inch Lake, WI.\n\n\nBullTroutRML1\nLengths and weights for Bull Trout from two Rocky Mountain lakes and two eras.\n\n\nCiscoTL\nLengths, weights, and sex of Cisco from Trout Lake, WI.\n\n\nHerman\nLengths for Walleye, Yellow Perch, Black Crappie, and Black Bullheads from Lake Herman, SD.\n\n\nInchLake1\nLengths for all fish captured in Inch Lake, WI, in two years\n\n\nInchLake2\nLengths and weights for fish captured in Inch Lake\n\n\nLakeTroutALTER\nBiological data for Lake Trout from the Arctic LTER (AK).\n\n\nLMBassBL\nLengths for Largemouth Bass from Boomer Lake, OK.\n\n\nLMBassLCB\nLengths for Largemouth Bass from Lake Carl Blackwell, OK.\n\n\nPygmyWFBC\nBiological data for Pygmy Whitefish from Dina Lake #1 (British Columbia), 2000 and 2001.\n\n\nRBSmeltLM\nLengths for Rainbow Smelt from Lake Michigan, 1977.\n\n\nRuffeSLRH92\nBiological data for Ruffe captured from the St. Louis River in 1992.\n\n\nRuffeTL89\nLengths of Ruffe captured from the St. Louis River in July, 1989.\n\n\nSculpinALTER\nBiological data for Slimy Sculpin from the Arctic LTER (AK).\n\n\nSnapper\nLengths for Snapper from Australia.\n\n\nTroutperchLM2\nLengths for Troutperch from Lake Michigan, 1977.\n\n\nTroutperchLM3\nSubsampled lengths of Troutperch from Lake Michigan, 1977.\n\n\nWalleyeErie2\nBiological data for Walleye from Lake Erie, 2003-2014.\n\n\nYPerchGL\nLengths and weights of Yellow Perch from Grafton Lake (ME) by year.\n\n\nYPerchSB1\nLengths for Yellow Perch from two locations in Saginaw Bay, Lake Michigan.\n\n\nYPerchTL\nLengths and weights for Yellow Perch from Trout Lake, WI.\n\n\n\n \n\n\nSize Structure\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nBluntnoseIL1\nSubampled lengths of Bluntnose Minnows from Inch Lake, WI.\n\n\nHerman\nLengths for Walleye, Yellow Perch, Black Crappie, and Black Bullheads from Lake Herman, SD.\n\n\nInchLake1\nLengths for all fish captured in Inch Lake, WI, in two years\n\n\nLakeTroutALTER\nBiological data for Lake Trout from the Arctic LTER (AK).\n\n\nLMBassBL\nLengths for Largemouth Bass from Boomer Lake, OK.\n\n\nLMBassLCB\nLengths for Largemouth Bass from Lake Carl Blackwell, OK.\n\n\nPSDlit\nGabelhouse five-cell length categories for various species.\n\n\nRBSmeltLM\nLengths for Rainbow Smelt from Lake Michigan, 1977.\n\n\nRuffeTL89\nLengths of Ruffe captured from the St. Louis River in July, 1989.\n\n\nSculpinALTER\nBiological data for Slimy Sculpin from the Arctic LTER (AK).\n\n\nSnapper\nLengths for Snapper from Australia.\n\n\nTroutperchLM2\nLengths for Troutperch from Lake Michigan, 1977.\n\n\nTroutperchLM3\nSubsampled lengths of Troutperch from Lake Michigan, 1977.\n\n\nWalleyeErie2\nBiological data for Walleye from Lake Erie, 2003-2014.\n\n\nYPerchSB1\nLengths for Yellow Perch from two locations in Saginaw Bay, Lake Michigan.\n\n\nYPerchTL\nLengths and weights for Yellow Perch from Trout Lake, WI.\n\n\n\n \n\n\nWeight-Length\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nBlackDrum2001\nBiological data for Black Drum from Virginia waters of the Atlantic Ocean, 2001.\n\n\nBluegillLM\nLengths and weights for Bluegill from Lake Mary, MN.\n\n\nBullTroutRML1\nLengths and weights for Bull Trout from two Rocky Mountain lakes and two eras.\n\n\nChinookArg\nLengths and weights for Chinook Salmon from three locations in Argentina.\n\n\nCiscoTL\nLengths, weights, and sex of Cisco from Trout Lake, WI.\n\n\nInchLake2\nLengths and weights for fish captured in Inch Lake\n\n\nLakeTroutALTER\nBiological data for Lake Trout from the Arctic LTER (AK).\n\n\nPallid\nLengths and weights for Pallid Sturgeon from four locations in the Missouri River.\n\n\nPygmyWFBC\nBiological data for Pygmy Whitefish from Dina Lake #1 (British Columbia), 2000 and 2001.\n\n\nRuffeSLRH92\nBiological data for Ruffe captured from the St. Louis River in 1992.\n\n\nSculpinALTER\nBiological data for Slimy Sculpin from the Arctic LTER (AK).\n\n\nWalleyeErie2\nBiological data for Walleye from Lake Erie, 2003-2014.\n\n\nYPerchGL\nLengths and weights of Yellow Perch from Grafton Lake (ME) by year.\n\n\nYPerchTL\nLengths and weights for Yellow Perch from Trout Lake, WI.\n\n\n\n \n\n\nDepletion\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nBlueCrab\nCatch and effort data for male Blue Crabs.\n\n\nDarterMahon\nCatch and effort data for Fantail Darter.\n\n\nJobfishSIO\nCatch and effort data for South Indian Ocean Jobfish.\n\n\nLobsterHI\nCatch and effort data for Hawaiian Islands Slipper Lobster.\n\n\nLobsterPEI\nCatch and effort data for Prince Edward Island Lobster.\n\n\nPathfinder\nCatch and effort for three Snapper species in a depletion experiment.\n\n\nPikeIL\nCatch and effort data for Northern Pike from Island Lake, NB.\n\n\nShrimpGuam\nCatch and effort data for Deepwater Caridean Shrimp.\n\n\nSMBassLS\nCatch-effort data for Little Silver Lake (Ont) Smallmouth Bass.\n\n\n\n \n\n\nRemoval\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nBrookTroutNEWP\nCatches in removal events for Brook Trout in the Nashwaak Experimental Watersheds Project.\n\n\nBrookTroutNEWP1\nCatches in removal events for Brook Trout in the Nashwaak Experimental Watersheds Project.\n\n\nDeckeretal1999\nCatches in removal events of Cutthroat Trout and Coho Salmon in Little Stawamus Creek (British Columbia, Canada) in 1997.\n\n\nGreensCreekMine\nCatches in removal events of Coho Salmon and Dolly Varden Char at various locations near the Greens Creek (AK) Mine site.\n\n\nJonesStockwell\nCatches in removal events of Brown and Rainbow Trout at various locations.\n\n\nSalmonADP\nCatches in removal events of salmon parr.\n\n\nSalmonidsMCCA\nCatches in removal events of Cutthroate Trout and Steelhead of various sizes in two reaches of McGarvey Creek (CA).\n\n\nSimonsonLyons\nCatches in removal events of trout at various locations.\n\n\nTroutADP\nCatches in removal events of trout.\n\n\n\n \n\n\nCapture-Recapture\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nBluegillJL\nCapture histories (2 samples) of Bluegill from Jewett Lake, MI.\n\n\nBrookTroutOnt\nSummarized single mark-recapture data for Brook Trout across many years.\n\n\nBrownTroutVC1\nSingle census mark-recapture data with lengths for Brown Trout from Valley Creek, MN.\n\n\nCutthroatAL\nCapture histories (9 samples) of Cutthroat Trout from Auke Lake.\n\n\nCutthroatALf\nCapture histories (9 samples) of Cutthroat Trout from Auke Lake.\n\n\nHumpbackWFCR\nCapture histories (2 sample) of Humpback Whitefish.\n\n\nMuskieWI06MR\nSummarized mark-recapture data for Muskellunge from many Wisconsin Lakes, 2006.\n\n\nPikeHL\nCapture histories (2 samples) of Northern Pike from Harding Lake.\n\n\nPikeNY\nSummarized multiple mark-recapture data for all Northern Pike from Buckhorn Marsh, NY.\n\n\nPikeNYPartial1\nCapture histories (4 samples), in capture history format, of a subset of Northern Pike from Buckhorn Marsh, NY.\n\n\nPikeNYPartial2\nCapture histories (4 samples) of a subset of Northern Pike from Buckthorn Marsh.\n\n\nRBTroutUNSP\nCapture histories (2 sample) of Rainbow Trout.\n\n\nRiffleshell\nSummarized multiple mark-recapture data for Tan Riffleshell.\n\n\nSturgeonBL\nSummarized multiple mark-recapture data for Lake Sturgeon.\n\n\nSunfishIN\nSummarized multiple mark-recapture data for Redear Sunfish.\n\n\nWalleyeMN06b\nSummarized multiple mark-recapture data for Walleye from four lakes in Northern Minnesota.\n\n\nWalleyePL\nSummarized multiple mark-recapture data for YOY walleye.\n\n\n\n \n\n\nMortality\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nBassFL\nCatch-at-age for Suwanee and Largemouth Bass.\n\n\nBrookTroutTH\nCatch-at-age for Tobin Harbor, Isle Royale Brook Trout.\n\n\nBullTroutTC\nCatch-at-age for Bull Trout in Trestle Creek, ID.\n\n\nCCatfishNB\nCatch-at-age of Channel Catfish from two sections of the Platte River, NB.\n\n\nFHCatfish\nCatch-at-age of Flathead Catfish from three southeastern rivers.\n\n\nFHCatfishATL\nCatch-at-age of Flathead Catfish from three Atlantic rivers.\n\n\nMenhaden1\nCatch-at-age for Gulf Menhaden, 1964-2004.\n\n\nRockBassCL\nCatch-at-age of Cayuga Lake Rock Bass.\n\n\nSunfishLP\nCatch-at-age for Bluegill and Redear Sunfish in Florida.\n\n\nWalleyeErie2\nBiological data for Walleye from Lake Erie, 2003-2014.\n\n\nWalleyeKS\nCatch-at-age for Walleye from eight Kansas reservoirs.\n\n\nWalleyeMN06a\nCatch-at-age for Walleye.\n\n\nWalleyeWad\nCatches-at-age for male and female Walleye from Lake Winnebago, WI, 2010.\n\n\nWhitefishGSL\nCatch-at-age of Great Slave Lake Whitefish (commercial) by area.\n\n\nWhiteGrunt1\nCatch-at-age for White Grunt.\n\n\nYPerchCB1\nCatch-at-age for Yellow Perch from Chequamegon Bay, Lake Superior.\n\n\n\n \n\n\nGrowth\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nBlackDrum2001\nBiological data for Black Drum from Virginia waters of the Atlantic Ocean, 2001.\n\n\nBlueCatfish\nAges and lengths of Blue Catfish.\n\n\nBluegillIL\nLength-at-marking and recapture and time-at-large of Bluegill.\n\n\nBullTroutRML2\nAges and lengths of Bull Trout from two Rocky Mountain lakes at two times.\n\n\nCabezon\nAges, lengths, and maturity for female Cabezon from Oregon.\n\n\nCreekChub\nAges (subsample) and lengths (all fish) for Creek Chub.\n\n\nCroaker2\nAges, lengths, and sexes of Atlantic Croaker by sex.\n\n\nDarterOnt\nAges and lengths of Channel Darters from two locations.\n\n\nEuroPerchTJ\nAges, lengths, and sexes of European Perch.\n\n\nFWDrumLE1\nAges and lengths of Lake Erie Freshwater Drum.\n\n\nJonubi1\nAges and lengths of male Jonubi.\n\n\nLakeTroutALTER\nBiological data for Lake Trout from the Arctic LTER (AK).\n\n\nLJCisco\nAges and lengths of Longjaw Cisco from two locations in Lake Michigan.\n\n\nMorwong4\nAges and lengths of Morwong.\n\n\nRBTroutKenai\nLength-at-marking and recapture and time-at-large of Rainbow Trout.\n\n\nRedDrum\nAges and lengths for Red Drum from the Atlantic Coast.\n\n\nRockBassLO1\nAges and lengths of Lake Ontario Rock Bass.\n\n\nRuffeSLRH92\nBiological data for Ruffe captured from the St. Louis River in 1992.\n\n\nRWhitefishAI\nAges and lengths of Round Whitefish.\n\n\nRWhitefishIR\nAges and lengths of Round Whitefish.\n\n\nSardineChile\nAges and lengths of two year-classes of Sardine from Chilean waters.\n\n\nSardineLK\nAges and lengths of larval Lake Tanganyika Sardine.\n\n\nSculpinALTER\nBiological data for Slimy Sculpin from the Arctic LTER (AK).\n\n\nSiscowetMI2004\nAges (subsample) and lengths (all fish) for male and female Siscowet Lake Trout captured at four locations in Michigan waters of Lake Superior.\n\n\nSMBassWB\nGrowth increment data for West Bearskin Lake, MN, Smallmouth Bass.\n\n\nSpottedSucker1\nAges and lengths of Spotted Sucker.\n\n\nSpotVA1\nAge and length of spot.\n\n\nStripedBass2\nAges and lengths of Atlantic Ocean Striped Bass.\n\n\nTroutBR\nAges and lengths of migratory Brown and Rainbow Trout.\n\n\nTroutperchLM1\nAges, lengths, and sexes of Troutperch.\n\n\nWalleyeErie2\nBiological data for Walleye from Lake Erie, 2003-2014.\n\n\nWalleyeML\nBack-calculated lengths-at-age for Walleye from Lake Mille Lacs, 2000-2011.\n\n\nWalleyeRL\nGrowth increment data for Red Lakes Walleye.\n\n\nWhiteGrunt2\nAges, lengths, and sexes of White Grunt.\n\n\nYERockfish\nAges, lengths, and maturity for Yelloweye Rockfish.\n\n\n\n \n\n\nRecruitment\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nBloaterLH\nStock and recruitment data for Lake Huron Bloaters, 1981-1996.\n\n\nBrookTroutNC\nStock and recruitment data for Brook Trout from Ball Creek, NC, 1991-2004.\n\n\nBSkateGB\nStock and recruitment data for Barndoor Skate from Georges Bank, 1966-2007.\n\n\nChinookKR\nStock and recruitment data for Klamath River Chinook Salmon, 1979-2000.\n\n\nCodNorwegian\nStock and recruitment data for Norwegian cod, 1937-1960.\n\n\nCrappieARMS\nStock and recruitment data for Crappies from four reservoirs in Arkansas and Mississippi, USA.\n\n\nHake\nStock and recruitment data for Hake, 1982-1996.\n\n\nHalibutPAC\nStock and recruitment data for Pacific Halibut, 1929-1991.\n\n\nHerringBWE\nStock and recruitment data for Blackwater Estuary Herring, 1962-1997.\n\n\nHerringISS\nStock and recruitment data for Icelandic summer spawning Herring, 1946-1996.\n\n\nKingCrabAK\nStock and recruitment data for Red King Crab in Alaska, 1960-2004.\n\n\nLakeTroutGIS\nStock and recruitment data for Lake Trout from Gull Island Shoal, Lake Superior, 1964-1991.\n\n\nLakeTroutMI\nStock and recruitment data for Lake Trout in Lake Superior, 1971-1991.\n\n\nLizardfish\nStock and recruitment data for Greater Lizardfish, 1955-1964.\n\n\nPikeWindermere\nStock and recruitment data for Northern Pike from Lake Windermere, 1944-1981.\n\n\nPSalmonAK\nStock and recruitment data for Alaskan Pink Salmon, 1960-1990.\n\n\nRBSmeltErie\nRecruitment time-series for Rainbow Smelt in Lake Erie, 1977-1996.\n\n\nSardinesPacific\nStock and recruitment data for Pacific Sardines, 1935-1990.\n\n\nSLampreyGL\nStock and recruitment data for Sea Lamprey in the Great Lakes, 1997-2007.\n\n\nSockeyeKL\nStock and recruitment data for Sockeye Salmon from Karluk Lake, AK, 1921-1948.\n\n\nSockeyeSR\nStock and recruitment data for Skeena River Sockeye Salmon, 1940-1967.\n\n\nTPrawnsEG\nStock and recruitment data for Exmouth Gulf Tiger Prawn, 1970-83.\n\n\nVendaceLP\nStock and recruitment data for Vendace from Lake Puulavesi, 1982-1996.\n\n\nVendaceLP2\nStock and recruitment data for Vendace from Lake Pyhajarvi.\n\n\nWalleyeEL\nStock and recruitment data for Walleye from Escanaba Lake, WI, 1958-1992.\n\n\nWalleyeErie\nRecruitment time-series for Walleye in Lake Erie, 1959-1972.\n\n\nWalleyeWyrlng\nAnnual catches of yearling Walleye in bottom trawls from Lake Winnebago, WI, 1986-2010.\n\n\nWhitefishTB\nStock and recruitment data for Lake Whitefish in Thunder Bay, Lake Superior, 1975-1988.\n\n\nWShrimpGA\nStock and recruitment data for White Shrimp off the coast of Georgia (USA), 1979-2000.\n\n\nYPerchCB2\nStock and recruitment data for Yellow Perch in Chequamegon Bay, 1975-1986.\n\n\nYPerchGB\nRecruitment time-series for Yellow Perch in Green Bay, 1978-1992.\n\n\nYPerchRL\nRecruitment time-series for Yellow Perch in Red Lakes, MN, 1942-1960.\n\n\nYPerchSB\nStock and recruitment data for Yellow Perch from South Bay, Lake Huron, 1950-1983.\n\n\n\n \n\n\nMaturity\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nCabezon\nAges, lengths, and maturity for female Cabezon from Oregon.\n\n\nRuffeSLRH92\nBiological data for Ruffe captured from the St. Louis River in 1992.\n\n\nWalleyeErie2\nBiological data for Walleye from Lake Erie, 2003-2014.\n\n\nYERockfish\nAges, lengths, and maturity for Yelloweye Rockfish.\n\n\n\n \n\n\nData Manipulation\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nBGHRfish\nFish information from samples collected from Big Hill Reservoir, KS, 2014.\n\n\nBGHRsample\nInformation for each electrofishing sample from Big Hill Reservoir, KS, 2014.\n\n\n\n \n\n\nOther\n\n\n\n\n\n\n\nDataset\nDescription\n\n\n\n\nAfricanRivers\nCharacteristics of a sample of West African rivers.\n\n\nCasselman1990\nInstantaneous growth rates for two calcified ageing structures.\n\n\nCreelMN\nResults of a large number of creel surveys in Minnestoa lakes.\n\n\nEcoli\nPopulation growth of Escherichia coli.\n\n\nGhats\nSpecies accumulation data for fish of the Western Ghats of India.\n\n\nLakeTroutEggs\nLength and egg deposition of Lake Superior Lake Trout.\n\n\nMirex\nMirex concentration, weight, capture year, and species of Lake Ontario salmon.\n\n\nWhitefishLS\nLandings and value of Lake Superior Lake Whitefish."
  },
  {
    "objectID": "pages/packages.html",
    "href": "pages/packages.html",
    "title": "Fisheries-Related R Packages",
    "section": "",
    "text": "You may submit additions or corrections to the list of packages by using the links at the bottom of the sidebar menu to the right. Before creating an issue or pull request …\n\nassure that your package/resource is not already in the list,\nyou include a short name, a link, and a short description for the package/resource,\n[if editing the page] your package/resource is placed alphabetically within the relevant topic section, and\nthe information you supply is complete and correct.\n\nThank you for your contribution to this resource."
  },
  {
    "objectID": "pages/packages.html#general-or-traditional",
    "href": "pages/packages.html#general-or-traditional",
    "title": "Fisheries-Related R Packages",
    "section": "General or Traditional",
    "text": "General or Traditional\n\nmarked\nmra\nmrds\nRcapture\nRMark\nunmarked"
  },
  {
    "objectID": "pages/packages.html#spatially-explicit",
    "href": "pages/packages.html#spatially-explicit",
    "title": "Fisheries-Related R Packages",
    "section": "Spatially Explicit",
    "text": "Spatially Explicit\n\nascr\nsecr\nsecrdesign\nsecrlinear"
  },
  {
    "objectID": "pages/packages.html#other",
    "href": "pages/packages.html#other",
    "title": "Fisheries-Related R Packages",
    "section": "Other",
    "text": "Other\n\ndga\nSCRbayes"
  },
  {
    "objectID": "teaching/index.html",
    "href": "teaching/index.html",
    "title": "Teaching Resources",
    "section": "",
    "text": "Order By\n       Default\n         \n          Modified - Oldest\n        \n         \n          Modified - Newest\n        \n         \n          Published - Oldest\n        \n         \n          Published - Newest\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n\n\n\n\n\n\nAge-Length Key\n\n\nConstruct and apply an age-length key for Striped Bass from Virginia waters of the Atlantic Ocean.\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 30, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAge-Length Key\n\n\nConstruct and apply an age-length key for Lake Erie Freshwater Drum.\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 30, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAge-Length Key\n\n\nConstruct and apply an age-length key for Lake Ontario Rock Bass.\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 30, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nIndividual Growth\n\n\nFit a von Bertalanffy growth function to age-length data from Lake Ontario Rock Bass.\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 29, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAge Comparisons\n\n\nCompare age estimates between two readers or from two structures taken from Lake Champlain (VT) Lake Whitefish.\n\n\n\nDerek H. Ogle\n\n\nDec 19, 2022\n\n\n\n\n\nDec 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Wrangling\n\n\nPractice data wrangling skills with the Trouit Lake Yellow Perch data set.\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeight-Length Relationship\n\n\nFit a weight-length relationsip for Trout Lake Yellow Perch.\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nGraphing\n\n\nPractice graphing skills for the Trout Lake Yellow Perch data set.\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nSize Structure\n\n\nEstimate size structure statistics and compare them among groups of Yellow Perch from Trout Lake (WI).\n\n\n\nDerek H. Ogle\n\n\nMar 19, 2022\n\n\n\n\n\nDec 27, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeight-Length Relationship\n\n\nFit a weight-length relationsip for Inch Lake Bluegill.\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 27, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeight-Length Relationship\n\n\nFit a weight-length relationsip for Inch Lake Largemouth Bass.\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 27, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nCondition\n\n\nExamine relative weight as a measure of condition for Inch Lake Bluegill.\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 27, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Wrangling\n\n\nPractice data wrangling skills for the Inch Lake data set.\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 27, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nGraphing\n\n\nPractice graphing skills for the Inch Lake data set.\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 27, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nSize Structure\n\n\nEstimate size structure statistics and compare them among groups of Yellow Perch from Saginaw Bay, Lake Huron (MI).\n\n\n\nDerek H. Ogle\n\n\nDec 20, 2022\n\n\n\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nBag Limits in Minnesota\n\n\nUse creel data to assess the impact of bag limits on reducing harvest of freshwater fish.\n\n\n\nDerek H. Ogle\n\n\nDec 21, 2022\n\n\n\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAge Comparisons\n\n\nCompare age estimates from two structures taken from Walleye sampled from Pymatuning Sanctuary (PA).\n\n\n\nDerek H. Ogle\n\n\nDec 19, 2022\n\n\n\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nMortality\n\n\nUse catch curve methods to estimate mortality of a population of Lake Superior Lake Trout.\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nMortality\n\n\nUse catch curve methods to estimate mortality of a population of Lake Superior Lake Trout.\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbundance from Depletion Data\n\n\nEstimate abundance of European Bullhead in a headwater stream in England.\n\n\n\nDerek H. Ogle\n\n\nDec 23, 2022\n\n\n\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbundance from Mark-Recapture Data\n\n\nUse single census mark-recapture techniques to estimate abundance of Sea Lamprey in a Lake Huron tributary.\n\n\n\nDerek H. Ogle\n\n\nDec 23, 2022\n\n\n\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbundance from Depletion Data\n\n\nEstimate abundance of Ruffe in Chequamegon Bay, Lake Superior (WI) from experimental trawling data.\n\n\n\nDerek H. Ogle\n\n\nDec 23, 2022\n\n\n\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbundance from Removal Data\n\n\nEstimate abundance of Signal Crayfish in Bookill Gill Beck captured with an experimental method.\n\n\n\nDerek H. Ogle\n\n\nDec 23, 2022\n\n\n\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbundance from Depletion Data\n\n\nEstimate abundance of Largemouth Bass in Lake Guntersville (AL) using electrofishing depletion data.\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbundance from Mark-Recapture Data\n\n\nUse multiple census mark-recapture techniques to estimate abundance of Tan Riffleshell mussels in Indian Creek (VA).\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbundance from Mark-Recapture Data\n\n\nUse single census mark-recapture techniques to estimate abundance of Rainbow Trout in Upper Niagara Springs Pond (ID).\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbundance from Mark-Recapture Data\n\n\nUse multiple census mark-recapture techniques to estimate abundance of YOY Walleye in Pine Lake (WI).\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbundance from Mark-Recapture Data\n\n\nUse single census mark-recapture techniques to estimate abundance of Brown Trout in a stretch of the Ugly River (New Zealand).\n\n\n\nDerek H. Ogle\n\n\nMar 8, 2019\n\n\n\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nSize Structure of Bluegills Collected with Different Gears\n\n\nDevelop size structure summaries to infer gear type used.\n\n\n\nDerek H. Ogle\n\n\nDec 21, 2022\n\n\n\n\n\nDec 21, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nSize Structure of Species in a Cold-Water Wisconsin Stream\n\n\nDevelop size structure summaries to infer species identification.\n\n\n\nDerek H. Ogle\n\n\nDec 20, 2022\n\n\n\n\n\nDec 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding Zero Catches\n\n\nAdd zeroes for species not caught so that CPE calculations are correct\n\n\n\nDerek H. Ogle\n\n\nApr 19, 2018\n\n\n\n\n\nDec 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nHalf-Life Property of K\n\n\nDemonstrate that K is the time it takes for a mean fish to grow halfway to the aymptotic length.\n\n\n\nDerek H. Ogle\n\n\nJun 12, 2016\n\n\n\n\n\nDec 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing fishR Data with Students\n\n\nThoughts on how best to use R package data with students.\n\n\n\nDerek H. Ogle\n\n\nDec 19, 2022\n\n\n\n\n\nDec 20, 2022\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "teaching/posts/2016-6-12_Halflife_of_K/index.html",
    "href": "teaching/posts/2016-6-12_Halflife_of_K/index.html",
    "title": "Half-Life Property of K",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below. One function from FSA is also used below, but the full package was not loaded here. In addition, the plot was created with ggplot2, though the code is not shown in this post.\n\n\n\nlibrary(dplyr)  # for mutate()\n\n \n\nIntroduction\nA colleague recently questioned whether \\(\\frac{log_{e}(2)}{K}\\), where \\(K\\) is the Brody growth coefficient in the typical parameterization of the von Bertalanffy growth function, represents the “time it takes for a fish to grow from any length to a length halfway between the initial length and the asymptotic mean length (\\(L_{\\infty}\\))”. This phenomenon is briefly illustrated below.\n \n\n\nOne Age\n\nCreate an R function for the typical von Bertalanffy growth function.\n\n\nvb <- FSA::vbFuns()\n\n\nDeclare parameter values.\n\n\nLinf <- 30\nK <- 0.3\nt0 <- -0.5\n\n\nPredict mean length at some initial age.\n\n\ninitA <- 1\n( initL <- vb(initA,Linf,K,t0) )\n\n#R|  [1] 10.87116\n\n\n\nPredict mean length at the initial age plus \\(\\frac{log_{e}(2)}{K}\\).\n\n\nnextA <- initA+log(2)/K\n( nextL <- vb(nextA,Linf,K,t0) )\n\n#R|  [1] 20.43558\n\n\n\nFind the length that is halfway between the initial length and \\(L_{\\infty}\\).1\n\n1 all.equal() is used to test equality with a tolerance for machine precision.\n( hwL <- mean(c(initL,Linf)) )\n\n#R|  [1] 20.43558\n\nall.equal(nextL,hwL)\n\n#R|  [1] TRUE\n\n\nNote that these last two values are equal, which illustrates the statement above about the “half-life” meaning of \\(K\\).\n \nThis can be repeated for a different initial age.\n\ninitA <- 7\n( initL <- vb(initA,Linf,K,t0) )\n\n#R|  [1] 26.83802\n\nnextA <- initA+log(2)/K\n( nextL <- vb(nextA,Linf,K,t0) )\n\n#R|  [1] 28.41901\n\n( hwL <- mean(c(initL,Linf)) )\n\n#R|  [1] 28.41901\n\nall.equal(nextL,hwL)\n\n#R|  [1] TRUE\n\n\n \nThe two examples above can be examined in Figure 1, where the horizontal green lines illustrate the increase from the initial ages (e.g., 1 and 7) by \\(\\frac{log_{e}(2)}{K}\\), the vertical red line is the change in length from the initial length to half of \\(L_{\\infty}\\), and the vertical orange line is the remaining change in length to \\(L_{\\infty}\\). The half-life property of \\(K\\) is thus illustrated by the equivalent lengths of the paired red and orange lines.\n\n\n\n\n\nFigure 1: Demonstration of the half-life property of the K parameter in the von Bertalanffy growth function. (see text for description).\n\n\n\n\n \n\n\nMultiple Ages\nThis process is repeated below for several initial age values. Note that the differences between the predicted mean length at the new age and the point halfway between the initial length and \\(L_{\\infty}\\) are equal (within machine precision) for each initial age. Again, illustrating the statement about \\(K\\).\n\ndata.frame(initA=1:20) |>\n  mutate(initL=vb(initA,Linf,K,t0),\n         nextA=initA+log(2)/K,\n         nextL=vb(nextA,Linf,K,t0),\n         hwL=(initL+Linf)/2,\n         areEqual=all.equal(nextL,hwL))\n\n#R|     initA    initL     nextA    nextL      hwL areEqual\n#R|  1      1 10.87116  3.310491 20.43558 20.43558     TRUE\n#R|  2      2 15.82900  4.310491 22.91450 22.91450     TRUE\n#R|  3      3 19.50187  5.310491 24.75093 24.75093     TRUE\n#R|  4      4 22.22279  6.310491 26.11140 26.11140     TRUE\n#R|  5      5 24.23850  7.310491 27.11925 27.11925     TRUE\n#R|  6      6 25.73178  8.310491 27.86589 27.86589     TRUE\n#R|  7      7 26.83802  9.310491 28.41901 28.41901     TRUE\n#R|  8      8 27.65755 10.310491 28.82878 28.82878     TRUE\n#R|  9      9 28.26467 11.310491 29.13234 29.13234     TRUE\n#R|  10    10 28.71444 12.310491 29.35722 29.35722     TRUE\n#R|  11    11 29.04763 13.310491 29.52382 29.52382     TRUE\n#R|  12    12 29.29447 14.310491 29.64723 29.64723     TRUE\n#R|  13    13 29.47733 15.310491 29.73866 29.73866     TRUE\n#R|  14    14 29.61280 16.310491 29.80640 29.80640     TRUE\n#R|  15    15 29.71315 17.310491 29.85658 29.85658     TRUE\n#R|  16    16 29.78750 18.310491 29.89375 29.89375     TRUE\n#R|  17    17 29.84257 19.310491 29.92129 29.92129     TRUE\n#R|  18    18 29.88338 20.310491 29.94169 29.94169     TRUE\n#R|  19    19 29.91360 21.310491 29.95680 29.95680     TRUE\n#R|  20    20 29.93600 22.310491 29.96800 29.96800     TRUE\n\n\n \n\n\nDifferent Parameters\nThe code below illustrates the same phenomenon for a very different set of parameter values.\n\nLinf <- 300\nK <- 0.9\nt0 <- 1\ndata.frame(initA=1:20) |>\n  mutate(initL=vb(initA,Linf,K,t0),\n         nextA=initA+log(2)/K,\n         nextL=vb(nextA,Linf,K,t0),\n         hwL=(initL+Linf)/2,\n         areEqual=all.equal(nextL,hwL))\n\n#R|     initA    initL     nextA    nextL      hwL areEqual\n#R|  1      1   0.0000  1.770164 150.0000 150.0000     TRUE\n#R|  2      2 178.0291  2.770164 239.0146 239.0146     TRUE\n#R|  3      3 250.4103  3.770164 275.2052 275.2052     TRUE\n#R|  4      4 279.8383  4.770164 289.9192 289.9192     TRUE\n#R|  5      5 291.8029  5.770164 295.9014 295.9014     TRUE\n#R|  6      6 296.6673  6.770164 298.3337 298.3337     TRUE\n#R|  7      7 298.6450  7.770164 299.3225 299.3225     TRUE\n#R|  8      8 299.4491  8.770164 299.7246 299.7246     TRUE\n#R|  9      9 299.7760  9.770164 299.8880 299.8880     TRUE\n#R|  10    10 299.9089 10.770164 299.9545 299.9545     TRUE\n#R|  11    11 299.9630 11.770164 299.9815 299.9815     TRUE\n#R|  12    12 299.9849 12.770164 299.9925 299.9925     TRUE\n#R|  13    13 299.9939 13.770164 299.9969 299.9969     TRUE\n#R|  14    14 299.9975 14.770164 299.9988 299.9988     TRUE\n#R|  15    15 299.9990 15.770164 299.9995 299.9995     TRUE\n#R|  16    16 299.9996 16.770164 299.9998 299.9998     TRUE\n#R|  17    17 299.9998 17.770164 299.9999 299.9999     TRUE\n#R|  18    18 299.9999 18.770164 300.0000 300.0000     TRUE\n#R|  19    19 300.0000 19.770164 300.0000 300.0000     TRUE\n#R|  20    20 300.0000 20.770164 300.0000 300.0000     TRUE\n\n\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2018-4-19_Adding_Zero_Catches/index.html",
    "href": "teaching/posts/2018-4-19_Adding_Zero_Catches/index.html",
    "title": "Adding Zero Catches",
    "section": "",
    "text": "Note\n\n\n\nThe following packages are loaded for use below. I also set the random number seed for reproducibility of the randomly generated sample data below.\n\n\n\nlibrary(dplyr)    # for group_by(), summarize(), mutate(), right_join()\nlibrary(tidyr)    # for complete(), nesting()\nset.seed(678394)  # for reproducibility of randomly created data\n\n \n\nIntroduction\nMuch of my work is with undergraduates who are first learning to analyze fisheries data. A common “learning opportunity” occurs when students are asked to compute the mean catch (or CPE), along with a standard deviation (SD), across multiple gear sets for each species. The learning opportunity occurs because some species will invariably not be caught in some gear sets. When the students summarize the number of fish caught for each species in each gear set those species not caught in a particular gear set will not “appear” in their data. Thus, when calculating the mean, the student will get the correct numerator (sum of catch across all gear sets) but not denominator (they use number of catches summed rather than total number of gear sets), which inflates (over-estimates) the mean catch and (usually) deflates (under-estimates) the SD of catches. Once confronted with this issue, they easily realize how to correct the mean calculation, but calculating the standard deviation is still an issue. These problems are exacerbated when using software to compute these summary statistics across many individual gear sets.\nIn software, the “trick” is to add a zero for each species not caught in a specific gear set that was caught in at least one gear set. For example, if Bluegill were caught in at least one gear set but not in the third gear set, then a zero must be added as the catch of Bluegill in the third gear set. The addZeroCatch() function in the FSA package was an attempt to efficiently add these zeroes. This function has proven useful over the years, but I have become dissatisfied with its clunkiness. Additionally, I recently became aware of the complete() function in the tidyr package which holds promise for handling the same task. In this post, I explore the use of complete() for handling this issue.\n \n\n\nSimple Data\nIn this first example, the data consists of species and length recorded for each captured fish organized by the gear set identification number (ID) and held in the fishdat data.frame.\n\n\n#R|    ID species  tl\n#R|  1  1     BLG 148\n#R|  2  1     BLG 153\n#R|  3  1     BLG 147\n#R|  4  1     BLG 149\n#R|  5  1     BLG 144\n#R|  6  1     BLG 145\n\n\nThe catch of each species in each gear set may be found using group_by() and summarize() with n().11  I find the tibble structure returned by group_by() to be annoying with simple data frames like this. Thus, I usually use as.data.frame() to remove it.\n\ncatch <- fishdat |>\n  group_by(ID,species) |>\n  summarize(num=n()) |>\n  as.data.frame()\ncatch\n\n#R|     ID species num\n#R|  1   1     BLG  10\n#R|  2   1     LMB   5\n#R|  3   1     YEP   5\n#R|  4   2     LMB   9\n#R|  5   2     YEP   7\n#R|  6   3     BLG  12\n#R|  7   3     YEP   7\n#R|  8   4     BLG   1\n#R|  9   4     LMB  11\n#R|  10  4     YEP  11\n#R|  11  5     BLG   9\n\n\nFrom this it is seen that three species (“BLG”, “LMB”, and “YEP”) were captured across all nets, but that “BLG” were not captured in “ID=2”, “LMB” were not captured in “ID=3”, and “LMB” and “YEP” were not captured in “ID=5”. The sample size, mean, and SD of catches per species from these data may be found by again using group_by() and summarize(). However, these calculations are INCORRECT because they do not include the zero catches of “BLG” in “ID=2”, “LMB” in “ID=3”, and “LMB” and “YEP” in “ID=5”. The problem is most evident in the sample sizes, which should be five (gear sets) for each species.\n\n## Example of INCORRECT summaries because not using zeroes\ncatch |> \n  group_by(species) |>\n  summarize(n=n(),mn=mean(num),sd=sd(num)) |>\n  as.data.frame()\n\n#R|    species n       mn       sd\n#R|  1     BLG 4 8.000000 4.830459\n#R|  2     LMB 3 8.333333 3.055050\n#R|  3     YEP 4 7.500000 2.516611\n\n\nThe complete() function can be used to add rows to a data frame for variables (or combinations of variables) that should be present in the data frame (relative to other values that are present) but are not. The complete() function takes a data frame as its first argument (but will be “piped” in below with |>) and the variable or variables that will be used to identify which items are missing. For example, with these data, a zero should be added to num for missing combinations defined by ID and species.\n\n## Example of default complete ... see below to add zeroes, not NAs\ncatch |>\n  complete(ID,species) |>\n  as.data.frame()\n\n#R|     ID species num\n#R|  1   1     BLG  10\n#R|  2   1     LMB   5\n#R|  3   1     YEP   5\n#R|  4   2     BLG  NA\n#R|  5   2     LMB   9\n#R|  6   2     YEP   7\n#R|  7   3     BLG  12\n#R|  8   3     LMB  NA\n#R|  9   3     YEP   7\n#R|  10  4     BLG   1\n#R|  11  4     LMB  11\n#R|  12  4     YEP  11\n#R|  13  5     BLG   9\n#R|  14  5     LMB  NA\n#R|  15  5     YEP  NA\n\n\nFrom this result, it is seen that complete() added a row for “BLG” in “ID=2”, “LMB” in “ID=3”, and “LMB” and “YEP” in “ID=5” as we had hoped. However, complete() adds NAs by default. The value to add can be changed with fill=, which takes a list that includes the name of the variable to which the NAs were added (num in this case) set equal to the value to be added (0 in this case).22 Here the result is saved into the catch data frame, thus modifying the original data frame with the addition of the zeroes.\n\ncatch <- catch |>\n  complete(ID,species,fill=list(num=0)) |>\n  as.data.frame()\ncatch\n\n#R|     ID species num\n#R|  1   1     BLG  10\n#R|  2   1     LMB   5\n#R|  3   1     YEP   5\n#R|  4   2     BLG   0\n#R|  5   2     LMB   9\n#R|  6   2     YEP   7\n#R|  7   3     BLG  12\n#R|  8   3     LMB   0\n#R|  9   3     YEP   7\n#R|  10  4     BLG   1\n#R|  11  4     LMB  11\n#R|  12  4     YEP  11\n#R|  13  5     BLG   9\n#R|  14  5     LMB   0\n#R|  15  5     YEP   0\n\n\nThese correct catch data can then be summarized as above to show the correct sample size, mean, and SD of catches per species.\n\ncatch |>\n  group_by(species) |>\n  summarize(n=n(),mn=mean(num),sd=sd(num)) |>\n  as.data.frame()\n\n#R|    species n  mn       sd\n#R|  1     BLG 5 6.4 5.504544\n#R|  2     LMB 5 5.0 5.049752\n#R|  3     YEP 5 6.0 4.000000\n\n\n \n\n\nMultiple Values to Receive Zeroes\nSuppose that the fish data included a column that indicates whether the fish was marked and returned to the waterbody or not.\n\n\n#R|    ID species  tl marked\n#R|  1  1     BLG 148    YES\n#R|  2  1     BLG 153    YES\n#R|  3  1     BLG 147    YES\n#R|  4  1     BLG 149    YES\n#R|  5  1     BLG 144    YES\n#R|  6  1     BLG 145    YES\n\n\nThe catch and number of fish marked and returned per gear set ID and species may again be computed with group_by() and summarize(). Note, however, the use of ifelse() to use a 1 if the fish was marked and a 0 if it was not. Summing these values returns the number of fish that were marked. Giving this data frame to complete() as before will add zeroes for both the num and nmarked variables as long as both are included in the list given to fill=.\n\ncatch2 <- fishdat2 |>\n  group_by(ID,species) |>\n  summarize(num=n(),\n            nmarked=sum(ifelse(marked==\"YES\",1,0)))\ncatch2\n\n#R|  # A tibble: 11 × 4\n#R|  # Groups:   ID [5]\n#R|        ID species   num nmarked\n#R|     <dbl> <chr>   <int>   <dbl>\n#R|   1     1 BLG        10       8\n#R|   2     1 LMB         5       2\n#R|   3     1 YEP         5       2\n#R|   4     2 LMB         9       5\n#R|   5     2 YEP         7       2\n#R|   6     3 BLG        12       3\n#R|   7     3 YEP         7       4\n#R|   8     4 BLG         1       0\n#R|   9     4 LMB        11       4\n#R|  10     4 YEP        11       7\n#R|  11     5 BLG         9       6\n\n\nThere are two things to note in this output. First, that there are no zeroes for num and nmarked for the same species and gear sets as before. Second, the summarization was across two groups but summarize() only removes one of the group_by() variables. Thus, this result is still grouped by ID as shown above, which will interfere with using complete() to add the zeroes. This grouping can be removed with ungroup() as shown below before using complete().\n\ncatch2 <- catch2 |>\n  ungroup() |>\n  complete(ID,species,fill=list(num=0,nmarked=0)) |>\n  as.data.frame()\ncatch2\n\n#R|     ID species num nmarked\n#R|  1   1     BLG  10       8\n#R|  2   1     LMB   5       2\n#R|  3   1     YEP   5       2\n#R|  4   2     BLG   0       0\n#R|  5   2     LMB   9       5\n#R|  6   2     YEP   7       2\n#R|  7   3     BLG  12       3\n#R|  8   3     LMB   0       0\n#R|  9   3     YEP   7       4\n#R|  10  4     BLG   1       0\n#R|  11  4     LMB  11       4\n#R|  12  4     YEP  11       7\n#R|  13  5     BLG   9       6\n#R|  14  5     LMB   0       0\n#R|  15  5     YEP   0       0\n\n\n \n\n\nMore Information that Does Not Get Zeroes\nSuppose there is a data frame called geardat that contains information specific to each gear set.\n\n\n\n\ngeardat\n\n#R|    ID mon year  lake run effort\n#R|  1  1 May 2018 round   1   1.34\n#R|  2  2 May 2018 round   2   1.87\n#R|  3  3 May 2018 round   3   1.56\n#R|  4  4 May 2018  twin   1   0.92\n#R|  5  5 May 2018  twin   2   0.67\n\n\nAnd, for the purposes of this example, suppose that we have summarized catch data WITHOUT the zeroes having been added.\n\ncatch3 <- fishdat2 |>\n  group_by(ID,species) |>\n  summarize(num=n(),\n            nmarked=sum(ifelse(marked==\"YES\",1,0))) |>\n  as.data.frame()\ncatch3\n\n#R|     ID species num nmarked\n#R|  1   1     BLG  10       8\n#R|  2   1     LMB   5       2\n#R|  3   1     YEP   5       2\n#R|  4   2     LMB   9       5\n#R|  5   2     YEP   7       2\n#R|  6   3     BLG  12       3\n#R|  7   3     YEP   7       4\n#R|  8   4     BLG   1       0\n#R|  9   4     LMB  11       4\n#R|  10  4     YEP  11       7\n#R|  11  5     BLG   9       6\n\n\nFinally, suppose that these summarized catch data are joined with the gear data such that the gear set specific information is shown with each catch.\n\ncatch3 <- right_join(geardat,catch3,by=\"ID\")\ncatch3\n\n#R|     ID mon year  lake run effort species num nmarked\n#R|  1   1 May 2018 round   1   1.34     BLG  10       8\n#R|  2   1 May 2018 round   1   1.34     LMB   5       2\n#R|  3   1 May 2018 round   1   1.34     YEP   5       2\n#R|  4   2 May 2018 round   2   1.87     LMB   9       5\n#R|  5   2 May 2018 round   2   1.87     YEP   7       2\n#R|  6   3 May 2018 round   3   1.56     BLG  12       3\n#R|  7   3 May 2018 round   3   1.56     YEP   7       4\n#R|  8   4 May 2018  twin   1   0.92     BLG   1       0\n#R|  9   4 May 2018  twin   1   0.92     LMB  11       4\n#R|  10  4 May 2018  twin   1   0.92     YEP  11       7\n#R|  11  5 May 2018  twin   2   0.67     BLG   9       6\n\n\nThese data simulate what might be seen from a flat database.\nWith these data, zeroes still need to be added as defined by missing combinations of ID and species. However, if only these two variables are included in complete() then zeroes will be added for mon, year, lake, run, and effort, which is not desired. These five variables are connected to or “nested” with the ID variable (i.e., if you know ID then you know the values of these other variables) and should be treated as a group. Nesting of variables can be handled in complete() by including the names of all the connected variables in nesting().\n\ncatch3 |> complete(nesting(ID,mon,year,lake,run,effort),species,\n                    fill=list(num=0,nmarked=0)) |>\n  as.data.frame()\n\n#R|     ID mon year  lake run effort species num nmarked\n#R|  1   1 May 2018 round   1   1.34     BLG  10       8\n#R|  2   1 May 2018 round   1   1.34     LMB   5       2\n#R|  3   1 May 2018 round   1   1.34     YEP   5       2\n#R|  4   2 May 2018 round   2   1.87     BLG   0       0\n#R|  5   2 May 2018 round   2   1.87     LMB   9       5\n#R|  6   2 May 2018 round   2   1.87     YEP   7       2\n#R|  7   3 May 2018 round   3   1.56     BLG  12       3\n#R|  8   3 May 2018 round   3   1.56     LMB   0       0\n#R|  9   3 May 2018 round   3   1.56     YEP   7       4\n#R|  10  4 May 2018  twin   1   0.92     BLG   1       0\n#R|  11  4 May 2018  twin   1   0.92     LMB  11       4\n#R|  12  4 May 2018  twin   1   0.92     YEP  11       7\n#R|  13  5 May 2018  twin   2   0.67     BLG   9       6\n#R|  14  5 May 2018  twin   2   0.67     LMB   0       0\n#R|  15  5 May 2018  twin   2   0.67     YEP   0       0\n\n\nIt is possible to have nesting with species as well. Suppose, for example, that the scientific name for the species was included in the original fishdata2 that was summarized (using a combination of the examples from above, but not shown here) to catch4.\n\n\n\n\ncatch4\n\n#R|     ID species                spsci num nmarked mon year  lake run effort\n#R|  1   1     BLG  Lepomis macrochirus  10       8 May 2018 round   1   1.34\n#R|  2   1     LMB Micropterus dolomieu   5       2 May 2018 round   1   1.34\n#R|  3   1     YEP     Perca flavescens   5       2 May 2018 round   1   1.34\n#R|  4   2     LMB Micropterus dolomieu   9       5 May 2018 round   2   1.87\n#R|  5   2     YEP     Perca flavescens   7       2 May 2018 round   2   1.87\n#R|  6   3     BLG  Lepomis macrochirus  12       3 May 2018 round   3   1.56\n#R|  7   3     YEP     Perca flavescens   7       4 May 2018 round   3   1.56\n#R|  8   4     BLG  Lepomis macrochirus   1       0 May 2018  twin   1   0.92\n#R|  9   4     LMB Micropterus dolomieu  11       4 May 2018  twin   1   0.92\n#R|  10  4     YEP     Perca flavescens  11       7 May 2018  twin   1   0.92\n#R|  11  5     BLG  Lepomis macrochirus   9       6 May 2018  twin   2   0.67\n\n\nThe zeroes are then added to this data.frame making sure to note the nesting of species and spsci.\n\ncatch4 |> \n  complete(nesting(ID,mon,year,lake,run,effort),\n           nesting(species,spsci),\n           fill=list(num=0,nmarked=0)) |>\n  as.data.frame()\n\n#R|     ID mon year  lake run effort species                spsci num nmarked\n#R|  1   1 May 2018 round   1   1.34     BLG  Lepomis macrochirus  10       8\n#R|  2   1 May 2018 round   1   1.34     LMB Micropterus dolomieu   5       2\n#R|  3   1 May 2018 round   1   1.34     YEP     Perca flavescens   5       2\n#R|  4   2 May 2018 round   2   1.87     BLG  Lepomis macrochirus   0       0\n#R|  5   2 May 2018 round   2   1.87     LMB Micropterus dolomieu   9       5\n#R|  6   2 May 2018 round   2   1.87     YEP     Perca flavescens   7       2\n#R|  7   3 May 2018 round   3   1.56     BLG  Lepomis macrochirus  12       3\n#R|  8   3 May 2018 round   3   1.56     LMB Micropterus dolomieu   0       0\n#R|  9   3 May 2018 round   3   1.56     YEP     Perca flavescens   7       4\n#R|  10  4 May 2018  twin   1   0.92     BLG  Lepomis macrochirus   1       0\n#R|  11  4 May 2018  twin   1   0.92     LMB Micropterus dolomieu  11       4\n#R|  12  4 May 2018  twin   1   0.92     YEP     Perca flavescens  11       7\n#R|  13  5 May 2018  twin   2   0.67     BLG  Lepomis macrochirus   9       6\n#R|  14  5 May 2018  twin   2   0.67     LMB Micropterus dolomieu   0       0\n#R|  15  5 May 2018  twin   2   0.67     YEP     Perca flavescens   0       0\n\n\n \n\n\nFinal Thoughts\nThis is my first exploration with complete() and it looks promising for this task of adding zeroes to data frames of catch by gear set for gear sets in which a species was not caught. I will be curious to hear what others think of this function and how it might fit in their workflow.\n \n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_AgeComparisons_LCWhitefish/index.html",
    "href": "teaching/posts/2019-3-8_AgeComparisons_LCWhitefish/index.html",
    "title": "Age Comparisons",
    "section": "",
    "text": "Herbst and Marsden (2011) compared the precision, bias, and reader uncertainty of ages estimated from the scales, dorsal fin rays, and otoliths of 151 Lake Whitefish (Coregonus clupeaformis) captured from Lake Champlain in 2009. The initial age estimates from two readers and a consensus age between the two readers from each of the three structures (variables are the structure name with a “1” or “2” appended to denote the reader or “C” for the consensus age) are in WhitefishLC.11 See “CSV file” link in “Source” section of linked page."
  },
  {
    "objectID": "teaching/posts/2019-3-8_AgeComparisons_LCWhitefish/index.html#version-a---otoliths",
    "href": "teaching/posts/2019-3-8_AgeComparisons_LCWhitefish/index.html#version-a---otoliths",
    "title": "Age Comparisons",
    "section": "Version A - Otoliths",
    "text": "Version A - Otoliths\n\nUse tabular, graphical, and statistical methods to describe any apparent bias in age estimates from otoliths between the two readers.\nDescribe precision in age estimates between the two readers for otoliths.\nDescribe any apparent bias between the consensus age estimates from otoliths and scales."
  },
  {
    "objectID": "teaching/posts/2019-3-8_AgeComparisons_LCWhitefish/index.html#version-b---scales",
    "href": "teaching/posts/2019-3-8_AgeComparisons_LCWhitefish/index.html#version-b---scales",
    "title": "Age Comparisons",
    "section": "Version B - Scales",
    "text": "Version B - Scales\n\nUse tabular, graphical, and statistical methods to describe any apparent bias in age estimates from scales between the two readers.\nDescribe precision in age estimates between the two readers for scales.\nDescribe any apparent bias between the consensus age estimates from scales and fin rays."
  },
  {
    "objectID": "teaching/posts/2019-3-8_AgeComparisons_LCWhitefish/index.html#version-c---fin-rays",
    "href": "teaching/posts/2019-3-8_AgeComparisons_LCWhitefish/index.html#version-c---fin-rays",
    "title": "Age Comparisons",
    "section": "Version C - Fin Rays",
    "text": "Version C - Fin Rays\n\nUse tabular, graphical, and statistical methods to describe any apparent bias in age estimates from fin rays between the two readers.\nDescribe precision in age estimates between the two readers for fin rays.\nDescribe any apparent bias between the consensus age estimates from fin rays and otoliths.\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers."
  },
  {
    "objectID": "teaching/posts/2019-3-8_Condition_BGInch/index.html",
    "href": "teaching/posts/2019-3-8_Condition_BGInch/index.html",
    "title": "Condition",
    "section": "",
    "text": "Continuation\n\n\n\nThis exercise is a continuation of this data wrangling exercise and, thus, depends on data frames constructed there. Please load/run your script from that exercise to access the Bluegill only data frames.\n\n\n \n\nBasic Analysis I\nFurther prepare the Bluegill only data frame for computation of relative weights by adding a relative weight variable and reducing the data frame to only fish with lengths for which a standard weight should be computed.\n\nFor Bluegills captured only in 2007 …\n\nCompute the number of observations and mean, standard deviation, and standard error of relative weight for each Gabelhouse length category.\nDetermine if the mean relative weight differs among Gabelhouse length categories.\nConstruct a plot, with confidence intervals and appropriate significance letters, that depict your results.\n\n\n \n\n\nBasic Analysis II\n\nRepeat the previous question for Bluegills captured only in 2008.\nEmpirically compare your results between years. Provide at least three observations from your findings and at least two plausible explanations for what you observed.\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_Depletion_LGLargemouth/index.html",
    "href": "teaching/posts/2019-3-8_Depletion_LGLargemouth/index.html",
    "title": "Abundance from Depletion Data",
    "section": "",
    "text": "Maceina et al. (1995) examined the population of harvestable Largemouth Bass (Micropterus salmoides) in Conner Cove of Lake Guntersville, Alabama (a 28,000 ha impoundment of the Tennessee River) in March, 1992. Their objective was to estimate the abundance of harvestable bass through the depletion of catches due to electrofishing. In their study, they electrofished for 15 minutes at each of four depth strata in Conner Cove. The total number of bass captured and removed from the population in the full hour of electrofishing at the four depths was recorded. Thus, a total of one hour of electrofishing constituted one unit of effort. Six one-hour periods were used to deplete the population of bass in one Conner Cove. The number of bass caught in each successive sampling period was 23, 12, 13, 14, 9, and 7. Enter these data into vectors in R and use them to answer the following questions.\n\nWhat is the best estimate and 95% confidence interval for the catchability coefficient? Very carefully interpret what this estimate means relative to Conner Cove Largemouth Bass.\nHow does your catchability estimate compare to that published in Maceina et al. (1995)? Explain discrepancies (if any).\nWhat is the best estimate and 95% confidence interval for the population size?\nHow does your populations size estimate compare to that published in Maceina et al. (1995)? Explain discrepancies (if any).\nEstimate the expected number of bass that would be caught in the first sampling period given your best estimates of \\(q\\) and \\(N_{0}\\), and the amount of effort used in each sample period.1\nEstimate the expected number of bass that would be caught in the second sampling period, again given your best estimates of \\(q\\) and \\(N_{0}\\), and the amount of effort used in each sample period.\n\n1 Symbols are as used in Ogle (2016).\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\n\nReferences\n\nMaceina, M., W. Wrenn, and D. Lowery. 1995. Estimating harvestable Largemouth Bass abundance in a reservoir with an electrofishing catch depletion technique. North American Journal of Fisheries Management 15:103–109.\n\n\nOgle, D. H. 2016. Introductory Fisheries Analyses with R. CRC Press, Boca Raton, FL.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_Graphing_Inch/index.html",
    "href": "teaching/posts/2019-3-8_Graphing_Inch/index.html",
    "title": "Graphing",
    "section": "",
    "text": "Continuation\n\n\n\nThis exercise is a continuation of this data wrangling exercise and, thus, depends on data frames constructed there. Please load/run your script from that excercise to access the Bluegill, Largemouth Bass, and non-game species only data frames.\n\n\n \n\nDescribe the following from plots constructed with the Bluegill only data.frame.\n\nThe distribution of lengths.\nThe distribution of weights.\nThe distribution of lengths separately for each year (without creating separate data frames for each year).\nThe relationship between weight and length.\nThe relationship between the natural logs of weight and length.\nThe relationship between the natural logs of weight and length (without creating separate data frames for each year).\nThe difference in mean lengths between the two years (plot should include confidence intervals).\n\nRepeat the previous question but using Largemouth Bass.\nDescribe the species distribution of (only) non-game species.\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_Graphing_YPerchTL/index.html",
    "href": "teaching/posts/2019-3-8_Graphing_YPerchTL/index.html",
    "title": "Graphing",
    "section": "",
    "text": "Continuation\n\n\n\nThis exercise is a continuation of this data wrangling exercise and, thus, depends on data frames constructed there. Please load/run your script from that exercise to access the data frames required below.\n\n\n \n\nDescribe the following from plots constructed with the Yellow Perch captured in fyke nets in 2005 data frame.\n\nThe distribution of lengths.\nThe distribution of weights.\nThe relationship between weight and length.\nThe relationship between the natural logs of weight and length.\n\nDescribe the following from plots constructed with the Yellow Perch captured in the 1990s data frame.\n\nThe distribution of lengths separately for each gear (without using separate data frames for each gear).\nThe relationship between the natural logs of weight and length separately for each gear (without using separate data frames for each gear).\nThe difference in mean lengths among the gears (plot should include confidence intervals).\nDescribe the difference in numbers caught among the gears.\n\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_Mortality_LSKBLakeTrout/index.html",
    "href": "teaching/posts/2019-3-8_Mortality_LSKBLakeTrout/index.html",
    "title": "Mortality",
    "section": "",
    "text": "The population biology of Lake Superior Lake Trout (Salvelinus namaycush) prior to 1950 was examined in detail by Sakagawa and Pycha (1971). In Table 1 of their paper, they presented the number of Lake Trout by age (from scales) collected in 4.5-inch mesh gillnets that were set between the Keweenaw Peninsula and Munising, MI in 1948. The numbers of Lake Trout caught for ages 3 to 14 were 5, 18, 21, 10, 45, 109, 95, 63, 42, 25, 13, and 4. Use these data to answer the questions below.\n\nIs this an example of a cross-sectional or longitudinal catch curve?\nPlot log(catch) versus age. Which ages best represent the descending portion of the catch curve? Explain.\nUsing the unweighted regression method, find the following (with 95% confidence intervals):\n\nInstantaneous total mortality rate.\nAnnual total mortality rate.\nAnnual survival rate.\n\nRepeat the previous question using the weighted regression method.\nRepeat the previous question using the Chapman-Robson method.\nMathematically show how to convert the instantaneous mortality rate to an annual mortality rate.\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\nReferences\n\nSakagawa, G. T., and R. L. Pycha. 1971. Population biology of Lake Trout (Salvelinus namaycush) of Lake Superior before 1950. Journal of the Fisheries Research Board of Canada 28:65–71.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_Mortality_LSSRLakeTrout/index.html",
    "href": "teaching/posts/2019-3-8_Mortality_LSSRLakeTrout/index.html",
    "title": "Mortality",
    "section": "",
    "text": "Curtis (1990) examined the population dynamics related to the recovery of an offshore Lake Trout population near Stannard Rock, Lake Superior. As part of this study, mortality rates were estimated from the relative abundance of Lake Trout longer than 43.2 cm. Relative abundance was recorded as the catch-per-unit-effort (CPE) of each age group in each year expressed as the number of fish caught per 50,000 m of 114.3 mm mesh gillnet. The results are shown in the table below. [Note: (1) the values in the table have been rounded to integers; (2) values recorded as “tr” in the original paper were recorded as “0.5” in this table; and (3) the years of capture are not contiguous (there is a break between 1959 and 1963 and again between 1969 and 1973).]\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYear\n      VI\n     VII\n    VIII\n      IX\n       X\n      XI\n     XII\n    XIII\n     XIV\n\n\n\n\n1959\n64\n219\n241\n121\n33\n9\n1\n0.5\n1\n\n\n….\n.\n.\n.\n.\n.\n.\n.\n.\n.\n\n\n1963\n129\n339\n331\n192\n70\n16\n0.5\n0.5\n0.5\n\n\n1964\n149\n524\n515\n201\n63\n18\n2\n0.5\n0.5\n\n\n1965\n75\n379\n501\n328\n133\n39\n11\n1\n0.5\n\n\n1966\n149\n488\n459\n172\n64\n22\n5\n0.5\n0.5\n\n\n1967\n63\n368\n287\n130\n55\n19\n6\n0.5\n0.5\n\n\n1968\n50\n215\n259\n141\n55\n18\n5\n1\n0.5\n\n\n1969\n45\n150\n153\n76\n23\n6\n0.5\n0.5\n0.5\n\n\n….\n.\n.\n.\n.\n.\n.\n.\n.\n.\n\n\n1973\n101\n759\n1268\n1116\n491\n141\n40\n4\n0.5\n\n\n1974\n151\n733\n1114\n1092\n571\n163\n50\n9\n5\n\n\n1975\n109\n901\n1517\n1606\n1076\n342\n117\n12\n7\n\n\n1976\n53\n604\n1204\n1560\n1146\n396\n156\n18\n10\n\n\n1977\n157\n867\n1343\n1410\n1031\n417\n192\n17\n7\n\n\n1978\n89\n735\n1307\n1623\n1150\n445\n198\n18\n14\n\n\n1979\n29\n299\n718\n1268\n1195\n585\n300\n36\n14\n\n\n\n \nUse these results to answer the following questions.\n\nWhat year-class of fish is represented by the 339 age-VII fish caught in 1963?\nShow the data frame of catches and corresponding ages for the following groups of fish.\n\nFor fish captured in 1963.\nFor fish of the 1963 year-class.\nThe earliest year-class that is fully represented for ages IX through XII.\nThe latest year-class that is fully represented for ages IX through XII.\n\nFor each data frame created above, identify whether the data represent a cross-sectional or longitudinal catch curve.\nFor the third data frame created above (earliest year class).\n\nEstimate, with 95% confidence interval, the instantaneous total mortality rate using the catch-curve regression method for ages IX through XII.\nEstimate, with 95% confidence interval, the annual total mortality rate using the catch-curve regression method for ages IX through XII. Carefully interpret this result.\n\nRepeat the previous question for the last data frame created above (latest year class).\nDetermine if the instantaneous mortality rate is significantly different between the earliest and latest year-classes that are fully represented for ages IX through XII.\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\nReferences\n\nCurtis, G. L. 1990. Recovery of an Offshore Lake Trout (Salvelinus Namaycush) population in eastern Lake Superior. Journal of Great Lakes Research 16(2):279–287.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_MR_TanRiffleshell/index.html",
    "href": "teaching/posts/2019-3-8_MR_TanRiffleshell/index.html",
    "title": "Abundance from Mark-Recapture Data",
    "section": "",
    "text": "Rogers (1999) studied the endangered freshwater mussel Tan Riffleshell (Epioblasma florentina walkeri) in Indian Creek, Virginia. Part of the study included a detailed analysis of the population dynamics of mussels in a 100 m stretch of stream. In this stream, mussels were captured by teams of snorkelers on six occasions (June 1996; August 1996; June 1997; October 1998; May 1999; and June 1999). Mussels were tagged by attaching a numbered tag to the left valve of the mussel. The number of mussels captured, the number of marked mussels observed, and the number of tagged mussels returned to the population were recorded for each sample time. These data are in Riffleshell.1. Use these data to answer the following questions.1 See “CSV file” link in “Source” section of linked page.\n\nWhat is the only method that can be used to estimate abundance given the way these data were collected? Comment on the validity of the assumptions for this method for these data.\nRegardless of your thoughts on the validity of the assumptions, use your chosen method to estimate the number, with 95% confidence interval, of Tan Riffleshell mussels in the population at the beginning of the study. Carefully interpret the result.\n\n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\n\nReferences\n\nRogers, S. O. 1999, December. Population Biology of the Tan Riffleshell (Epioblasma florentina walkeri) and the Effects of Substratum and Light on Juvenile Propagation. Thesis, Virginia Tech.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_MR_UNSPRainbowTrout/index.html",
    "href": "teaching/posts/2019-3-8_MR_UNSPRainbowTrout/index.html",
    "title": "Abundance from Mark-Recapture Data",
    "section": "",
    "text": "Warren et al. (2004) examined the population of Rainbow Trout (Oncorhynchus mykiss) in the Upper Niagara Springs Pond in 2000. Fish were captured at two times by using an electrofishing unit attached to a driftboat. The capture history of all fish examined in the two samples that were 100 mm and longer is in RBTroutUNSP.1 Use these data to answer the following questions.1 See “CSV file” link in “Source” section of linked page.\n\nCreate a summary of the capture histories.\nFrom your capture history summary assign values to each of \\(M\\), \\(n\\), and \\(m\\).2\nConstruct an appropriate population estimate, with a 95% confidence interval, for Upper Niagara Springs Pond Rainbow Trout in 2000. Carefully interpret the results.\nWhich method did you use to construct the confidence interval? Explain why you chose that method.\n\n2 Symbols are as used in Ogle (2016).\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\n\nReferences\n\nOgle, D. H. 2016. Introductory Fisheries Analyses with R. CRC Press, Boca Raton, FL.\n\n\nWarren, C. D., K. A. Frank, and F. E. Partridge. 2004. Regional fisheries management investigations - Magic Valley region. Completion {Report}, Idaho Department of Fish; Game.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_MR_URBrownTrout/index.html",
    "href": "teaching/posts/2019-3-8_MR_URBrownTrout/index.html",
    "title": "Abundance from Mark-Recapture Data",
    "section": "",
    "text": "Young and Hayes (2001) described a study where Brown Trout (Salmo trutta) in several rivers were captured by experienced fly fishers, tagged at the base of the dorsal fin with a colored dart tag, and then observed by divers drifting through the sample area two days later. In the Ugly River, 43 trout were marked, 123 fish were observed by the divers, and 16 fish observed by the divers were tagged.\n\nAssign one of these symbols (\\(N\\), \\(M\\), \\(n\\), \\(m\\)) to each of the numerical results from this study.1\nConstruct a population estimate, with 95% confidence interval, for the Brown Trout in this section of the Ugly River. Carefully interpret the results.\nWhich method did you use to construct the confidence interval? Explain why you chose that method.\n\n1 Symbols are as used in Ogle (2016).\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\n\nReferences\n\nOgle, D. H. 2016. Introductory Fisheries Analyses with R. CRC Press, Boca Raton, FL.\n\n\nYoung, R. G., and J. W. Hayes. 2001. Assessing the accuracy of drift‐dive estimates of brown trout ( Salmo trutta ) abundance in two New Zealand rivers: A mark‐resighting study. New Zealand Journal of Marine and Freshwater Research 35(2):269–275.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_MR_WIYOYWalleye/index.html",
    "href": "teaching/posts/2019-3-8_MR_WIYOYWalleye/index.html",
    "title": "Abundance from Mark-Recapture Data",
    "section": "",
    "text": "Mraz (1968) examined the population dynamics of young-of-the-year (YOY) walleye (Sander vitreus) in Pine Lake, an inland lake in Wisconsin. In fall 1962, YOY walleye were captured, marked, and returned to the lake on five sampling dates. On each date, the number of fish caught, the number of caught fish that were previously marked, and the number of marked fish returned to the lake were recorded. The results from these sampling efforts are shown in the table below.\n\n\n\n\n \n  \n    Sample \n    Caught \n    Recaptured \n    Returned \n  \n \n\n  \n    1 \n    321 \n    -- \n    321 \n  \n  \n    2 \n    412 \n    45 \n    412 \n  \n  \n    3 \n    178 \n    55 \n    178 \n  \n  \n    4 \n    415 \n    93 \n    415 \n  \n  \n    5 \n    367 \n    113 \n    -- \n  \n\n\n\n\n\nUse these results to answer the following questions.\n\nEstimate the initial population size, with 95% confidence interval, of YOY Walleye in Pine Lake. Carefully interpret the result.\nComment on the validity of the assumptions for the model you used to estimate the size of the population.\n\n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\nReferences\n\nMraz, D. 1968. Recruitment, growth, exploitation and management of walleyes in a southeastern Wisconsin lake. Technical {Bulletin}, Wisconsin Department of Natural Resources, Madison, WI.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_SizeStrux_YPerchTL/index.html",
    "href": "teaching/posts/2019-3-8_SizeStrux_YPerchTL/index.html",
    "title": "Size Structure",
    "section": "",
    "text": "Continuation\n\n\n\nThis exercise is a continuation of this data wrangling exercise and, thus, depends on data frames constructed there. Please load/run your script from that exercise to access the data frame of Yellow Perch captured in beach seines and fyke nets in 2000.\n\n\n\nDescribe the distribution of lengths for Yellow Perch captured in fyke nets in 2000 using both a histogram and frequency table with 10 mm length categories.\nRepeat the previous question with Yellow Perch captured with beach seines.\nStatistically compare the length frequency distributions between Yellow Perch captured with a beach seine and in fyke nets in 2000.\nWrite a short paragraph describing what you learned about the size structure of Trout Lake Yellow Perch, with specific comments about the two gears examined.\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_WLBluegill_Inch/index.html",
    "href": "teaching/posts/2019-3-8_WLBluegill_Inch/index.html",
    "title": "Weight-Length Relationship",
    "section": "",
    "text": "Continuation\n\n\n\nThis exercise is a continuation of this data wrangling exercise and, thus, depends on data frames constructed there. Please load/run your script from that exercise to access the Bluegill only data frames.\n\n\n \n\nBasic Analysis I\n\nConstruct graphs appropriate to answer the following questions.1\n\nDescribe the relationship between weight and length (in mm here and throughout).\nDescribe the relationship between log-transformed weight and length.\n\nFrom the plots above there is a clear minimum length for which the weights were precisely obtained. What is that length? [Reduce the data frame to fish greater than this minimum length for the questions below.]\nCompute the weight-length relationship with an appropriate linear regression.\n\nPlot the results (data and the fitted relationship) on both the transformed and raw scales.2 Comment on the fit.\nConstruct a residual plot.3 Comment.\nExpress your results as an equation on the transformed scale.\nExpress your results as an equation on the raw scale.\nCarefully interpret the meaning of the slope of the weight-length relationship.\nIs there statistical evidence for isometric or allometric growth?\n\n\n1 If you completed this graphing exercise then you created the necessary graphs there.2 This post may be useful.3 This post may be useful. \n\n\nBasic Analysis II\n\nRecompute the weight-length relationship using the original length in inches. How do the slope and y-intercept from this model compare to the results from the previous question?\n\n \n\n\nExtended Analysis\n\nConstruct a plot that allows you to qualitatively assess if the weight-length (in mm here and throughout) relationship differs between the two years.\nFit a model that allows you to determine if there is a statistically significant difference in the weight-length relationship between the two years.\n\nConstruct a residual plot for this model.4 Comment.\nIs there a statistically significant difference in the weight-length relationship between the two years? Provide evidence for your findings and be very specific with your conclusions.\nWithout fitting separate regressions for the two sample years, express the weight-length relationships on the raw scale for both years (i.e., write two specific equations).\nConstruct a plot that illustrates your findings.5\n\n\n4 This post may be useful.5 This post may be useful. \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_WLLMB_Inch/index.html",
    "href": "teaching/posts/2019-3-8_WLLMB_Inch/index.html",
    "title": "Weight-Length Relationship",
    "section": "",
    "text": "Continuation\n\n\n\nThis exercise is a continuation of this data wrangling exercise and, thus, depends on data frames constructed there. Please load/run your script from that exercise to access the Largemouth Bass only data frame.\n\n\n \n\nBasic Analysis\n\nConstruct graphs appropriate to answer the following questions.1\n\nDescribe the relationship between weight and length (in mm here and throughout).\nDescribe the relationship between log-transformed weight and length.\n\nFrom the plots above there is a clear minimum length for which the weights were precisely obtained. What is that length? [Reduce the data frame to fish greater than this minimum length for the questions below.]\nCompute the weight-length relationship with an appropriate linear regression.\n\nPlot the results (data and the fitted relationship) on both the transformed and raw scales.2 Comment on the fit.\nConstruct a residual plot.3 Comment.\nExpress your results as an equation on the transformed scale.\nExpress your results as an equation on the raw scale.\nCarefully interpret the meaning of the slope of the weight-length relationship.\nIs there statistical evidence for isometric or allometric growth?\n\n\n1 If you completed this graphing exercise then you created the necessary graphs there.2 This post may be useful.3 This post may be useful. \n\n\nExtension\n\nRecompute the weight-length relationship using the original length in inches. How do the slope and y-intercept from this model compare to the results from the previous question?\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_WL_YPerchTL/index.html",
    "href": "teaching/posts/2019-3-8_WL_YPerchTL/index.html",
    "title": "Weight-Length Relationship",
    "section": "",
    "text": "Continuation\n\n\n\nThis exercise is a continuation of this data wrangling exercise and, thus, depends on data frames constructed there. Please load/run your script from that exercise to access the Yellow Perch captured in the 1990s data frame.\n\n\n \n\nBasic Analysis I\n\nConstruct graphs appropriate to answer the following questions.1\n\nDescribe the relationship between weight and length (in mm here and throughout).\nDescribe the relationship between log-transformed weight and length.\n\nFrom the plots above there is a clear minimum length for which the weights were precisely obtained. What is that length? [Reduce the data frame to fish greater than this minimum length for the questions below. You should also remove all fish for which a weight was not recorded.]2\nCompute the weight-length relationship with an appropriate linear regression.\n\nPlot the results (data and the fitted relationship) on both the transformed and raw scales.3 Comment on the fit.\nConstruct a residual plot.4 Comment.\nExpress your results as an equation on the transformed scale.\nExpress your results as an equation on the raw scale.\nCarefully interpret the meaning of the slope of the weight-length relationship.\nIs there statistical evidence for isometric or allometric growth?\n\n\n1 If you completed this graphing exercise then you created the necessary graphs there.2 There are several outliers in this data that should be corrected or removed. For simplicity, leave them in the data for this exercise.3 This post may be useful.4 This post may be useful. \n\n\nBasic Analysis II\n\nRecompute the weight-length relationship using the original length in inches. How do the slope and y-intercept from this model compare to the results from the previous question?\n\n \n\n\nExtended Analysis\n\nConstruct a plot that allows you to qualitatively assess if the weight-length (in mm here and throughout) relationship differs between the three gears.\nFit a model that allows you to determine if there is a statistically significant difference in the weight-length relationship between the three gears.\n\nConstruct a residual plot for this model.5 Comment.\nIs there a statistically significant difference in the weight-length relationship between the three gears? Provide evidence for your findings and be very specific with your conclusions.\nWithout fitting separate regressions for the three gears express the weight-length relationships on the raw scale for all gears (i.e., write three specific equations).\nConstruct a plot that illustrates your findings.6\n\n\n5 This post may be useful.6 This post may be useful. \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_Wrangling_Inch/index.html",
    "href": "teaching/posts/2019-3-8_Wrangling_Inch/index.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Inch Lake is a 12.5 ha inland lake in northern Wisconsin that has been managed as catch-and-release for all species since 2006. Researchers at Northland College have monitored fish populations in Inch Lake since 2007. The total lengths (inches) and weights (g) for subsamples of several species of fish collected from Inch Lake in May of 2007 and 2008 are recorded in InchLake2.1 Use these data to answer the following questions.1 See “CSV file” link in “Source” section of linked page.\n\nCreate a new variable that contains lengths in millimeters.\nRemove the netID and fishID variables.\nCreate a new data frame of just Bluegill.\nCreate a new data frame of just Largemouth Bass.\nCreate a new data frame of non-game species (Bluntnose Minnow, Fathead Minnow, Iowa Darter, and Tadpole Madtom).\nFor the non-game species data frame …\n\nSort by species.\nSort by length within species within year.\n\nFor both the Bluegill and Largemouth Bass only data frames …\n\nChange the names of the weight variable to wt and the length in millimeters variable to tl (if you did not call it that above).\nCreate two new variables that are the common logarithms of the lengths (in mm) and weights.\nAdd appropriate five-cell Gabelhouse length categories.\n\n\n\n\n\n\n\n\nSave Your Script\n\n\n\nThe data frames created here will be used in this graphing, this weight-length relationhip, and this condition exercises.\n\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_Wrangling_YPerchTL/index.html",
    "href": "teaching/posts/2019-3-8_Wrangling_YPerchTL/index.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Researchers for the North Temperate Lakes Long-Term Ecological Research program have collected fish from a number of lakes in Wisconsin since 1981. The total lengths and weights of Yellow Perch (Perca flavescens) captured from Trout Lake from 1981-2006 are recorded in YPerchTL.1 Use these data to answer the following questions.1 See “CSV file” link in “Source” section of linked page.\n\nRemove the lakeid and spname variables from the data frame as these variables are constant for all records.\nRemove all records for which the gearid is “CRAYTR”, “FYKNED”, “FYKNEL”, “MINNOW”, “TRAMML”, or any of “VGN0XX”, as very few Yellow Perch were captured in these gears.2 [Use this data frame for the remaining questions.]\nCreate a new data frame of Yellow Perch captured in just fyke nets.\nCreate a new data frame of Yellow Perch captured in fyke nets and beach seines.\nCreate a new data frame of Yellow Perch captured in 1998.\nCreate a new data frame of Yellow Perch captured after 1999.\nCreate a new data frame of Yellow Perch captured in the 1990s.\nCreate a new data frame of Yellow Perch captured with only fyke nets in 2005.\nCreate a new data frame of Yellow Perch captured with only beach seines and fyke nets in 2000.\nMake the following changes to the data frame of Yellow Perch captured in fyke nets and beach seines in 2000.\n\nChange the name of the length and weight variables to tl and wt, respectively.\nCreate a new variable that is the total length in inches.\nCreate two new variables that are the common logarithms of the lengths (in mm) and weights.\nAdd a variable that contains 10 mm wide length categories.\nAdd a variable that contains the appropriate five-cell Gabelhouse length categories.\nSort the data by total length within capture year.\n\n\n2 It may be eaiser to look at the list of gearid values and keep the ones that are not listed here.\n\n\n\n\n\nSave Your Script\n\n\n\nSome of these data frames will be used in this graphing, this size structure, and this weight-length relationhip exercises.\n\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2022-12-19_AgeComp_WalleyePS/index.html",
    "href": "teaching/posts/2022-12-19_AgeComp_WalleyePS/index.html",
    "title": "Age Comparisons",
    "section": "",
    "text": "Kocovsky and Carline (2000) examined methods to estimate the age of the unexploited population of Walleye in Pymatuning Sanctuary (PA). Scales, dorsal spines, and otoliths were extracted from fish sampled in trap nets during the spawning run in March and April of 1997. Two readers independently examined each structure without knowledge of fish length or sex. Only consensus ages for each structure are recorded in WalleyePS.11 See “CSV file” link in “Source” section of linked page.\n\nDescribe any apparent bias (or not) between age estimates from scales and otoliths from tabular, graphical, and statistical summaries.\nDoes the sex of the fish impact your descriptions of bias (or not) between scales and otoliths?\nRepeat the previous two questions for dorsal spines and otoliths.\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\n\nReferences\n\nKocovsky, P. M., and R. F. Carline. 2000. A comparison of methods for estimating ages of unexploited Walleyes. North American Journal of Fisheries Management 20:1044–1048.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2022-12-19_SizeStrux_YPerchSB1/index.html",
    "href": "teaching/posts/2022-12-19_SizeStrux_YPerchSB1/index.html",
    "title": "Size Structure",
    "section": "",
    "text": "Diana and Salz (1990) examined the growth and maturity of Yellow Perch captured from multiple sites at two locations (inner and outer) within Saginaw Bay, Lake Huron (MI) from 1983-1985. The primary goal of this research was to determine if the growth and maturation of Yellow Perch showed evidence of stunting. The total lengths and location of capture for this study are in YPerchSB1.1. Use these data to answer the following questions.1 See “CSV file” link in “Source” section of linked page.\n\nIsolate Yellow Perch captured from the inner portion of Saginaw Bay.\n\nDescribe the distribution of these fish using both a histogram and frequency table.2\nCompute and interpret the PSD-Q value (with 95% confidence interval).\nCompute and interpret the PSD-P value (with 95% confidence interval).\n\nIsolate Yellow Perch captured from the outer portion of Saginaw Bay.\n\nDescribe the distribution of these fish using both a histogram and frequency table.\nCompute and interpret the PSD-Q value (with 95% confidence interval).\nCompute and interpret the PSD-P value (with 95% confidence interval).\n\nStatistically compare the following metrics between Yellow Perch captured in the the inner and outer portions of Saginaw Bay.\n\nLength frequency distribution.\nDistributions into the five-cell Gabelhouse length categories.\nPSD-Q.\nPSD-P.\n\nWrite a short paragraph describing what you learned about the size structure of Saginaw Bay Yellow Perch, with specific comments about differences (if any) between the inner and outer locations.\n\n2 Choose an appropriate/reasonable bin/category width. \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\n\nReferences\n\nDiana, J. S., and R. Salz. 1990. Energy storage, growth, and maturation of Yellow Perch from different locations in Saginaw Bay, Michigan. Transactions of the American Fisheries Society 119:976–984.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2022-12-19_Using_fishR_Data/index.html",
    "href": "teaching/posts/2022-12-19_Using_fishR_Data/index.html",
    "title": "Using fishR Data with Students",
    "section": "",
    "text": "Note\n\n\n\nNo special packages are loaded for use in this post.\n\n\n \n\nIntroduction\nA large number and variety of data sets are provided in the FSA and FSAdata packages, which I collectively call here the “fishR data.” Lists of the data available in these packages are available alphabetically ordered or arranged by fisheries topic.1 Items on those lists are linked to a documentation file where the origin of the data, its variables, and other items are described. This is a rich source of open-source data that can be used for teaching purposes.1 A more comprehensive list of fisheries data in all CRAN packages is here.\nData sets in FSA and FSAdata can be, as with data in all packages, accessed with data() by including the name of the data as the first argument and the package name in package=. For example, the WalleyeErie2 data from FSAdata are loaded below.\n\ndata(WalleyeErie2,package=\"FSAdata\")\nhead(WalleyeErie2)\n\n#R|      setID loc grid year  tl   w  sex    mat age\n#R|  1 2003001   1  940 2003 360 460 male mature   2\n#R|  2 2003001   1  940 2003 371 571 male mature   2\n#R|  3 2003001   1  940 2003 375 507 male mature   2\n#R|  4 2003001   1  940 2003 375 584 male mature   2\n#R|  5 2003001   1  940 2003 375 537 male mature   2\n#R|  6 2003001   1  940 2003 376 553 male mature   2\n\n\n \nWhile this method for accessing these data is efficient, I don’t like to use it with students because in the “real world” they will not be accessing data from an R package, rather they will be using their own data stored in some other format. With students just learning R I usually have them load CSV files that I either provide for them or they produce themselves.2 They then load the data with read.csv() from base R.32 We also discuss the advantages of CSV files – lightweight, not proprietary, etc.3 For more advanced students I will use read_csv() from readr.\n \n\n\nUsing CSV Files\nTo aid use of the fishR data as CSV files we have provided links to the raw CSV files in the R documentation,4 in the on-line documentation, or in the PDF documentation on CRAN. In all instances you will see a highlighted “CSV file” link at the end of the description in the “source” section of documentation (Figure 1). Pressing this link will bring up the raw CSV file which can then be saved to your personal computer.54 For example, (e.g., try ?FSAdata::WalleyeErie2.5 Alternatively, right-click on the CSV link to save the file.\n\n\n\n\n\nFigure 1: Partial view of the online documentation for WalleyeErie2 data set in FSAdata showing the “CSV file” link.\n\n\n\n\n \nStudents can link directly to URL for the CSV file but this requires a connection to the internet (each time the data is loaded) and does not help students learn how to organize data on their own computers.\n\nWalleyeErie2 <- read.csv(\"https://raw.githubusercontent.com/fishR-Core-Team/FSAdata/main/data-raw/WalleyeErie2.csv\")\nhead(WalleyeErie2)\n\n#R|      setID loc grid year  tl   w  sex    mat age\n#R|  1 2003001   1  940 2003 360 460 male mature   2\n#R|  2 2003001   1  940 2003 371 571 male mature   2\n#R|  3 2003001   1  940 2003 375 507 male mature   2\n#R|  4 2003001   1  940 2003 375 584 male mature   2\n#R|  5 2003001   1  940 2003 375 537 male mature   2\n#R|  6 2003001   1  940 2003 376 553 male mature   2\n\n\nHowever, this last example also demonstrates how an instructor could link directly to the CSV file in the resources they provide the student.\n \n\n\nConclusion\nIn summary, we hope you will take advantage of the data resources provided in the FSA and FSAdata packages. However, we encourage you not to have students access the data through data() but instead to use the CSV files linked to in the documentation as described above.\n \n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2022-12-20_SizeStrux_Whittlesey/index.html",
    "href": "teaching/posts/2022-12-20_SizeStrux_Whittlesey/index.html",
    "title": "Size Structure of Species in a Cold-Water Wisconsin Stream",
    "section": "",
    "text": "Fish length is likely most commonly collected data by fisheries biologists and managers. While length is usually not the only information collected by a fisheries biologist, summaries of length information can provide the biologist with a wealth of information on population parameters such as age distributions, growth rates, and mortality rates; the basic biology of the animal; and the effect of management regulations on the fish population. Thus, summarizing length data and then interpreting those summaries is an important task performed by fisheries biologists.\n\n\n\n\n\nMeasuring length of a Rainbow Trout.\n\n\n\n\n \n\n\n\nWhittlesey Creek is a tributary to Chequamegon Bay of Lake Superior. This stream has been severely degraded by past land use practices including clear-cut logging and channelization to drain wetlands for farming. The “Coaster” Brook Trout (Salvelinus fontinalis), a lake-dwelling stream-spawning form of Brook Trout, was largely extirpated from southern Lake Superior and the Whittlesey Creek watershed due to over-fishing and habitat degradation. In 1999, the U.S., Fish and Wildlife Service established the Whittlesey Creek National Wildlife Refuge with a primary goal of reestablishing a population of Coaster Brook Trout in Whittlesey Creek. That effort has included experimental introductions of Brook Trout at various life stages and much work to restore habitat.\nIn July, 2011 a quarter-mile stretch of the lower Whittlesey Creek was modified with the addition of large woody debris with attached “root balls.” The goal of this project was to alter the morphology of this section of the stream to provide better habitat and water conditions for Brook Trout. In May, 2011 a group of students conducted two days of sampling with electrofishing gear to provide baseline information about the fish populations in this section of the stream. Their sampling yielded eight total Brook Trout but relatively larger numbers of Coho Salmon (Oncorhynchus kisutch), Rainbow Trout (Oncorhynchus mykiss), and sculpins (primarily Slimy Sculpin (Cottus cognatus), but some Mottled Sculpin (Cottus bairdii)). Data from catches of Coho Salmon, Rainbow Trout, and sculpins will be analyzed in this case study.\n\n\n\n\n\nStudents backpack electrofishing a stream.\n\n\n\n\n \n\n\n\nData from the sampling collected by the students were stored in Whittlesey2011.csv. The variables in this data set are defined as follows:\n\nstudy: The name of the study.\nnetID: A unique label for each day of sampling.\nsDate: The date of sampling.\nrun: A factor indicating if the sample was the marking or recapture run.\nspecies: A factor indicating the species captured. Options are Species1, Species2, or Species3. This variable will be discussed in more detail later.\nlength: The total length of the sampled fish to the nearest mm.\nclipped: Indicates if the fish was clipped (=1) or not. All fish in the recapture run were not clipped.\nrecap: Indicates if the fish was previously clipped (i.e., a “recapture”; =1) or not. All fish in the marking run could not possibly be a recaptured fish.\nnotes: Any specific notes about that particular fish."
  },
  {
    "objectID": "teaching/posts/2022-12-21_SizeStrux_BGLouise/index.html",
    "href": "teaching/posts/2022-12-21_SizeStrux_BGLouise/index.html",
    "title": "Size Structure of Bluegills Collected with Different Gears",
    "section": "",
    "text": "Original Source:\n\n\n\nThis case was modified from Case 16 by Dr. David Willis from Case Studies in Fisheries Conservation & Management: Applied Critical Thinking & Problem Solving. Much of the text is exactly as it appeared in the original chapter, though slightly rearranged. I also added the R analysis portion"
  },
  {
    "objectID": "teaching/posts/2022-12-21_SizeStrux_BGLouise/index.html#motivation",
    "href": "teaching/posts/2022-12-21_SizeStrux_BGLouise/index.html#motivation",
    "title": "Size Structure of Bluegills Collected with Different Gears",
    "section": "Motivation",
    "text": "Motivation\nStudents (and biologists for that matter!) have a tendency to accept sampling data at face value. If a gear type primarily collects small fish then they assume the population is dominated by small fish. If a gear type captures big fish and lots of them then they assume that the population is dominated by large fish. In reality, many biases are possible and are actually very common. To truly understand sampling data, biologists must first understand the biases associated with each gear, and only then will the true nature of the population’s structure (e.g., size or age structure) and dynamics (i.e., recruitment, growth, and mortality) be revealed.\nVarious sampling gears may be differentially effective for different species, and even differentially effective for different sizes of the same species. For example, Largemouth Bass are commonly sampled with electrofishing gear. The numbers and sizes of Largemouth Bass collected can vary widely across seasons. During the spring and fall, more and larger Largemouth Bass tend to be nearshore and vulnerable to the electrofishing gear, which is used in that shallow-water habitat. During midsummer, fewer Largemouth Bass would be sampled at the same locations because many of the larger bass will have moved offshore to deeper water as a result of the warm summer water temperatures.\nIn this case study, you will explore the differential size structure of Bluegills captured by two common sampling gears – electrofishing and trap nets (also known as modified fyke nets).\n\n\n\n\n\nStudents lifting a trap (modified fyke) net."
  },
  {
    "objectID": "teaching/posts/2022-12-21_SizeStrux_BGLouise/index.html#data",
    "href": "teaching/posts/2022-12-21_SizeStrux_BGLouise/index.html#data",
    "title": "Size Structure of Bluegills Collected with Different Gears",
    "section": "Data",
    "text": "Data\nLake Louise is a 45-ha impoundment located in Hand County, South Dakota. The maximum depth is 6.5 m with a mean depth of 2.7 m. Fish were sampled with trap nets that had 1.2- X 1.5-m frames, dual throats, and 19-mm bar mesh. Night electrofishing was undertaken with pulsed DC electricity at approximately 250 V and 8 A. Samples were collected in late May at a water temperature of 23oC.\nTotal length of each Bluegill was recorded for fish captured in both gears in LakeLouiseBG.csv. The variables in this data frame are defined as follows,\n\nlen: The total length (mm) of the sampled fish.\ngear: The gear used to capture the fish. Choices are A and B (described later)."
  },
  {
    "objectID": "teaching/posts/2022-12-22_BagLimits_MN/index.html",
    "href": "teaching/posts/2022-12-22_BagLimits_MN/index.html",
    "title": "Bag Limits in Minnesota",
    "section": "",
    "text": "Daily bag or creel limits are the maximum number of fish an angler is allowed to harvest on a daily basis. For example, a bag limit of six Walleye would limit an angler to six or fewer harvested Walleye on a given day. Bag limits are a common management tool in many fisheries, especially in inland freshwater fisheries.\nRestrictive bag limits may be implemented for a variety of reasons. Most commonly it is thought that limiting the maximum number of fish an angler can harvest will reduce harvest, lower fishing mortality, and prevent over-exploitation of the fish population. However, bag limits have also been implemented to attempt to equitably distribute harvest among more anglers, provide anglers the satisfaction of reaching a goal (e.g., “I got my limit”), and to remind anglers that fish populations are a finite resource.\n\n\n\n\n\nAn angler’s harvest of Bluegill.\n\n\n\n\nIn this exercise, you will examine creel data (i.e., number of fish harvested by anglers) to determine how reducing the daily bag limit effects overall fish harvest.\n\n\n\nThe Minnesota Department of Natural Resources (MnDNR) conducted statewide creel surveys over a 17 year period (Cook et al. 2001). The data, available in CreelMN1 records the species and number of fish harvested per angler (in one day). The data are limited to only six species2 – Walleye (WAE), Largemouth Bass (LMB), Northern Pike (NOP), Crappies (Black, White, and hybrids combined), Sunfish (Bluegill, Pumpkinseed, etc.), and Yellow Perch (YEP).1 See “CSV file” link in “Source” section of linked page.2 Acronyms are how the species appear in the data.\nThe following daily bag limits were in place during the study:\n\n6 Walleye\n6 Largemouth Bass\n3 Northern Pike\n15 Crappies\n30 Sunfish\n100 Yellow Perch"
  },
  {
    "objectID": "teaching/posts/2022-12-23_Depletion_Ruffe/index.html",
    "href": "teaching/posts/2022-12-23_Depletion_Ruffe/index.html",
    "title": "Abundance from Depletion Data",
    "section": "",
    "text": "Czypinski and Ogle (2011) performed an experiment to determine if a population of invasive Ruffe (Gymnocephalus cernuus) could be significantly reduced by sequential removal of Ruffe with bottom trawls. The following catches of Ruffe were made at the Kakagon River location with the corresponding minutes of trawling effort.\nSample    1    2    3    4    5    6    7    8    9   10\n--------------------------------------------------------\nCatch   282  346   27    4    9   27    4    0    1    0\nEffort 19.0 30.0 31.0 20.0 29.5 42.5 34.5 36.0 27.0 25.0 \n \n\nEnter the catch and effort data into separate R vectors and create a vector that represents CPE in each sampling period. Carefully interpret the meaning of the first value in the CPE vector.\nWhat is the best estimate and 95% confidence interval for the initial population size?1\nWhat is the best estimate and 95% confidence interval for the catchability coefficient? Very carefully interpret what this estimate means relative to the capture of Ruffe at this site.\n\n1 Note that Czypinski and Ogle (2011) used the Ricker modified formula. \n\nSuppose that 5 minutes of trawling was considered to be one unit of effort. Convert the effort vector accordingly and calculate a new CPE vector. Carefully interpret the meaning of the first value in the CPE vector.\nWhat is the best estimate and 95% confidence interval for the initial population size? How does this estimate compare to the same estimate from using the original effort data? What does this mean?\nWhat is the best estimate and 95% confidence interval for the catchability coefficient? How does this compare to the same estimate from using the original effort data? What does this mean?\n\n \n\nWhat is the best estimate for the percentage of the Ruffe population that was removed in all trawling efforts at this site?\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\n\nReferences\n\nCzypinski, G. D., and D. H. Ogle. 2011. Evaluating the physical removal of Ruffe (Gymnocephalus cernuus) with bottom trawling. Journal of Freshwater Ecology 26:441–443.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2022-12-23_MR_SeaLamprey/index.html",
    "href": "teaching/posts/2022-12-23_MR_SeaLamprey/index.html",
    "title": "Abundance from Mark-Recapture Data",
    "section": "",
    "text": "Bergstedt et al. (2003) used the Petersen (with the Chapman modification) mark-recapture method to estimate the population size of parasitic Sea Lamprey (Petromyzon marinus) in Lake Huron. Use their results1 from “Pre” period and the 1991 parasitic feeding year in Table 3 (use the M, C, and R rows) to confirm the population estimate (in the first row of the table) and, hopefully, the confidence interval (in the second and third rows of the table). Show your work and write a formal statement about how your results compare to those in the paper.1 Follow link in citation below.\n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\n\nReferences\n\nBergstedt, R. A., R. B. McDonald, M. B. Twohey, K. M. Mullett, R. J. Young, and J. W. Heinrich. 2003. Reduction in Sea Lamprey hatching success due to release of sterilized males. Journal of Great Lakes Research 29:435–444.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2022-12-23_Removal_Crayfish/index.html",
    "href": "teaching/posts/2022-12-23_Removal_Crayfish/index.html",
    "title": "Abundance from Removal Data",
    "section": "",
    "text": "Chadwick et al. (2021) examined a novel method to determine the abundance of Signal Crayfish (Pacifastacus leniusculus) in an isolated portion of a stream. At one experimental location their novel method resulted in the removal of 1477, 133, and 46 crayfish in three successive samplings. Use these data to answer the following questions.\n\nWhat is the best estimate and 95% confidence interval for the population size?\nWhat is the best estimate and 95% confidence interval for the probability of capture for each sampling period.\nIs there evidence that the probability of capture differed after the first pass?\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\nReferences\n\nChadwick, D. D. A., E. G. Pritchard, P. Bradley, C. D. Sayer, M. A. Chadwick, L. J. B. Eagle, and J. C. Axmacher. 2021. A novel “triple drawdown” method highlights deficiencies in invasive alien crayfish survey and control techniques. Journal of Applied Ecology 58:316–326.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2022-12-23_Removal_EBullhead/index.html",
    "href": "teaching/posts/2022-12-23_Removal_EBullhead/index.html",
    "title": "Abundance from Depletion Data",
    "section": "",
    "text": "Pritchard et al. (2021) used three methods to determine the abundance of benthic European Bullhead (Cottus gobio) in a stony headwater stream in Northern Yorkshire, England. In one part of their study they set block nets at the up- and down-stream ends of a site called “Footbridge.” The researchers then used a backpack electrofishing unit deployed from the lower to the upper limit of the site to capture and remove all Bullheads from the site (the removed fish were placed downstream below the lower block net). After a short break, this process was repeated two more times. A total of 138, 55, and 48 Bullheads were removed on the successive electrofishing passes. Use this information to answer the questions below.\n\nWhat is the best estimate and 95% confidence interval for the population size? How does your estimate compare to the estimate published in Pritchard et al. (2021)?\nWhat is the best estimate and 95% confidence interval for the probability of capture during each electrofishing pass.\nPritchard et al. (2021) estimated a “capture efficiency.” Use your results to show and then describe what they mean by this.\nIs there evidence that the probability of capture differed after the first pass?\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\nReferences\n\nPritchard, E. G., D. D. A. Chadwick, M. A. Chadwick, P. Bradley, C. D. Sayer, and J. C. Axmacher. 2021. Assessing methods to improve benthic fish sampling in a stony headwater stream. Ecological Solutions and Evidence 2(4):e12111.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/resources/Crappiesum.html",
    "href": "teaching/resources/Crappiesum.html",
    "title": "Crappie Harvest Summaries",
    "section": "",
    "text": "Table 1:  Frequency, percent, and reverse cumulative sum of percent of anglers by number of Crappie harvested. \n \n  \n    Harvested \n    Frequency \n    % \n    Reverse Cum % \n  \n \n\n  \n    0 \n    813 \n    58.4% \n    100.0% \n  \n  \n    1 \n    213 \n    15.3% \n    41.6% \n  \n  \n    2 \n    58 \n    4.2% \n    26.3% \n  \n  \n    3 \n    88 \n    6.3% \n    22.1% \n  \n  \n    4 \n    58 \n    4.2% \n    15.8% \n  \n  \n    5 \n    33 \n    2.4% \n    11.6% \n  \n  \n    6 \n    22 \n    1.6% \n    9.3% \n  \n  \n    7 \n    26 \n    1.9% \n    7.7% \n  \n  \n    8 \n    10 \n    0.7% \n    5.8% \n  \n  \n    9 \n    8 \n    0.6% \n    5.1% \n  \n  \n    10 \n    10 \n    0.7% \n    4.5% \n  \n  \n    11 \n    33 \n    2.4% \n    3.8% \n  \n  \n    12 \n    3 \n    0.2% \n    1.4% \n  \n  \n    14 \n    11 \n    0.8% \n    1.2% \n  \n  \n    15 \n    6 \n    0.4% \n    0.4% \n  \n\n\n\n\n\n\n \n\n\n\n\n\nFigure 1: Percentage (left) and reverse cumulative percentage (right) of anglers by number of Crappie harvested."
  },
  {
    "objectID": "teaching/resources/LMBsum.html",
    "href": "teaching/resources/LMBsum.html",
    "title": "Largemouth Bass Harvest Summaries",
    "section": "",
    "text": "Table 1:  Frequency, percent, and reverse cumulative sum of percent of anglers by number of Largemouth Bass harvested. \n \n  \n    Harvested \n    Frequency \n    % \n    Reverse Cum % \n  \n \n\n  \n    0 \n    860 \n    75.0% \n    100.0% \n  \n  \n    1 \n    210 \n    18.3% \n    25.0% \n  \n  \n    2 \n    58 \n    5.1% \n    6.6% \n  \n  \n    3 \n    5 \n    0.4% \n    1.6% \n  \n  \n    4 \n    7 \n    0.6% \n    1.1% \n  \n  \n    5 \n    3 \n    0.3% \n    0.5% \n  \n  \n    6 \n    3 \n    0.3% \n    0.3% \n  \n\n\n\n\n\n\n \n\n\n\n\n\nFigure 1: Percentage (left) and reverse cumulative percentage (right) of anglers by number of Largemouth Bass harvested."
  },
  {
    "objectID": "teaching/resources/NOPsum.html",
    "href": "teaching/resources/NOPsum.html",
    "title": "Northern Pike Harvest Summaries",
    "section": "",
    "text": "Table 1:  Frequency, percent, and reverse cumulative sum of percent of anglers by number of Northern Pike harvested. \n \n  \n    Harvested \n    Frequency \n    % \n    Reverse Cum % \n  \n \n\n  \n    0 \n    1166 \n    66.2% \n    100.0% \n  \n  \n    1 \n    463 \n    26.3% \n    33.8% \n  \n  \n    2 \n    62 \n    3.5% \n    7.5% \n  \n  \n    3 \n    70 \n    4.0% \n    4.0% \n  \n\n\n\n\n\n\n \n\n\n\n\n\nFigure 1: Percentage (left) and reverse cumulative percentage (right) of anglers by number of Northern Pike harvested."
  },
  {
    "objectID": "teaching/resources/Sunfishsum.html",
    "href": "teaching/resources/Sunfishsum.html",
    "title": "Sunfish Harvest Summaries",
    "section": "",
    "text": "Table 1:  Frequency, percent, and reverse cumulative sum of percent of anglers by number of Sunfish harvested. \n \n  \n    Harvested \n    Frequency \n    % \n    Reverse Cum % \n  \n \n\n  \n    0 \n    771 \n    38.9% \n    100.0% \n  \n  \n    3 \n    451 \n    22.7% \n    61.1% \n  \n  \n    6 \n    306 \n    15.4% \n    38.4% \n  \n  \n    9 \n    152 \n    7.7% \n    22.9% \n  \n  \n    12 \n    134 \n    6.8% \n    15.3% \n  \n  \n    15 \n    18 \n    0.9% \n    8.5% \n  \n  \n    18 \n    55 \n    2.8% \n    7.6% \n  \n  \n    21 \n    24 \n    1.2% \n    4.8% \n  \n  \n    24 \n    22 \n    1.1% \n    3.6% \n  \n  \n    27 \n    26 \n    1.3% \n    2.5% \n  \n  \n    29 \n    10 \n    0.5% \n    1.2% \n  \n  \n    30 \n    14 \n    0.7% \n    0.7% \n  \n\n\n\n\n\n\n \n\n\n\n\n\nFigure 1: Percentage (left) and reverse cumulative percentage (right) of anglers by number of Sunfish harvested."
  },
  {
    "objectID": "teaching/resources/WAEsum.html",
    "href": "teaching/resources/WAEsum.html",
    "title": "Walleye Harvest Summaries",
    "section": "",
    "text": "Table 1:  Frequency, percent, and reverse cumulative sum of percent of anglers by number of Walleye harvested. \n \n  \n    Harvested \n    Frequency \n    % \n    Reverse Cum % \n  \n \n\n  \n    0 \n    4848 \n    72.9% \n    100.0% \n  \n  \n    1 \n    1112 \n    16.7% \n    27.1% \n  \n  \n    2 \n    433 \n    6.5% \n    10.4% \n  \n  \n    3 \n    133 \n    2.0% \n    3.9% \n  \n  \n    4 \n    67 \n    1.0% \n    1.9% \n  \n  \n    5 \n    33 \n    0.5% \n    0.9% \n  \n  \n    6 \n    27 \n    0.4% \n    0.4% \n  \n\n\n\n\n\n\n \n\n\n\n\n\nFigure 1: Percentage (left) and reverse cumulative percentage (right) of anglers by number of Walleye harvested."
  },
  {
    "objectID": "teaching/resources/YEPsum.html",
    "href": "teaching/resources/YEPsum.html",
    "title": "Yellow Perch Harvest Summaries",
    "section": "",
    "text": "Table 1:  Frequency, percent, and reverse cumulative sum of percent of anglers by number of Yellow Perch harvested. \n \n  \n    Harvested \n    Frequency \n    % \n    Reverse Cum % \n  \n \n\n  \n    0 \n    277 \n    17.2% \n    100.0% \n  \n  \n    10 \n    920 \n    57.0% \n    82.8% \n  \n  \n    20 \n    244 \n    15.1% \n    25.9% \n  \n  \n    30 \n    87 \n    5.4% \n    10.8% \n  \n  \n    40 \n    44 \n    2.7% \n    5.4% \n  \n  \n    50 \n    26 \n    1.6% \n    2.7% \n  \n  \n    60 \n    5 \n    0.3% \n    1.1% \n  \n  \n    70 \n    2 \n    0.1% \n    0.7% \n  \n  \n    80 \n    3 \n    0.2% \n    0.6% \n  \n  \n    90 \n    2 \n    0.1% \n    0.4% \n  \n  \n    100 \n    5 \n    0.3% \n    0.3% \n  \n\n\n\n\n\n\n \n\n\n\n\n\nFigure 1: Percentage (left) and reverse cumulative percentage (right) of anglers by number of Yellow Perch harvested."
  },
  {
    "objectID": "teaching/posts/2019-3-8_ALK_RockBassLO/index.html",
    "href": "teaching/posts/2019-3-8_ALK_RockBassLO/index.html",
    "title": "Age-Length Key",
    "section": "",
    "text": "Background\nWolfert (1980) measured the total length (TL) of 1288 Rock Bass (Ambloplites rupestris) from Eastern Lake Ontario in the late 1970s. In addition, scales were removed for age estimation from as many as 10 specimens from each 10 mm length interval. All data are recorded in RockBassLO2.11 See “CSV file” link in “Source” section of linked page. Also note that the filename contains an “oh” not a “zero.”\n \n\n\nConstruct an ALK\n\nSeparate the observed data into age- and length-samples. How many fish are in each sample?\nAdd a variable to the age-sample that contains the 10 mm TL categories. Construct a table of the number (not proportion) of fish in each age and 10 mm TL category in the age-sample. From these results, compute each of the following by hand (i.e., not using R, but you can use a calculator).\n\nHow many Rock Bass are in the 180 mm TL category?\nHow many Rock Bass are age 7?\nWhat proportion of Rock Bass in the 140 mm TL category are age 4?\nWhat proportion of Rock Bass in the 200 mm TL category are age 8?\n\nConstruct an observed age-length key from the table above (using R). From these results answer the following questions.\n\nWhat proportion of Rock Bass in the 210 mm TL category should be assigned age 5?\nHow many of thirty Rock Bass in the 180 mm TL category should be assigned age 5?\nConstruct a plot of the observed age-length key. Are there any potential anomalies in the plot that would suggest that a smoothed age-length key could be appropriate?\n\nConstruct a smoothed age-length key. From these results answer the following questions.\n\nWhat proportion of Rock Bass in the 210 mm length category should be assigned age 5?\nHow many of thirty Rock Bass in the 180 mm length category should be assigned age 5?\n\n\n \n\n\nApply an ALK I\nContinue with the age- and length-sample data frames and the observed age-length key from the previous section.\n\nUse the semi-random age assignment technique from Isermann and Knight (2005) and the observed age-length key to assign ages to the unaged fish in the length-sample. Combine the age-sample and the age-assigned length-sample into a single data frame, add a variable to this data frame (or make sure that one exists) that contains the 10 mm TL categories, and use the combined data frame to answer the following questions.\n\nHow many fish are estimated to be age 5?\nHow many fish are estimated to be age 11?\nPlot the age distribution for all fish.\nHow many fish are in the 150 mm TL interval?\nWhat is the mean TL of age-5 fish?\nPlot the length-at-age with the mean length-at-age superimposed for all fish.\n\nCompare your results from the previous question to someone else’s results (or repeat your code and answers to the previous question). Did you both get the exact same results? Why or why not? If not, how different were they?\n\n\n\n\n\n\n\nSave Your Script\n\n\n\nThe data frame with ages assigned to all fish will be used in this growth exercise.\n\n\n \n\n\nApply an ALK II\nContinue with the age- and length-sample data frames and the observed age-length key from the first section.\n\nUse the “classical” method to estimate the age distribution (with standard errors) for all sampled fish.\n\nHow many fish are estimated to be age 5?\nHow many fish are estimated to be age 11?\nPlot the age distribution for all fish.\n\nUse the “classical” method to estimate the mean length-at-age (with standard deviations) for all sampled fish.\n\nWhat is the mean TL of age-5 fish?\nPlot the mean length-at-age.\n\nCompare your results to someone else’s results (or repeat the steps above). Did you both get the exact same results? Why or why not? If not, how different were they?\nCompare your results using the “classical” method here to your results from using the Isermann and Knight (2005) method in the previous section.\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\n\n\nReferences\n\nIsermann, D., and C. Knight. 2005. A computer program for age–length keys incorporating age assignment to individual fish. North American Journal of Fisheries Management 25:1153–1160.\n\n\nWolfert, D. R. 1980. Age and growth of Rock Bass in eastern Lake Ontario. New York Fish and Game Journal 27:88–90.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_Growth_RockBassLO/index.html",
    "href": "teaching/posts/2019-3-8_Growth_RockBassLO/index.html",
    "title": "Individual Growth",
    "section": "",
    "text": "Background\nWolfert (1980) measured the total length (TL) of 1288 Rock Bass (Ambloplites rupestris) from Eastern Lake Ontario in the late 1970s. In addition, scales were removed for age estimation from as many as 10 specimens from each 10 mm length interval. All data are recorded in RockBassLO2.11 See “CSV file” link in “Source” section of linked page. Also note that the filename contains an “oh” not a “zero.”\n\n\n\n\n\n\nContinuation\n\n\n\nThis exercise requires the data frame that contains length and ages, both estimated and assigned from an age-length-key, for all sampled fish. This data frame was constructed in this age-length key exercise. Please load/run your script from that exercise that produces the data frame with ages for all sampled fish.\n\n\n \n\n\nFit Traditional VBGF\n\nExamine the plot of TL versus age.2 Make observations regarding the “shape” of the data (do the results look linear or like a von Bertalanffy growth curve, is there an obvious asymptote, are young fish well represented, how variable are lengths within ages).\nFit the typical parameterization of the von Bertalanffy growth function (VBGF).\n\nHow realistic do the point estimates of \\(L_{\\infty}\\), \\(K\\), and \\(t_{0}\\) seem?\nWrite the typical VBGF with parameters replaced by their estimated values.\nCarefully interpret the meaning of each parameter.\nConstruct 95% bootstrapped confidence intervals for each parameter. Comment on the widths of these confidence intervals. What explains this?\nPredict the mean TL, with 95% confidence interval, for an age-6 Rock Bass. Comment on the width of this confidence interval. What explains this?\nPlot TL versus age and superimpose the best-fit VBGF.3 Comment on model fit.\nConstruct a residual plot. Comment on model fit.\nCompute the correlation between parameter values. Comment.\n\n\n2 This plot was made in this exercise.3 This post may be useful. \n\n\nAlternative Parameterization\n\nFit the Gallucci and Quinn (1979) parameterization.4\n\nInterpret the interval estimate for the \\(\\omega\\) parameter.\nWrite the Gallucci and Quinn VBGF with parameters replaced by their estimated values.\nConstruct 95% bootstrapped confidence intervals for each parameter. Comment on the widths of these confidence intervals. What explains this?\nPredict the mean TL, with 95% confidence interval, for an age-6 Rock Bass. Comment on the width of this confidence interval. What explains this?\nPlot TL versus age and superimpose the best-fit VBGF. Comment on model fit.\nCompute the correlation between parameter values. Comment\nHow does the estimate of \\(K\\) from fitting this parameterization compare to that from the typical VBGF fit above. Explain your observation.\n\n\n4 See growthFunShow(\"vonBertalanffy\",param=\"GQ\",plot=TRUE)) \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\n\n\nReferences\n\nWolfert, D. R. 1980. Age and growth of Rock Bass in eastern Lake Ontario. New York Fish and Game Journal 27:88–90.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_ALK_FWDrumLE/index.html",
    "href": "teaching/posts/2019-3-8_ALK_FWDrumLE/index.html",
    "title": "Age-Length Key",
    "section": "",
    "text": "Background\nBur (1984) examined the population dynamics of Freshwater Drum (Aplodinotus grunniens) in Lake Erie in the late 1970s. In one part of his study, he measured the total length (TL) of all 1577 drum sampled and extracted scales for age estimation from a proportionate sample from each 10 mm length interval. The length and age data are recorded in FWDrumLE2.11 See “CSV file” link in “Source” section of linked page.\n \n\n\nConstruct an ALK\n\nAdd a variable to the data frame that contains the 10 mm TL categories and then separate the observed data into age- and length-samples. How many fish are in each sample?\nConstruct a table of the number (not proportion) of fish in each age and 10 mm TL category in the age-sample. From these results, compute each of the following by hand (i.e., not using R, but you can use a calculator).\n\nHow many Freshwater Drum are in the 230 mm TL category?\nHow many Freshwater Drum are age 5?\nWhat proportion of Freshwater Drum in the 300 mm TL category are age 5?\nWhat proportion of Freshwater Drum in the 200 mm TL category are age 4?\n\nConstruct an observed age-length key from the table above (using R). From these results answer the following questions.\n\nWhat proportion of Freshwater Drum in the 210 mm TL category should be assigned age 5?\nHow many of thirty Rock Bass in the 250 mm TL category should be assigned age 4?\nConstruct a plot of the observed age-length key. Are there any potential anomalies in the plot that would suggest that a smoothed age-length key could be appropriate?\n\nConstruct a smoothed age-length key. From these results answer the following questions.\n\nWhat proportion of Freshwater Drum in the 210 mm TL category should be assigned age 5?\nHow many of thirty Rock Bass in the 250 mm TL category should be assigned age 4?\n\n\n \n\n\nApply an ALK I\nContinue with the age- and length-sample data frames and the observed age-length key from the previous section.\n\nUse the semi-random age assignment technique from Isermann and Knight (2005) and the observed age-length key to assign ages to the unaged fish in the length-sample. Combine the age-sample and the age-assigned length-sample into a single data frame to answer the following questions.\n\nHow many fish are estimated to be age 3?\nHow many fish are estimated to be age 8?\nPlot the age distribution for all fish.\nHow many fish are in the 150 mm TL interval?\nWhat is the mean TL of age-4 fish?\nPlot the length-at-age with the mean length-at-age superimposed for all fish.\n\nCompare your results from the previous question to someone else’s results (or repeat the previous question). Did you both get the exact same results? Why or why not? If not, how different were they?\n\n \n\n\nApply an ALK II\nContinue with the age- and length-sample data frames and the observed age-length key from the first section.\n\nUse the “classical” method to estimate the age distribution (with standard errors) for all sampled fish.\n\nHow many fish are estimated to be age 3?\nHow many fish are estimated to be age 8?\nPlot the age distribution for all fish.\n\nUse the “classical” method to estimate the mean length-at-age (with standard deviations) for all sampled fish.\n\nWhat is the mean TL of age-4 fish?\nPlot the length-at-age with the mean length-at-age superimposed for all fish.\n\nCompare your results to someone else’s results (or repeat the steps above). Did you both get the exact same results? Why or why not? If not, how different were they?\nCompare your results using the “classical” method here to your results from using the Isermann and Knight (2005) method in the previous section.\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\n\n\nReferences\n\nBur, M. T. 1984. Growth, reproduction, mortality, distribution, and biomass of Freshwater Drum in Lake Erie. Journal of Great Lakes Research 10:48–58.\n\n\nIsermann, D., and C. Knight. 2005. A computer program for age–length keys incorporating age assignment to individual fish. North American Journal of Fisheries Management 25:1153–1160.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "teaching/posts/2019-3-8_ALK_StripedBass/index.html",
    "href": "teaching/posts/2019-3-8_ALK_StripedBass/index.html",
    "title": "Age-Length Key",
    "section": "",
    "text": "Background\nResearchers at the Center for Quantitative Fisheries Ecology at Old Dominion University in collaboration with the Virginia Marine Resources Commission annually collect Striped Bass (Morone saxatilis) from Virginia waters of the Atlantic Ocean for age assessments. The total lengths of 1201 Stiped Bass collected in 2003 and the ages estimated from otoliths for as many as 10 fish per 1 inch length interval are recorded in StripedBass3.11 See “CSV file” link in “Source” section of linked page.\n \n\n\nConstruct an ALK\n\nAdd a variable to the data frame that contains the 1 in TL categories and then separate the observed data into age- and length-samples. How many fish are in each sample?\nConstruct a table of the number (not proportion) of fish in each age and 1 inch TL category in the age-sample. From these results, compute each of the following by hand (i.e., not using R, but you may use a calculator).\n\nHow many fish are in the 30 in TL category?\nHow many fish are age 10?\nWhat proportion of fish in the 35 in TL category are age 9?\nWhat proportion of fish in the 31 in TL category are age 11?\n\nConstruct an observed age-length key from the table above (using R). From these results answer the following questions.\n\nWhat proportion of fish in the 30 in TL category should be assigned age 10?\nHow many of forty fish in the 25 mm TL category should be assigned age 5?\nConstruct a plot of the observed age-length key. Are there any potential anomalies in the plot that would suggest that a smoothed age-length key could be appropriate?\n\nConstruct a smoothed age-length key. From these results answer the following questions.\n\nWhat proportion of fish in the 30 in TL category should be assigned age 10?\nHow many of fourty fish in the 25 mm TL category should be assigned age 5?\n\n\n \n\n\nApply an ALK I\nContinue with the age- and length-sample data frames and the observed age-length key from the previous section.\n\nUse the semi-random age assignment technique from Isermann and Knight (2005) and the observed age-length key to assign ages to the unaged fish in the length-sample. Combine the age-sample and the age-assigned length-sample into a single data frame and answer the following questions.\n\nHow many fish are estimated to be age 8?\nHow many fish are estimated to be age 14?\nPlot the age distribution for all fish.\nHow many fish are in the 30 in TL interval?\nWhat is the mean TL of age-9 fish?\nPlot the length-at-age with the mean length-at-age superimposed for all fish.\n\nCompare your results from the previous question to someone else’s results (or repeat the previous question). Did you both get the exact same results? Why or why not? If not, how different were they?\n\n \n\n\nApply an ALK II\n\nUse the “classical” method to estimate the age distribution (with standard errors) for all sampled fish.\n\nHow many fish are estimated to be age 8?\nHow many fish are estimated to be age 14?\nPlot the age distribution for all fish.\n\nUse the “classical” method to estimate the mean length-at-age (with standard deviations) for all sampled fish.\n\nWhat is the mean TL of age-9 fish?\nPlot the length-at-age with the mean length-at-age superimposed for all fish.\n\nCompare your results to someone else’s results (or repeat the steps above). Did you both get the exact same results? Why or why not? If not, how different were they?\nCompare your results using the “classical” method here to your results from using the Isermann and Knight (2005) method in the previous section.\n\n \n\n\n\n\n\n\nSolution Code:\n\n\n\nAvailable upon request to students not in a class. Contact fishR maintainers.\n\n\n\n\n\n\n\n\n\n\n\nReferences\n\nIsermann, D., and C. Knight. 2005. A computer program for age–length keys incorporating age assignment to individual fish. North American Journal of Fisheries Management 25:1153–1160.\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  }
]