---
title: Individual Growth
subtitle: Alaskan Slimy Sculpin
description: Fit a von Bertalanffy growth function to age-length data of Slimy Sculpins from Alaska.
author: Derek H. Ogle
date: 3/8/2019
image: ../../../helpers/img/exercise.png
categories:
  - "  Exercise"
  - " Growth"
  - " von Bertalanffy"
  - "Sculpin"
---

# Background

The total length (mm) and otolith age of [Slimy Sculpin](https://en.wikipedia.org/wiki/Slimy_sculpin) (*Cottus cognatus*) captured in the [Arctic Long-Term Ecological Research](https://arc-lter.ecosystems.mbl.edu/) area were recorded in [SculpinALTER](https://fishr-core-team.github.io/FSAdata/reference/SculpinALTER).^[See "CSV file" link in "Source" section of linked page.]

&nbsp;

# Fit Traditional VBGF

1. Examine the plot of TL versus age. Make observations regarding the "shape" of the data (do the results look linear or like a von Bertalanffy growth curve, is there an obvious asymptote, are young fish well represented, how variable are lengths within ages).
1. Fit the typical parameterization of the von Bertalanffy growth function (VBGF).
    a. How realistic do the point estimates of $L_{\infty}$, $K$, and $t_{0}$ seem?
    a. Write the typical VBGF with parameters replaced by their estimated values.
    a. Carefully interpret the meaning of each parameter.
    a. Construct 95% bootstrapped confidence intervals for each parameter. Comment on the widths of these confidence intervals. What explains this?
    a. Predict the mean TL, with 95% confidence interval, for an age-3 fish. Comment on the width of this confidence interval. What explains this?
    a. Plot TL versus age and superimpose the best-fit VBGF.^[[This post](../../../blog/posts/2019-12-31_vonB_plots_1/) may be useful.] Comment on model fit.
    a. Construct a residual plot. Comment on model fit.
    a. Compute the correlation between parameter values. Comment.

&nbsp;

# Alternative Parameterization

3. Fit the von Bertalanffy's original parameterization.^[See `growthFunShow("vonBertalanffy",param="original",plot=TRUE)`) and [this](https://derekogle.com/IFAR/supplements/otherVBGFParams.html).]
    a. Interpret the interval estimate for the $L_{0}$ parameter.
    a. Write the VBGF with parameters replaced by their estimated values.
    a. Construct 95% bootstrapped confidence intervals for each parameter. Comment on the widths of these confidence intervals. What explains this?
    a. Predict the mean TL, with 95% confidence interval, for an age-d fish. Comment on the width of this confidence interval. What explains this?
    a. Plot TL versus age and superimpose the best-fit VBGF. Comment on model fit.
    a. Compute the correlation between parameter values. Comment
    a. How does the estimate of $L_{\infty}$ and $K$ from fitting this parameterization compare to that from the typical VBGF fit above. Explain your observation.

&nbsp;

:::{.callout-important appearance="simple"}
## Solution Code:
Available upon request to students not in a class. Contact fishR maintainers.
:::

```{r}
#| label: solution 
#| echo: false
#| results: hide
#| fig.show: hide

# Load packages
library(FSA)
library(dplyr)
library(ggplot2)

# Construct and apply ALK
## Load data (and add 10-mm length categories)
ss <- read.csv("https://raw.githubusercontent.com/droglenc/FSAdata/master/data-raw/SculpinALTER.csv")
str(ss)

# Plot
ggplot(data=ss,aes(x=age,y=tl)) +
  geom_point(size=2,alpha=0.25) +
  scale_y_continuous(name="Total Length (mm)",limits=c(0,100)) +
  scale_x_continuous(name="Age (years)",breaks=1:4) +
  theme(panel.grid.minor.x=element_blank())

# Fit Traditional VBGF
vbTyp <- vbFuns("Typical")
svTyp <- vbStarts(tl~age,data=ss,type="Typical")
fitTyp <- nls(tl~vbTyp(age,Linf,K,t0),data=ss,start=svTyp)
bootTyp <- nlstools::nlsBoot(fitTyp)
cbind(Est=coef(fitTyp),confint(bootTyp))
p3Typ <- apply(bootTyp$coefboot,MARGIN=1,FUN=vbTyp,t=3)
c(Est=vbTyp(3,coef(fitTyp)),quantile(p3Typ,c(0.025,0.975)))
summary(fitTyp,correlation=TRUE)

ggplot(data=ss,aes(x=age,y=tl)) +
  geom_point(size=2,alpha=0.25) +
  scale_y_continuous(name="Total Length (mm)",limits=c(0,100)) +
  scale_x_continuous(name="Age (years)",breaks=1:4) +
  stat_function(fun=vbTyp,args=list(Linf=coef(fitTyp)),linewidth=1) +
  theme(panel.grid.minor.x=element_blank())

ggplot(data=data.frame(fits=fitted(fitTyp),
                       resids=residuals(fitTyp)),
       mapping=aes(x=fits,y=resids)) +
  geom_point() +
  geom_hline(yintercept=0,linetype="dashed")

# Fit Original VBGF
vbOrig <- vbFuns("original")
svOrig <- vbStarts(tl~age,data=ss,type="original")
fitOrig <- nls(tl~vbOrig(age,Linf,K,L0),data=ss,start=svOrig)
bootOrig <- nlstools::nlsBoot(fitOrig)
cbind(Est=coef(fitOrig),confint(bootOrig))
p3Orig <- apply(bootOrig$coefboot,MARGIN=1,FUN=vbOrig,t=3)
c(Est=vbOrig(3,coef(fitOrig)),quantile(p3Orig,c(0.025,0.975)))
summary(fitOrig,correlation=TRUE)

ggplot(data=ss,aes(x=age,y=tl)) +
  geom_point(size=2,alpha=0.25) +
  scale_y_continuous(name="Total Length (mm)",limits=c(0,100)) +
  scale_x_continuous(name="Age (years)",breaks=1:4) +
  stat_function(fun=vbOrig,args=list(Linf=coef(fitOrig)),linewidth=3) +
  stat_function(fun=vbTyp,args=list(Linf=coef(fitTyp)),linewidth=1,color="blue") +
  theme(panel.grid.minor.x=element_blank())

```
