---
title: Weight-Length Relationship
subtitle: Inch Lake
description: Fit a weight-length relationsip for Inch Lake Largemouth Bass.
author: Derek H. Ogle
date: 3/8/2019
image: ../../../helpers/img/exercise.png
categories:
  - "  Exercise"
  - " Weight-Length"
  - "Bass"
---

:::{.callout-warning appearance="simple"}
## Continuation
This exercise is a continuation of [this data wrangling exercise](../2019-3-8_Wrangling_Inch/) and, thus, depends on data frames constructed there. Please load/run your script from that exercise to access the Largemouth Bass only data frame.
:::

&nbsp;

# Basic Analysis
1. Construct graphs appropriate to answer the following questions.^[If you completed [this graphing exercise](../2019-3-8_Graphing_Inch) then you created the necessary graphs there.]
    a. Describe the relationship between weight and length (in mm here and throughout).
    a. Describe the relationship between log-transformed weight and length.
1. From the plots above there is a clear minimum length for which the weights were precisely obtained. What is that length? [**Reduce the data frame to fish greater than this minimum length for the questions below.**]
1. Compute the weight-length relationship with an appropriate linear regression.
    a. Plot the results (data and the fitted relationship) on both the transformed and raw scales.^[[This post](../../../blog/posts/2021-5-25_fitPlot-replacement/) may be useful.] Comment on the fit.
    a. Construct a residual plot.^[[This post](../../../blog/posts/2021-6-1_residPlot-replacement/) may be useful.] Comment.
    a. Express your results as an equation on the transformed scale.
    a. Express your results as an equation on the raw scale.
    a. Carefully interpret the meaning of the slope of the weight-length relationship.
    a. Is there statistical evidence for isometric or allometric growth?

&nbsp;

# Extension
4. Recompute the weight-length relationship using the original length in inches.  How do the slope and y-intercept from this model compare to the results from the previous question?

&nbsp;

:::{.callout-important appearance="simple"}
## Solution Code:
Available upon request to students not in a class. Contact fishR maintainers.
:::

```{r}
#| label: solution 
#| echo: false
#| results: hide
#| fig.show: hide

# Load packages
library(dplyr)
library(ggplot2)

# Load data
InchLake2 <- read.csv("https://raw.githubusercontent.com/fishR-Core-Team/FSAdata/main/data-raw/InchLake2.csv")
str(InchLake2)
unique(InchLake2$species)

# New variable with length in mm, and remove netID and fishID
InchLake2 <- InchLake2 |>
  rename(wt=weight) |>
  mutate(tl=length*25.4,logwt=log10(wt),logtl=log10(tl),
         GHlen=FSA::psdAdd(tl,species)) |>
  select(-netID,-fishID)

# New data frames from wrangling exercise ...
lmb <- InchLake2 |>
  filter(species=="Largemouth Bass")

# Plots
theme_set(theme_bw())
## W-L relationship
ggplot(data=lmb,mapping=aes(x=tl,y=wt)) +
  geom_point(shape=21,color="black",fill="gray50") +
  scale_x_continuous(name="Total Length (mm)",expand=expansion(mult=0.01)) +
  scale_y_continuous(name="Weight (g)",expand=expansion(mult=0.01))
## logW-logL relationship
ggplot(data=lmb,mapping=aes(x=logtl,y=logwt)) +
  geom_point(shape=21,color="black",fill="gray50") +
  scale_x_continuous(name="log10 Total Length (mm)",expand=expansion(mult=0.01)) +
  scale_y_continuous(name="log10 Weight (g)",expand=expansion(mult=0.01))

# Reduce to fish that were reliably weighed (>80 mm)
lmb <- lmb |>
  filter(tl>150)

# Regression
lmblw1 <- lm(logwt~logtl,data=lmb)
## Add fitted values and residuals for residual plot
lmb <- lmb |>
  mutate(fitlogwt=fitted(lmblw1),
         resids=residuals(lmblw1))
## Make predicted values for showing best-fit line
lmbpred <- data.frame(predtl=seq(min(lmb$tl,na.rm=TRUE),
                                max(lmb$tl,na.rm=TRUE),
                                length.out=199)) |>
  mutate(predlogtl=log10(predtl))

lmbpred <- cbind(lmbpred,predict(lmblw1,data.frame(logtl=lmbpred$predlogtl),
                               interval="confidence")) |>
  rename(predlogwt=fit,predlogwtlwr=lwr,predlogwtupr=upr) |>
  mutate(predwt=10^predlogwt,predwtlwr=10^predlogwtlwr,predwtupr=10^predlogwtupr)
head(lmbpred)
## fit plots
ggplot() +
  geom_point(data=lmb,mapping=aes(x=logtl,y=logwt),
             shape=21,color="black",fill="gray50") +
  scale_x_continuous(name="log10 Total Length (mm)",expand=expansion(mult=0.01)) +
  scale_y_continuous(name="log10 Weight (g)",expand=expansion(mult=0.01)) +
  geom_ribbon(data=lmbpred,mapping=aes(x=predlogtl,
                                       ymax=predlogwtupr,ymin=predlogwtlwr),
              color="blue",alpha=0.2) +
  geom_line(data=lmbpred,mapping=aes(x=predlogtl,y=predlogwt),
            linewidth=1,color="blue")
ggplot() +
  geom_point(data=lmb,mapping=aes(x=tl,y=wt),
             shape=21,color="black",fill="gray50") +
  scale_x_continuous(name="Total Length (mm)",expand=expansion(mult=0.01)) +
  scale_y_continuous(name="Weight (g)",expand=expansion(mult=0.01)) +
  geom_ribbon(data=lmbpred,mapping=aes(x=predtl,ymax=predwtupr,ymin=predwtlwr),
              color="blue",alpha=0.2) +
  geom_line(data=lmbpred,mapping=aes(x=predtl,y=predwt),
            linewidth=1,color="blue")
## residual plot
ggplot(data=lmb,mapping=aes(x=fitlogwt,y=resids)) +
  geom_point(shape=21,color="black",fill="gray50") +
  geom_hline(yintercept=0,linewidth=1,linetype="dashed") +
  scale_x_continuous(name="Fitted Values",expand=expansion(mult=0.01)) +
  scale_y_continuous(name="Residuals",expand=expansion(mult=0.01))

## Summary stats
cbind(Est=coef(lmblw1),confint(lmblw1))

## results using length in inches
lmb <- lmb |>
  mutate(loglenin=log10(length))
lmblw1a <- lm(logwt~loglenin,data=lmb)
cbind(Est=coef(lmblw1a),confint(lmblw1a))
```
