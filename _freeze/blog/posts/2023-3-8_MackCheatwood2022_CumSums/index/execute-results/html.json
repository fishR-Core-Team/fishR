{
  "hash": "189a882056df32818dff0b336e8d0b51",
  "result": {
    "markdown": "---\ntitle: Mack and Cheatwood (2022) Cumulative Sums Figure\ndescription: Using ggplot2 to recreate the cumulative sums figures in Mack and Cheatwood (2022).\nauthor: Derek H. Ogle\ndate: 3/8/2023\nimage: preview.png\ncategories:\n  - ggplot2\n  - Dates\n  - Facets\n  - Cumulative distribution\n---\n\n\n# Introduction\n@mackcheatwood_2022 examined the upstream movements of American Eel (*Anguilla rostrata*) at four dams from North Carolina to the New York and Canada border. Their [Figure 2](https://meridian.allenpress.com/view-large/figure/15050843/i1944-687X-13-2-473-f02.tif) shows the cumulative percentage catch of eels by day at each dam for ten years. They must have used `ggplot2` to produce their figure as it was fairly straightforward to reproduce. However, doing so reveals a few \"tricks of the trade\", which I demonstrate below.\n\n# Getting Setup\nThe following packages are loaded for use below. A single function from `lemon` is also used.^[That function will be accessed with `::` so that the whole package is not attached.]\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)  # for dplyr, ggplot2 packages\nlibrary(scales)     # for breaks_width(), label_date()\nlibrary(lubridate)  # for date handling functions ... month(), day()\n```\n:::\n\n\nThe `ggplot2` theme was set to `theme_classic()` but with modifications to more closely match the author's choices (i.e., slightly larger and bolded axis tick labels and axis title, remove x-axis label, remove background color and outline from the facet labels (AKA \"strip\"s), and slight larger and bolded facet labels).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntheme_set(\n  theme_classic() +\n    theme(axis.text=element_text(size=11,face=\"bold\"),\n          axis.title=element_text(size=12,face=\"bold\"),\n          axis.title.x=element_blank(),\n          strip.background=element_blank(),\n          strip.text=element_text(size=11,face=\"bold\"))\n)\n```\n:::\n\n\n&nbsp;\n\n# Get Data\n@mackcheatwood_2022 provided the raw data for their study as a supplementary CSV file. I had a bit of trouble downloading the file as the first \"Supplemental Material\" portion of the online manuscript linked to a ZIP file that contained a shapefile database rather than the data its description stated, and the second \"Supplemental Material\" portion of the online manuscript linked to a file called \"Download\" that appeared to be a CSV file and not the XLSX file that its description implied. Nevertheless, this second file seemed to contain the data of interest and is used here.\n\nI loaded this file from my local directory, changed `Location` to a factor variable with the levels in the North-South order described in @mackcheatwood_2022, and changed the `Date` string variable to a proper date variable using `as.Date()` with the format code of `\"%m/%d/%Y\"`, where `%m` indicates a numeric month, `%d` indicates a numeric day, and `%Y` indicates a four-digit year.^[I observed this format for their dates from an initial import of the data. Also see `?strptime` for more date-time codes.] Additionally, two variables not used in this post were removed and I made sure that the data were sorted by date within each location.^[This sorting is required when computing the cumulative sum results next.]\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndat <- read.csv(\"Download\") |>\n  mutate(Location=case_when(\n           Location==\"RoanokeRapids\" ~ \"Roanoke Rapids\",\n           Location==\"StLawrence\" ~ \"Moses-Saunders\",\n           TRUE ~ Location),\n         Location=factor(Location,\n                         levels=c(\"Moses-Saunders\",\"Holyoke\",\n                                  \"Conowingo\",\"Roanoke Rapids\")),\n         Date=as.Date(Date,format=\"%m/%d/%Y\")) |>\n  select(-EelsPerDay,-Peak) |>\n  arrange(Location,Year)\n\nFSA::headtail(dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|             Location Year       Date Eels\n#R|  1    Moses-Saunders 2012 2012-06-16   50\n#R|  2    Moses-Saunders 2012 2012-06-17  120\n#R|  3    Moses-Saunders 2012 2012-06-18  195\n#R|  4304 Roanoke Rapids 2019 2019-11-27    4\n#R|  4305 Roanoke Rapids 2019 2019-11-29    8\n#R|  4306 Roanoke Rapids 2019 2019-12-02    1\n```\n:::\n:::\n\n\nIn Figure 2 the authors plotted percent cumulative catch of Eels against date for each year and location. The cumulative sum by date of Eels is found with `cumsum()` *as long as the data are ordered by date* as done above. The percentage cumulative sum is then calculated by dividing each cumulative sum value by the maximum cumulative sum value (i.e., the total of Eels caught). These two calculations must be done separately for each year within each location, so the data are grouped by `Location` and then `Year` before making the calculations.^[Make sure to `ungroup()` after the calculations before moving on.]\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndat <- dat |>\n  group_by(Location,Year) |>\n  mutate(cumsumEels=cumsum(Eels),\n         pcumsumEels=cumsumEels/max(cumsumEels)*100) |>\n  ungroup()\n\nFSA::headtail(dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|             Location Year       Date Eels cumsumEels pcumsumEels\n#R|  1    Moses-Saunders 2012 2012-06-16   50         50   0.1016839\n#R|  2    Moses-Saunders 2012 2012-06-17  120        170   0.3457252\n#R|  3    Moses-Saunders 2012 2012-06-18  195        365   0.7422924\n#R|  4304 Roanoke Rapids 2019 2019-11-27    4      37719  99.9761450\n#R|  4305 Roanoke Rapids 2019 2019-11-29    8      37727  99.9973494\n#R|  4306 Roanoke Rapids 2019 2019-12-02    1      37728 100.0000000\n```\n:::\n:::\n\n\nFigure 2 plotted all years of data to a common x-axis of date within a year. To facilitate this, a \"Date\" variable is needed that is the month and day from the observed `Date` but with a common (and, thus, constant) year. This constant year could be any year, as long as it is consistent. I chose a common year of 2000, which is outside the range of the observed years so as to be less confusing. This new \"Date\" variable is constructed below by extracting the month and day from `Date` with `month()` and `day`, pasting these together with a year of 2000 and with forward slashes, and then converting to a proper date with `as.Date()`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndat <- dat |>\n  mutate(Date2=as.Date(paste0(month(Date),\"/\",\n                              day(Date),\"/\",\n                              \"2000\"),\n                              format=\"%m/%d/%Y\"))\n\nFSA::headtail(dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|             Location Year       Date Eels cumsumEels pcumsumEels      Date2\n#R|  1    Moses-Saunders 2012 2012-06-16   50         50   0.1016839 2000-06-16\n#R|  2    Moses-Saunders 2012 2012-06-17  120        170   0.3457252 2000-06-17\n#R|  3    Moses-Saunders 2012 2012-06-18  195        365   0.7422924 2000-06-18\n#R|  4304 Roanoke Rapids 2019 2019-11-27    4      37719  99.9761450 2000-11-27\n#R|  4305 Roanoke Rapids 2019 2019-11-29    8      37727  99.9973494 2000-11-29\n#R|  4306 Roanoke Rapids 2019 2019-12-02    1      37728 100.0000000 2000-12-02\n```\n:::\n:::\n\n\n&nbsp;\n\n# Recreating Figure 2\n## One Location\nFor illustrative purposes I first constructed just the Roanoke Rapids subpanel of Figure 2.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndatRR <- dat |>\n  filter(Location==\"Roanoke Rapids\")\n```\n:::\n\n\nThe foundation of the figure is constructed by mapping `Date2` to the x-axis and `pcumsumEels` to the y-axis, mapping `Year` to `group=` to get separate lines for each year, and then using `geom_line()`. I increased the line width slightly to better match the authors' choice.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=datRR,mapping=aes(x=Date2,y=pcumsumEels,group=Year)) +\n  geom_line(linewidth=1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/demo-fig2-1-1.png){fig-align='center' width=384}\n:::\n:::\n\n\nThe x-axis labels need to be modified to be monthly, which is accomplished with `breaks=breaks_width(\"month\")` within `scale_x_date()`. By default these labels will appear numeric with the month, day, and year. However, just the abbreviated month *name* can be used by including `labels=label_date(\"%b%`).^[`%b` is a code the identifies the month name abbreviation. See [this post](../2023-3-15-Axis_Magic/#dates-on-axes).]\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=datRR,mapping=aes(x=Date2,y=pcumsumEels,group=Year)) +\n  geom_line(linewidth=1) +\n  scale_x_date(breaks=breaks_width(\"month\"),labels=label_date(\"%b\")) +\n  scale_y_continuous(name=\"Cumulative Percentage of Eels Captured\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/demo-fig2-2-1.png){fig-align='center' width=384}\n:::\n:::\n\n\n## All Locations\nThe plot for one location can be expanded to a plot for all locations by first changing the data to the data frame that has all locations and then \"faceting\" with respect to `Location`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=dat,mapping=aes(x=Date2,y=pcumsumEels,group=Year)) +\n  geom_line(linewidth=1) +\n  scale_x_date(breaks=breaks_width(\"month\"),labels=label_date(\"%b\")) +\n  scale_y_continuous(name=\"Cumulative Percentage of Eels Captured\") +\n  facet_wrap(vars(Location))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/demo-fig2-3-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nThe subpanels can be \"stacked\" by forcing the faceting to be in one column with `ncol=`. In addition, the \"facet\" (or \"strip\") labels can be moved from the default position with `strip.position=`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=dat,mapping=aes(x=Date2,y=pcumsumEels,group=Year)) +\n  geom_line(linewidth=1) +\n  scale_x_date(breaks=breaks_width(\"month\"),labels=label_date(\"%b\")) +\n  scale_y_continuous(name=\"Cumulative Percentage of Eels Captured\") +\n  facet_wrap(vars(Location),\n             ncol=1,strip.position=\"left\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/demo-fig2-4-1.png){fig-align='center' width=384}\n:::\n:::\n\n\nThis is very close to Figure 2 in @mackcheatwood_2022 but they had an x-axis with tick marks for each facet. I initially tried to accomplish this with `scales=\"free_x\"` in `facet_wrap()` but this also included the month labels for each facet. The only way I could accomplish what the authors did was to use `facet_rep_wrap()` from the `lemon` package, which for this purpose has the same arguments as `facet_wrap()`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=dat,mapping=aes(x=Date2,y=pcumsumEels,group=Year)) +\n  geom_line(linewidth=1) +\n  scale_x_date(breaks=breaks_width(\"month\"),labels=label_date(\"%b\")) +\n  scale_y_continuous(name=\"Cumulative Percentage of Eels Captured\") +\n  lemon::facet_rep_wrap(vars(Location),\n                        ncol=1,strip.position=\"left\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/make-fig2-1.png){fig-align='center' width=384}\n:::\n:::\n\n\n&nbsp;\n\n# Further Thoughts\n## geom_step()\nIt is fairly common to show cumulative distributions with \"steps\" rather than lines. This is easily accomplished by replacing `geom_line()` with `geom_step()`. I don't think that using steps is necessarily \"better\" with these data.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=datRR,mapping=aes(x=Date2,y=pcumsumEels,group=Year)) +\n  geom_step(linewidth=1) +\n  scale_x_date(breaks=breaks_width(\"month\"),labels=label_date(\"%b\")) +\n  scale_y_continuous(name=\"Cumulative Percentage of Eels Captured\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/alt-fig2-step-1.png){fig-align='center' width=384}\n:::\n:::\n\n\n&nbsp;\n\n## Explore Year Effects\n@mackcheatwood_2022 were not interested in describing specific year-to-year differences. However, I was curious if any patterns among years were visually evident. I initially examined this by coding years with color, but the plot is pretty messy.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=dat,mapping=aes(x=Date2,y=pcumsumEels,group=Year,color=Year)) +\n  geom_line(linewidth=1) +\n  scale_x_date(breaks=breaks_width(\"month\"),labels=label_date(\"%b\")) +\n  scale_y_continuous(name=\"Cumulative Percentage of Eels Captured\") +\n  scale_color_viridis_c(begin=0.75,end=0.25,label=scales::label_number(1)) +\n  lemon::facet_rep_wrap(vars(Location),\n                        ncol=1,strip.position=\"left\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/alt-fig2-year1-1.png){fig-align='center' width=528}\n:::\n:::\n\n\nI then tried faceting by year and using color for location to see if there might be some obvious congruencies across locations within years. I don't think this leads to a different narrative than what was evident in the authors' Figure 2.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=dat,mapping=aes(x=Date2,y=pcumsumEels,group=Location,color=Location)) +\n  geom_line(linewidth=1) +\n  scale_x_date(breaks=breaks_width(\"2 months\"),labels=label_date(\"%b\")) +\n  scale_y_continuous(name=\"Cumulative Percentage of Eels Captured\") +\n  scale_color_viridis_d(begin=0.9,end=0.1) +\n  lemon::facet_rep_wrap(vars(Year),ncol=3)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/alt-fig2-year2-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n&nbsp;\n\n\n::: {.cell layout-align=\"center\"}\n\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}