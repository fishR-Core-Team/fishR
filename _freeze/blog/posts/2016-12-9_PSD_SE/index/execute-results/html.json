{
  "hash": "498933b370133f7e12b6e3e657ebf596",
  "result": {
    "markdown": "---\ntitle: Computing SE for PSD indices\ndescription: Demonstrate how to compute SE for PSD indices.\nauthor: Derek H. Ogle\ndate: 12/9/2016\nimage: preview.png\ncategories:\n  - PSD\n  - Size Structure\n---\n\n\n:::{.callout-note}\nThe following packages are loaded for use below.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(FSA)   ## for psdAdd(), rcumsum(), headtail() \nlibrary(dplyr) ## for mutate(), filter()\n```\n:::\n\n\n&nbsp;\n\nA reader of @ogleIntroductoryFisheriesAnalyses2016 asked how to compute standard errors (SE) for the various PSD indices with the usual SE equation of a proportion (i.e., $\\sqrt{\\frac{p(1-p)}{n}}$. I demonstrate this calculation in this post\n\n:::{.callout-warning}\nI caution against using these standard errors to produce confidence intervals for PSD-X values. If confidence intervals are the end product for this analysis, then I suggest using the binomial or multinomial distribution methods described in @ogleIntroductoryFisheriesAnalyses2016.\n:::\n\n&nbsp;\n\nI will use the same Inch Lake data from the Size Structure chapter of @ogleIntroductoryFisheriesAnalyses2016, where I used `psdAdd()` (from `FSA`) to add a variable with the Gabelhouse length categories and eliminated all sub-stock size fish.^[this and next step is from [this script](http://derekogle.com/IFAR/scripts/SizeStructure.R)) from @ogleIntroductoryFisheriesAnalyses2016.]\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ninchAlls <- read.csv(\"http://derekogle.com/IFAR/scripts/InchLake1113.csv\") |>\n  mutate(gcat=psdAdd(tl,species)) |>\n  filter(gcat!=\"substock\") |>\n  droplevels()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#R|  No known Gabelhouse (PSD) lengths for: Iowa Darter\n```\n:::\n\n```{.r .cell-code}\nheadtail(inchAlls)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|       gearType year       species  tl      gcat\n#R|  1        fyke 2012 Black Crappie 246   quality\n#R|  2        fyke 2012 Black Crappie 165     stock\n#R|  3        fyke 2012 Black Crappie 330 memorable\n#R|  1270     fyke 2013  Yellow Perch 348 memorable\n#R|  1271     fyke 2013  Yellow Perch 135     stock\n#R|  1272     fyke 2013  Yellow Perch 137     stock\n```\n:::\n:::\n\n\nI then computed the PSD-X values as shown in @ogleIntroductoryFisheriesAnalyses2016. These will be the proportions (i.e., $p$) in the SE calculations.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n( freq <- xtabs(~species+gcat,data=inchAlls) )\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|                   gcat\n#R|  species           stock quality preferred memorable\n#R|    Black Crappie      33      40         8        81\n#R|    Bluegill          571     199       223        43\n#R|    Largemouth Bass    26      36         0         0\n#R|    Pumpkinseed         5       2         0         0\n#R|    Yellow Perch        4       0         0         1\n```\n:::\n\n```{.r .cell-code}\niPSDs <- prop.table(freq,margin=1)*100\n( PSDs <- t(apply(iPSDs,MARGIN=1,FUN=rcumsum)) )\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|                   gcat\n#R|  species           stock  quality preferred memorable\n#R|    Black Crappie     100 79.62963  54.93827 50.000000\n#R|    Bluegill          100 44.88417  25.67568  4.150579\n#R|    Largemouth Bass   100 58.06452   0.00000  0.000000\n#R|    Pumpkinseed       100 28.57143   0.00000  0.000000\n#R|    Yellow Perch      100 20.00000  20.00000 20.000000\n```\n:::\n:::\n\n\nThe row sums from the `freq` table are the total number of fish (that are stock size or greater) and will be $n$ in the SE calculations.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n( sums <- rowSums(freq) )\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|    Black Crappie        Bluegill Largemouth Bass     Pumpkinseed    Yellow Perch \n#R|              162            1036              62               7               5\n```\n:::\n:::\n\n\nFinally, with these two results the SE for PSD-Q may be computed.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np <- PSDs[,\"quality\"]\nSEs <- sqrt(p*(100-p)/sums)\nround(SEs,1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|    Black Crappie        Bluegill Largemouth Bass     Pumpkinseed    Yellow Perch \n#R|              3.2             1.5             6.3            17.1            17.9\n```\n:::\n:::\n\n\nAnd can be repeat for other size indices; e.g., for PSD-P.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np <- PSDs[,\"preferred\"]\nSEs <- sqrt(p*(100-p)/sums)\nround(SEs,1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|    Black Crappie        Bluegill Largemouth Bass     Pumpkinseed    Yellow Perch \n#R|              3.9             1.4             0.0             0.0            17.9\n```\n:::\n:::\n\n\n&nbsp;\n\n:::{.callout-note}\nThe SE formula is usually used for proportions (and then multiplied by 100 to get a SE for percentages). However, it can be shown algebraically to apply to percentages as well.\n:::\n\n&nbsp;\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}