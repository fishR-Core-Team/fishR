{
  "hash": "1341490b419eac9cf4da6c44d2dd5445",
  "result": {
    "markdown": "---\ntitle: McCarrick et al. (2022) CPE Plot\ndescription: Using ggplot2 to recreate the cpe by species, year, and length category figure in McCarrick et al. (2022).\nauthor: Derek H. Ogle\ndate: 3/22/2023\nimage: preview.png\ncategories:\n  - ggplot2\n  - bar chart\n  - facets\n  - axes\n  - Data Wrangling\n---\n\n\n:::{.callout-important}\n## Series Note\nThis is the first of several posts related to @mccarricketal_2022.\n:::\n\n# Introduction\n@mccarricketal_2022 examined the population dynamics of Yellowstone Cutthroat Trout (*Oncorhynchus clarkii bouvieri*) in Henrys Lake, Idaho over a nearly two decade period. Their [Figure 2](https://meridian.allenpress.com/view-large/figure/14538506/i1944-687X-13-1-169-f02.tif) shows the catch-per-unit-effort (CPE) of both Cutthroat Trout and Utah Chub (*Gila atraria*) by size categories across years. I use `ggplot2` to recreate that figure here.\n\nThe following packages are loaded for use below. A few functions from each of `lubridate`, `FSA`, `plyr`, `scales`, `gghrx`, and `lemon` are used with `::` such that the entire packages are not attached here.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)  # for dplyr, ggplot2 packages\nlibrary(patchwork)  # for arranging multiple plots\n```\n:::\n\n\n:::{.callout-note}\nYou will see below that I could recreate the structure but not the exact results of the author's Figure 2. This may be due to issues present in the data provided with the publication that I discuss below, but it could also be that my data wrangling differs from theirs. I defer to the authors here as they are the experts with their day; I am just an interloper. I actually appreciate these data issues from an educational perspective as they provide rich opportunities to demonstrate a variety of techniques with \"real\" \"messy\" data.\n:::\n\n&nbsp;\n\n# Data Wrangling\n### Reading Excel File and Handling Dates\n@mccarricketal_2022 provided raw data for Figure 2 as an Excel file in their Data Supplement S1. Several \"issues\" were apparent on my first attempts to load these data.\n\n- Missing data was recorded as missing cells, with \"??\", and with \"UNK\".\n- There were oddly placed strings in some data fields (e.g., \"Qty=\", \"Qty =\", and \"No Tag\"). [*I treated these as missing data below.*]\n- Dates were recorded as just year, full date with two-digit year, and full date with four-digit year. [*More on this below.*]\n- Inconsistent \"species\" abbreviations. [*More on this below.*]\n- Incorrect length and weight measurements (e.g., <10 mm, >2000 mm). [*I treated these \"as is\" (i.e., without correction) for this post.*]\n\nThe missing data and oddly named cells were handled with `na=` below. In addition, the column types were specifically defined in `col_types=`, primarily so that the first column would be largely correctly read as a date. The year was then extracted from the `Date` variable using `year()` from `lubridate`. However, the dates recorded in the original file as only a year were interpreted as an \"Excel date code\" rather than a date and, thus, the year was not extracted correctly. Fortunately, this \"date\" format was only used for one year (2002) such that the extracted year was consistently \"1905.\" Thus, the \"1905\" was replaced with \"2002\" for the extracted year with `ifelse()` as shown below. Several years did not exist (because the date was not recorded) and were removed with `filter()`. Finally, the variables were rearranged slightly, `Species` was changed to `species` for consistency with other variables, and the long effort variable was changed to the shorter `netNights`.^[Note that this code still produced a large number of warnings, all related to the \"2002\" \"date\".]\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndat <- readxl::read_xlsx(\"download.xlsx\",\n                         na=c(\"\",\"??\",\"QTY =\",\"QTY=\",\"UNK\",\"NO TAG\"),\n                         col_types=c(\"date\",\"numeric\",\"text\",\n                                     \"numeric\",\"numeric\",\"text\")) |>\n  mutate(year=lubridate::year(Date),\n         year=ifelse(year==1905,2002,year)) |>\n  filter(!is.na(year)) |>\n  select(species=Species,year,length,weight,netNights=`number of net nights`)\nFSA::headtail(dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|        species year length weight netNights\n#R|  1         YCT 2002    150     NA        18\n#R|  2         YCT 2002    160     NA        18\n#R|  3         YCT 2002    160     NA        18\n#R|  23971     YCT 2020    391    550        30\n#R|  23972     YCT 2020    284    229        30\n#R|  23973     YCT 2020    440    853        30\n```\n:::\n:::\n\n\n### New Effort Data Frame\nThe effort (i.e., `netNights`) variable seems out-of-place in the sense that each row of this data frame is a single fish. I suspected that this effort is actually for a year and was repeated for each fish captured in the same year. To examine my suspicion, I computed the minimum and maximum effort (and the difference between the two) for each year.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndat |>\n  group_by(year) |>\n  summarize(minF=min(netNights,na.rm=TRUE),\n            maxF=max(netNights,na.rm=TRUE),\n            diff=maxF-minF)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|  # A tibble: 19 × 4\n#R|      year  minF  maxF  diff\n#R|     <dbl> <dbl> <dbl> <dbl>\n#R|   1  2002    18    18     0\n#R|   2  2003    18    18     0\n#R|   3  2004    50    50     0\n#R|   4  2005    46    46     0\n#R|   5  2006    48    48     0\n#R|   6  2007    44    44     0\n#R|   7  2008    12    12     0\n#R|   8  2009    23    23     0\n#R|   9  2010    50    50     0\n#R|  10  2011    30    30     0\n#R|  11  2012    50    50     0\n#R|  12  2013    50    50     0\n#R|  13  2014    48    48     0\n#R|  14  2015    50    50     0\n#R|  15  2016    48    48     0\n#R|  16  2017    50    50     0\n#R|  17  2018    50    50     0\n#R|  18  2019    50    50     0\n#R|  19  2020    30    50    20\n```\n:::\n:::\n\n\nThe minimum and maximum efforts are the same for each, with the exception of 2020. I suspect that this is a typo. A quick table of efforts for 2020 shows that the vast majority are 30, rather than 50, net-nights. Further, my initial analysis with these data resulted in CPE values for 2020 that were lower than what was shown in @mccarricketal_2022. Thus, I am going to assume that 30 net-nights of effort was used in 2020 (see how this is corrected below).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nxtabs(~netNights,data=filter(dat,year==2020))\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|  netNights\n#R|   30  50 \n#R|  865   9\n```\n:::\n:::\n\n\nFor my purposes, I am going to create a new data frame of annual levels of effort by finding the *minimum* `netNights` in each year. The minimum is used here because it is the actual effort for all years that properly had a constant `netNights` entered and it is the assumed correct `netNights` for 2020 when a constant value was not entered.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\neff <- dat |>\n  group_by(year) |>\n  summarize(netNights=min(netNights,na.rm=TRUE))\neff\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|  # A tibble: 19 × 2\n#R|      year netNights\n#R|     <dbl>     <dbl>\n#R|   1  2002        18\n#R|   2  2003        18\n#R|   3  2004        50\n#R|   4  2005        46\n#R|   5  2006        48\n#R|   6  2007        44\n#R|   7  2008        12\n#R|   8  2009        23\n#R|   9  2010        50\n#R|  10  2011        30\n#R|  11  2012        50\n#R|  12  2013        50\n#R|  13  2014        48\n#R|  14  2015        50\n#R|  15  2016        48\n#R|  16  2017        50\n#R|  17  2018        50\n#R|  18  2019        50\n#R|  19  2020        30\n```\n:::\n:::\n\n\nThe `netNights` variables is no longer needed in the individual fish data frame.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndat <- dat |>\n  select(-netNights)\n```\n:::\n\n\n### Filtering to Two Species\nFigure 2 in @mccarricketal_2022 only displays results for Cutthroat Trout and Utah Chub. Thus, the data frame should be reduced to just these species. First, a look at how species are identified.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nunique(dat$species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|   [1] \"YCT\"     \"BKT\"     \"HYB\"     \"CHB\"     \"RSS\"     \"UTC\"     \"KOK\"    \n#R|   [8] \"BRT\"     \"CHUB\"    NA        \"HB\"      \"Yct\"     \"NO FISH\" \"SCU\"\n```\n:::\n:::\n\n\nFrom the published paper it is apparent that \"YCT\" is for Yellowstone Cutthroat Trout and \"UTC\" is for Utah Chub. But note the \"Yct\" and the \"CHB\" and \"CHUB\". A little closer look at just these abbreviations by year suggests that \"Yct\" is a \"one-off\" typo, but that \"CHB\" and \"CHUB\" appeared to be used in some years when \"UTC\" was mostly not used. This suggested to me that \"CHB\" and \"CHUB\" were likely synonyms for \"UTC\".\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nxtabs(~year+species,data=filter(dat,species %in% c(\"YCT\",\"Yct\",\"UTC\",\"CHB\",\"CHUB\")))\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|        species\n#R|  year    CHB CHUB  UTC  Yct  YCT\n#R|    2002    0    0    0    0   55\n#R|    2003   84    0    2    0  162\n#R|    2004    0    0  728    0  323\n#R|    2005    0    0  294    0  305\n#R|    2006    0    0  424    0  269\n#R|    2007    0    0  895    0  658\n#R|    2008    0  606    0    0  100\n#R|    2009    0    0  512    0   91\n#R|    2010    0    0    0    0  502\n#R|    2011    0  440    0    0  374\n#R|    2012    0    0  692    0  500\n#R|    2013    0    0 1858    0  478\n#R|    2014    0    0 1767    1  475\n#R|    2015    0    0 1660    0  254\n#R|    2016    0    0 1078    0  265\n#R|    2017    0    0 1025    0  149\n#R|    2018    0    0 1273    0   76\n#R|    2019    0    0  696    0  219\n#R|    2020    0    0  414    0  198\n```\n:::\n:::\n\n\nThus, `species` is modified below by combining \"YCT\" and \"Yct\" into \"YCT\", and combining \"UTC\", \"CHB\", and \"CHUB\" into \"UTC\".^[And leaving all other species \"names\" as-is.] The data frame was subsequently reduced to just these two species.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndat <- dat |>\n  mutate(species=case_when(\n    species %in% c(\"YCT\",\"Yct\") ~ \"YCT\",\n    species %in% c(\"UTC\",\"CHB\",\"CHUB\") ~ \"UTC\",\n    TRUE ~ species\n    )\n  ) |>\n  filter(species %in% c(\"YCT\",\"UTC\"))\n\n# just checking\nunique(dat$species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|  [1] \"YCT\" \"UTC\"\n```\n:::\n:::\n\n\n### Adding Gabelhouse Length Categories\nFigure 2 separates the data into panels based on Gabelhouse length categories (i.e., \"Stock\", \"Quality\", etc.). These categories can be efficiently added to the data frame using `psdAdd()` from `FSA`, but `psdAdd()` requires full species names rather than abbreviations. `mapvalues()` from `plyr` is used below to create a new variable with the full names derived from the abbreviations.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndat <- dat |>\n  mutate(species2=plyr::mapvalues(species,\n                                  from=c(\"YCT\",\"UTC\"),\n                                  to=c(\"Cutthroat Trout\",\"Utah Chub\")))\n# just checking\nxtabs(~species+species2,data=dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|         species2\n#R|  species Cutthroat Trout Utah Chub\n#R|      UTC               0     14448\n#R|      YCT            5454         0\n```\n:::\n:::\n\n\nNow the length categories may be added using `species2`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndat <- dat |>\n  mutate(gcat=FSA::psdAdd(len=length,species=species2))\nFSA::headtail(dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|        species year length weight        species2     gcat\n#R|  1         YCT 2002    150     NA Cutthroat Trout substock\n#R|  2         YCT 2002    160     NA Cutthroat Trout substock\n#R|  3         YCT 2002    160     NA Cutthroat Trout substock\n#R|  19900     YCT 2020    391    550 Cutthroat Trout  quality\n#R|  19901     YCT 2020    284    229 Cutthroat Trout    stock\n#R|  19902     YCT 2020    440    853 Cutthroat Trout  quality\n```\n:::\n:::\n\n\n### Computing CPE\nFrom this, the data needs to be summarized to produce the CPE for each species for each year for each length category and for all fish regardless of length category. Development of this data frame will begin by counting the number of fish (i.e., rows) for each length category within each year within each species.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncatch_gcat <- dat |>\n  group_by(species,year,gcat) |>\n  summarize(catch=n())\ncatch_gcat\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|  # A tibble: 162 × 4\n#R|  # Groups:   species, year [36]\n#R|     species  year gcat      catch\n#R|     <chr>   <dbl> <fct>     <int>\n#R|   1 UTC      2003 substock      5\n#R|   2 UTC      2003 stock        41\n#R|   3 UTC      2003 quality      21\n#R|   4 UTC      2003 preferred    15\n#R|   5 UTC      2003 memorable     4\n#R|   6 UTC      2004 substock      2\n#R|   7 UTC      2004 stock       535\n#R|   8 UTC      2004 quality     128\n#R|   9 UTC      2004 preferred    52\n#R|  10 UTC      2004 memorable    11\n#R|  # … with 152 more rows\n```\n:::\n:::\n\n\nNote in the previous output that `catch_gcat` is still \"grouped\" by year within species. Thus, `catch` can summed from this data frame to find the total catch per year for each species.^[Ungroup this data frame as we will not summarize it further.]\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncatch_all <- catch_gcat |>\n  summarize(catch=sum(catch)) |>\n  ungroup()\ncatch_all\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|  # A tibble: 36 × 3\n#R|     species  year catch\n#R|     <chr>   <dbl> <int>\n#R|   1 UTC      2003    86\n#R|   2 UTC      2004   728\n#R|   3 UTC      2005   294\n#R|   4 UTC      2006   424\n#R|   5 UTC      2007   895\n#R|   6 UTC      2008   606\n#R|   7 UTC      2009   512\n#R|   8 UTC      2011   440\n#R|   9 UTC      2012   692\n#R|  10 UTC      2013  1858\n#R|  # … with 26 more rows\n```\n:::\n:::\n\n\nAs Figure 2 displays all fish and fish by length category, these two data frames should be row-bound (i.e., stacked) together. Figure 2 does *not* have panels for \"substock\", \"memorable\", or \"trophy\" sized fish so fish in those length categories were removed from the resultant data frame. Finally, a new variable called `type` was created that has the names from `gcat`, or \"All\" if `gcat` was `NA`^[`gcat` for \"all fish\" after `bind_rows()` was `NA` as `gcat` was not present in `catch_all`].\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncpe_dat <- bind_rows(catch_all,catch_gcat) |>\n  filter(!(gcat %in% c(\"substock\",\"memorable\",\"trophy\"))) |>\n  mutate(type=ifelse(is.na(gcat),\"All\",as.character(gcat)))\nFSA::headtail(cpe_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|      species year catch      gcat      type\n#R|  1       UTC 2003    86      <NA>       All\n#R|  2       UTC 2004   728      <NA>       All\n#R|  3       UTC 2005   294      <NA>       All\n#R|  143     YCT 2020    52     stock     stock\n#R|  144     YCT 2020   132   quality   quality\n#R|  145     YCT 2020    13 preferred preferred\n```\n:::\n:::\n\n\nFinally, these data are `left-join()`ed (by year) with `eff` to add `netNights`, from which a new `cpe` variable is created. `type` was converted to a factor to match the vertical order of Figure 2, and the levels were given longer labels to match the labels in Figure 2. Finally, the variables were re-ordered (and `gcat` was dropped) for personal preference.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncpe_dat <- cpe_dat |>\n  left_join(eff,by=\"year\") |>\n  mutate(cpe=catch/netNights,\n         type=factor(type,levels=c(\"All\",\"stock\",\"quality\",\"preferred\"),\n                     labels=c(\"All fish\",\"Stock to Quality\",\n                              \"Quality to Preferred\",\"Preferred to Memorable\"))) |>\n  select(species,year,type,catch,netNights,cpe)\nFSA::headtail(cpe_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|      species year                   type catch netNights        cpe\n#R|  1       UTC 2003               All fish    86        18  4.7777778\n#R|  2       UTC 2004               All fish   728        50 14.5600000\n#R|  3       UTC 2005               All fish   294        46  6.3913043\n#R|  143     YCT 2020       Stock to Quality    52        30  1.7333333\n#R|  144     YCT 2020   Quality to Preferred   132        30  4.4000000\n#R|  145     YCT 2020 Preferred to Memorable    13        30  0.4333333\n```\n:::\n:::\n\n\nThis data frame, now called `cpe_dat`, is now ready for recreating Figure 2.\n\n### Quick Summaries of CPE\nBefore recreating Figure 2, I summarized the CPE data by species and year for comparison to results in @mccarricketal_2022.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncpe_dat |>\n  filter(type==\"All fish\") |>\n  group_by(species) |>\n  summarize(n=n(),\n            ttlcatch=sum(catch),\n            mncpe=mean(cpe),\n            sdcpe=sd(cpe),\n            mincpe=min(cpe),\n            minyr=year[cpe==mincpe],\n            maxcpe=max(cpe),\n            maxyr=year[cpe==maxcpe])\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|  # A tibble: 2 × 9\n#R|    species     n ttlcatch mncpe sdcpe mincpe minyr maxcpe maxyr\n#R|    <chr>   <int>    <int> <dbl> <dbl>  <dbl> <dbl>  <dbl> <dbl>\n#R|  1 UTC        18    14459 20.0  12.9   0.239  2005   50.5  2008\n#R|  2 YCT        19     5454  7.16  3.48  1.52   2018   15.0  2007\n```\n:::\n:::\n\n\nIn the first paragraph of the results, @mccarricketal_2022 found the overall mean (and SD) CPE was 7.4 (3.6) for YCT and 19.9 (13.0) for UTC, which is close to what I obtained for UTC but not for YTC. In addition, they found a peak CPE of 15.4 for YCT in 2007 and 50.5 for UTC in 2008, again very close to my results for UTC but not that close for YCT. Finally, in the label for Figure 2 they reported 5,524 YCT were captured, whereas my results only show 5,454.\n\n&nbsp;\n\n# Recreating Figure 2\nMy general strategy for recreating Figure 2 was to create the left and right panels of subplots separately and then combine them using `patchwork`. Each side can be constructed via faceting on `type`, but I will use `facet_rep_wrap()` from `lemon` so as to have the x-axis tick marks on each panel.^[See [this post](../2023-3-15-Axis_Magic/#axes-for-each-facet) about `facet_rep_wrap()`.] Each panel will be create with `geom_col()` using `width=1` so that the bars touch and `geom_text()` to place the labels.^[See [this post](../2023-3-18-Rooketal2022_CiscoHarvest/#recreating-figure-2) for more explanation of how to use `geom_text()` in this way.] The x- and y-axes were modified as is commonly done.^[And is described more in [this post](../2023-3-15-Axis_Magic/).] Finally, I used `theme_bw()` as a base, removed the gridlines and removed the facet labels and background.^[As described in [this post](../2023-3-18-Rooketal2022_CiscoHarvest/#recreating-figure-2).] As you examine the code below, make sure to realize that the data was filtered to just \"YCT\".\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nYCT <- ggplot(data=filter(cpe_dat,species==\"YCT\"),\n              mapping=aes(x=year,y=cpe)) +\n  geom_col(color=\"black\",fill=\"gray70\",width=1) +\n  geom_text(mapping=aes(label=type),x=Inf,y=Inf,vjust=1.25,hjust=1.05,\n            check_overlap=TRUE,size=3) +\n  scale_y_continuous(name=\"YCT per net night\",\n                     limits=c(0,16),breaks=scales::breaks_width(2),\n                     expand=expansion(mult=0)) +\n  scale_x_continuous(name=\"Year\",\n                     limits=c(2000,2022),breaks=scales::breaks_width(2),\n                     expand=expansion(mult=0)) +\n  lemon::facet_rep_wrap(vars(type),ncol=1) +\n  theme_bw() +\n  theme(panel.grid=element_blank(),\n        strip.background=element_blank(),\n        strip.text=element_blank())\nYCT\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/make-fig2-YCT-1.png){fig-align='center' width=432}\n:::\n:::\n\n\nThe code above was largely repeated but with data filtered to just \"UTC\" and adjusting the y-axis accordingly. The plot is not shown here but is the right side in the plot further below.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nUTC <- ggplot(data=filter(cpe_dat,species==\"UTC\"),mapping=aes(x=year,y=cpe)) +\n  geom_col(color=\"black\",fill=\"gray70\",width=1) +\n  geom_text(mapping=aes(label=type),x=Inf,y=Inf,vjust=1.25,hjust=1.05,\n            check_overlap=TRUE,size=3) +\n  scale_y_continuous(name=\"UTC per net night\",\n                     limits=c(0,60),breaks=scales::breaks_width(10),\n                     expand=expansion(mult=0)) +\n  scale_x_continuous(name=\"Year\",\n                     limits=c(2000,2022),breaks=scales::breaks_width(2),\n                     expand=expansion(mult=0)) +\n  lemon::facet_rep_wrap(vars(type),ncol=1) +\n  theme_bw() +\n  theme(panel.grid=element_blank(),\n        strip.background=element_blank(),\n        strip.text=element_blank())\n```\n:::\n\n\nThe two subplots are then placed side-by-side.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nYCT + UTC\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/make-fig2-1.png){fig-align='center' width=864}\n:::\n:::\n\n\n&nbsp;\n\n# Further Thoughts\nI wanted to see if I could make a similar looking plot using `facet_grid()`. It turns out to be a bit of a challenge because each panel on the left- and right-sides has the same y-axis, but those axes differ between the two sides. I found a way around this.\n\nFirst, I changed species to a factor with \"YCT\" in the first position so it would be plotted on the left (i.e., first). I also gave the levels longer labels so that the facets would have useful labels.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncpe_dat <- cpe_dat |>\n  mutate(species=factor(species,levels=c(\"YCT\",\"UTC\"),\n                        labels=c(\"Yellowstone Cutthroat Trout\",\"Utah Chub\")))\n```\n:::\n\n\nThe y-axis needs to be defined for **each** facet. However, these definitions should be constant within `species`. Thus, I define limits and breaks for both `YCT` and `UTC` and saved them as objects. In addition, to save typing, I also defined the expansion factor as an object.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nYCT_lmts <- c(0,16)\nYCT_brks <- scales::breaks_width(2)\nUTC_lmts <- c(0,60)\nUTC_brks <- scales::breaks_width(10)\nyexp <- expansion(mult=0)\n```\n:::\n\n\nThe basic plot uses the same `ggplot()` (except the data is not filtered), `geom_col()`, `scale_x_continous()`, and `theme_bw()` as before. The `geom_text()` has been eliminated because the \"type\" labels are going to be in the facet labels rather than \"on the plot.\" The part of `theme()` that removed the facet labels has been eliminated as facet labels are needed here. The spacing between panels was increased in `theme()` here. `facet_rep_wrap()` was replaced with `facet_grid2()` from `ggh4x`, where the rows are defined by `type`, the columns are defined by `species`, the y-axes are \"free\" and \"independent\" from facet to facet.^[The `independent=\"y\"` part is the main thing that `facet_grid2()` adds over `facet_grid()` from `ggplot2`.] Finally, `facetted_pos_scales()` from `ggh4x` is used to apply a different `scale_y_continous()` to each panel.^[`facetted_pos_scales()` is described in more detail in [this post](../2023-3-15-Axis_Magic/#axis-limits-for-each-facet).]\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=cpe_dat,mapping=aes(x=year,y=cpe)) +\n  geom_col(color=\"black\",fill=\"gray70\",width=1) +\n  scale_x_continuous(name=\"Year\",\n                     limits=c(2000,2022),breaks=scales::breaks_width(2),\n                     expand=expansion(mult=0)) +\n  ggh4x::facet_grid2(rows=vars(type),cols=vars(species),\n                     scales=\"free_y\",independent=\"y\") +\n  theme_bw() +\n  theme(panel.grid=element_blank(),\n        panel.spacing=unit(10,units=\"pt\")) +\n  ggh4x::facetted_pos_scales(\n    y=list(\n      scale_y_continuous(name=\"# Fish per net night\",\n                         limits=YCT_lmts,breaks=YCT_brks,expand=yexp),\n      scale_y_continuous(limits=UTC_lmts,breaks=UTC_brks,expand=yexp),\n      scale_y_continuous(limits=YCT_lmts,breaks=YCT_brks,expand=yexp),\n      scale_y_continuous(limits=UTC_lmts,breaks=UTC_brks,expand=yexp),\n      scale_y_continuous(limits=YCT_lmts,breaks=YCT_brks,expand=yexp),\n      scale_y_continuous(limits=UTC_lmts,breaks=UTC_brks,expand=yexp),\n      scale_y_continuous(limits=YCT_lmts,breaks=YCT_brks,expand=yexp),\n      scale_y_continuous(limits=UTC_lmts,breaks=UTC_brks,expand=yexp)\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/make-fig2-alt-1.png){fig-align='center' width=864}\n:::\n:::\n\n\n\n&nbsp;\n\n\n::: {.cell layout-align=\"center\"}\n\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}