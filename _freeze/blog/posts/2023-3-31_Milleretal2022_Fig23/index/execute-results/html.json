{
  "hash": "0bad01ad89134bfb3694dac50418f61a",
  "result": {
    "markdown": "---\ntitle: Miller et al. (2022) Size Plots\ndescription: Using ggplot2 to recreate the length frequency histogram and weight-length relationships plots in Miller et al. (2022).\nauthor: Derek H. Ogle\ndate: 3/31/2023\nimage: preview.png\ncategories:\n  - Length Frequency\n  - Size Structure\n  - Weight-Length\n  - Linear Regression\n  - ggplot2\n  - line plot\n  - histogram\n  - annotations\n  - labels\n---\n\n\n:::{.callout-important}\n## Series Note\nThis is the second of several posts related to @milleretal_2022. I thank the authors for making their data available with their publication.\n:::\n\n# Introduction\n@milleretal_2022 examined life history characteristics of Goldeye (*Hiodon alosoides*) in two Kansas reservoirs. Their [Figure 2](https://meridian.allenpress.com/view-large/figure/14538579/i1944-687X-13-1-243-f02.tif) and [Figure 3](https://meridian.allenpress.com/view-large/figure/14538580/i1944-687X-13-1-243-f03.tif) examined the length frequency and weight-length relationship of Goldeye captured in Milford Reservoir in 2020. I use `ggplot2` here to recreate both figures.\n\nThe following packages are loaded for use below. A few functions from each of `readxl`, `FSA`, and `scales` are used with `::` such that the entire packages are not attached here.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)  # for dplyr, ggplot2 packages\nlibrary(ggtext)     # for use of markdown in text/labels\n```\n:::\n\n\n&nbsp;\n\n# Data Wrangling\n@milleretal_2022 provided the raw data for producing Figures 2 and 3 in their Data Supplement S2, which I loaded below.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndat <- read.csv(\"JFWM-21-090.S2.csv\")\nhead(dat,n=8)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|    netid  tl   w agecap ann bclen\n#R|  1     6 385 521      6   1   210\n#R|  2     6 385 521      6   2   264\n#R|  3     6 385 521      6   3   299\n#R|  4     6 385 521      6   4   329\n#R|  5     6 385 521      6   5   358\n#R|  6     6 385 521      6   6   378\n#R|  7     6 357 466      4   1   213\n#R|  8     6 357 466      4   2   262\n```\n:::\n:::\n\n\nThe first six rows above all have the same `tl`, `w`, and `age` because these variables were repeated for each of the six observed annuli on this fish's otoliths. To construct a proper length frequency and weight-length relationship, the data need to be reduced to only one observation of `tl` and `w` per fish. Thus, below, only records that corresponded to the first `ann`ulus are retained. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndat2 <- dat |>\n  filter(ann==1)\nhead(dat2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|    netid  tl   w agecap ann bclen\n#R|  1     6 385 521      6   1   210\n#R|  2     6 357 466      4   1   213\n#R|  3     6 397 725      5   1   209\n#R|  4     8 393 610      8   1   202\n#R|  5     8 373 571      4   1   193\n#R|  6     8 389 656      6   1   163\n```\n:::\n:::\n\n\nTotal length of these fish was summarized below.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsumtl <- dat2 |>\n  summarize(n=n(),\n            mdnTL=median(tl,na.rm=TRUE),\n            minTL=min(tl,na.rm=TRUE),\n            maxTL=max(tl,na.rm=TRUE))\nsumtl\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|      n mdnTL minTL maxTL\n#R|  1 152   268   235   431\n```\n:::\n:::\n\n\nThese results match the summary results in the paragraph above Figure 2 in @milleretal_2022. These data are ready to recreate Figures 2 and 3.\n\n&nbsp;\n\n# Recreating Figure 2\nFigure 2 is a histogram of total length, which can be created with `geom_histogram()` with `tl` mapped to the x-axis. Bin widths of 10 mm that started on 0 mm and were closed on the left, as is typical for most fisheries applications, were used.^[Making histograms in `ggplot2` was discussed in detail in [this post](../2019-12-28_Length_Frequency_Histograms/).] It is difficult to discern what the authors did with respect to these arguments but my result is at least close to theirs.^[Curiously all of their bars seem shifted left by about 5 mm; this is most noticeable at 350 mm.]\n\nTo try to match the authors' other choices I named, set limits, and defined breaks for both axes; removed the lower expansion for the y-axis so the bars did not hover about the x-axis and reduced the other expansion factors for both axes; applied the black-and-white theme; increased the font size and bolded the axis titles and tick mark labels; changed the tick mark labels to black; and used `annotate()` to add the sample size label in the upper-left corner.^[Adding labels such as these was discussed in more detail in [this post](../2023-3-10-Text_Annotation_Position/).]\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=dat2,mapping=aes(x=tl)) +\n  geom_histogram(binwidth=10,boundary=0,closed=\"left\") +\n  scale_y_continuous(name=\"Count\",\n                     limits=c(0,50),breaks=scales::breaks_width(10),\n                     expand=expansion(mult=c(0,0.01))) +\n  scale_x_continuous(name=\"Total Length (mm)\",limits=c(200,450),\n                     breaks=scales::breaks_width(50),\n                     expand=expansion(mult=0.02)) +\n  theme_bw() +\n  theme(panel.grid=element_blank(),\n        axis.title=element_text(size=12,face=\"bold\"),\n        axis.text=element_text(size=10,face=\"bold\",color=\"black\")) +\n  annotate(geom=\"text\",label=paste(\"N =\",sumtl$n),x=-Inf,y=Inf,vjust=1.5,hjust=-0.2,\n           size=12/.pt,fontface=\"bold\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/make-fig2-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n### Possible Modifications\nI find the use of a solid fill color with no delineation of the actual bars to be difficult on the eyes. I personally like to outline the bars with `color=\"black\"` and then fill the bars with `fill=` set to some version of gray in `geom_histogram()`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=dat2,mapping=aes(x=tl)) +\n  geom_histogram(binwidth=10,boundary=0,closed=\"left\",\n                 color=\"black\",fill=\"gray60\") +\n  scale_y_continuous(name=\"Count\",\n                     limits=c(0,50),breaks=scales::breaks_width(10),\n                     expand=expansion(mult=c(0,0.01))) +\n  scale_x_continuous(name=\"Total Length (mm)\",limits=c(200,450),\n                     breaks=scales::breaks_width(50),\n                     expand=expansion(mult=0.02)) +\n  theme_bw() +\n  theme(panel.grid=element_blank(),\n        axis.title=element_text(size=12,face=\"bold\"),\n        axis.text=element_text(size=10,face=\"bold\",color=\"black\")) +\n  annotate(geom=\"text\",label=paste(\"N =\",sumtl$n),x=-Inf,y=Inf,vjust=1.5,hjust=-0.2,\n           size=12/.pt,fontface=\"bold\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/make-fig2-alt-1.png){fig-align='center' width=480}\n:::\n:::\n\n\nIf you really like the dark fill then I would outline the bars with a lighter color.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=dat2,mapping=aes(x=tl)) +\n  geom_histogram(binwidth=10,boundary=0,closed=\"left\",\n                 color=\"gray60\",fill=\"gray20\") +\n  scale_y_continuous(name=\"Count\",\n                     limits=c(0,50),breaks=scales::breaks_width(10),\n                     expand=expansion(mult=c(0,0.01))) +\n  scale_x_continuous(name=\"Total Length (mm)\",limits=c(200,450),\n                     breaks=scales::breaks_width(50),\n                     expand=expansion(mult=0.02)) +\n  theme_bw() +\n  theme(panel.grid=element_blank(),\n        axis.title=element_text(size=12,face=\"bold\"),\n        axis.text=element_text(size=10,face=\"bold\",color=\"black\")) +\n  annotate(geom=\"text\",label=paste(\"N =\",sumtl$n),x=-Inf,y=Inf,vjust=1.5,hjust=-0.2,\n           size=12/.pt,fontface=\"bold\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/make-fig2-alt2-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n&nbsp;\n\n# Recreating Figure 3\nFigure 3 is a scatterplot of weight versus length, with a best-fit regression line overlaid. The authors used a log-scale for both axes rather than plotting the log-transformed data. The basic scatterplot is constructed with `geom_point()` with the appropriate variables mapped to their respective axes. The authors used points that were outlined in black and semi-transparent in the middle. Circles with separate outline and fill colors are made with `shape=21`, with the outline color in `color=` and the fill color in `fill=`. `col2rgbt()` from `FSA` adds a transparency value (the second argument) to a named color.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=dat2,mapping=aes(x=tl,y=w)) +\n  geom_point(shape=21,color=\"black\",fill=FSA::col2rgbt(\"black\",0.5)) +\n  theme_bw() +\n  theme(panel.grid=element_blank(),\n        axis.title=element_text(size=12,face=\"bold\"),\n        axis.text=element_text(size=10,face=\"bold\",color=\"black\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/make-fig3-1-1.png){fig-align='center' width=480}\n:::\n:::\n\n\nLog-scales can be created in a variety of ways, but I prefer to use `trans=log10` in `scale_(x|y)_continuous()`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=dat2,mapping=aes(x=tl,y=w)) +\n  geom_point(shape=21,color=\"black\",fill=FSA::col2rgbt(\"black\",0.5)) +\n  scale_x_continuous(name=\"Total Length (mm)\",trans=\"log10\",\n                     limits=c(220,440),breaks=scales::breaks_width(20),\n                     expand=expansion(mult=0.02)) +\n  scale_y_continuous(name=\"Mass (g)\",trans=\"log10\",\n                     limits=c(100,800),breaks=scales::breaks_width(100),\n                     expand=expansion(mult=0.02)) +\n  theme_bw() +\n  theme(panel.grid=element_blank(),\n        axis.title=element_text(size=12,face=\"bold\"),\n        axis.text=element_text(size=10,face=\"bold\",color=\"black\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/make-fig3-2-1.png){fig-align='center' width=480}\n:::\n:::\n\n\nThe linear regression line is added with `geom_smooth()` using `method=\"lm\"`,^[The default is to use a loess model.] `se=FALSE` to suppress showing the confidence band, and `color=\"black\"` to show the line in black.^[The default is blue.] Because `trans=\"log10\"` was used for both scales, the regression will be performed with log-transformed lengths and weights. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=dat2,mapping=aes(x=tl,y=w)) +\n  geom_smooth(method=\"lm\",se=FALSE,color=\"black\") +\n  geom_point() +\n  scale_x_continuous(name=\"Total Length (mm)\",trans=\"log10\",\n                     limits=c(220,440),breaks=scales::breaks_width(20),\n                     expand=expansion(mult=0.02)) +\n  scale_y_continuous(name=\"Mass (g)\",trans=\"log10\",\n                     limits=c(100,800),breaks=scales::breaks_width(100),\n                     expand=expansion(mult=0.02)) +\n  theme_bw() +\n  theme(panel.grid=element_blank(),\n        axis.title=element_text(size=12,face=\"bold\"),\n        axis.text=element_text(size=10,face=\"bold\",color=\"black\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/make-fig3-3-1.png){fig-align='center' width=480}\n:::\n:::\n\n\nCreating the regression results labels is similar to that shown in [this previous post](../2023-3-29_Milleretal2022_Fig1/#reservoir-and-regression-result-labels). The regression must be performed on the log-log scale and, thus, variables for the log of weight and length are added to the data frame.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndat2 <- dat2 |>\n  mutate(logtl=log10(tl),\n         logw=log10(w))\n```\n:::\n\n\nThe regression is then fit and the summarized results saved to an object called `tmp`. The r^2^, intercept (stored in `b`), and slope (in `m`) are extracted and assigned to objects. Each was rounded to two decimals to match the authors' choices.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntmp <- summary(lm(logw~logtl,data=dat2))\n( r2 <- round(tmp$r.squared,2) )\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|  [1] 0.98\n```\n:::\n\n```{.r .cell-code}\n( b <- round(tmp$coefficients[\"(Intercept)\",\"Estimate\"],2) )\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|  [1] -4.38\n```\n:::\n\n```{.r .cell-code}\n( m <- round(tmp$coefficients[\"logtl\",\"Estimate\"],2) )\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|  [1] 2.75\n```\n:::\n:::\n\n\nThese results are then turned into labels using markdown language code. Recall that text wrapped in `*` or `<emph>`will be italicized, text wrapped in `^` or `<sup>` will be superscripted, and text wrapped in `~` or `<sub>` will be subscripted.^[I had inconsistent problems using `^` in the equation so I used `<sup>` here.] The `&times;` is specific code to produce the &times; symbol. `paste0` pastes text together with no separation between the provided parts.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nr2 <- paste0(\"*r*^2^ = \",r2)\neqn1 <- paste0(\"Mass = 10<sup>(\",b,\"+\",m,\"&times;log~10~TL)</sup>\")\n```\n:::\n\n\nThese labels are then added to the plot with `annotate()` using `geom=\"richtext\"` so that the markdown language code will be rendered appropriately. Note that `Inf` does not work well with `trans=\"log10\"` so the `x=` and `y=` coordinates had to be specified.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=dat2,mapping=aes(x=tl,y=w)) +\n  geom_smooth(method=\"lm\",se=FALSE,color=\"black\") +\n  geom_point() +\n  scale_x_continuous(name=\"Total Length (mm)\",trans=\"log10\",\n                     limits=c(220,440),breaks=scales::breaks_width(20),\n                     expand=expansion(mult=0.02)) +\n  scale_y_continuous(name=\"Mass (g)\",trans=\"log10\",\n                     limits=c(100,800),breaks=scales::breaks_width(100),\n                     expand=expansion(mult=0.02)) +\n  theme_bw() +\n  theme(panel.grid=element_blank(),\n        axis.title=element_text(size=12,face=\"bold\"),\n        axis.text=element_text(size=10,face=\"bold\",color=\"black\")) +\n  annotate(geom=\"richtext\",x=220,y=800,vjust=1,hjust=0,label=r2,\n           label.color=NA,fontface=\"bold\") +\n  annotate(geom=\"richtext\",x=220,y=800,vjust=2,hjust=0,label=eqn1,\n           label.color=NA,fontface=\"bold\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/make-fig3-4-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n### Possible Modifications\nThe equation of the regression is presented oddly in the sense that the left-hand-side is on the original mass scale but the right-hand-side shows log-transformed length but has that in a superscript of 10 suggesting a back-transformation to the original scale. If the actual values of the intercept and slope on the transformed scale are important for some reason then I suggest showing the results as a fully-transformed (linear) model. However, if the idea is to show the power function on the original scale then I suggest fully back-transforming the right-hand-side. Below I show this second option. Note that `formatC()` is used with `format=\"f\"` so that the back-transformed intercept is not presented in scientific notation.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n( bb <- formatC(10^(tmp$coefficients[\"(Intercept)\",\"Estimate\"]),format=\"f\",digits=6))\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.output}\n#R|  [1] \"0.000041\"\n```\n:::\n\n```{.r .cell-code}\neqn2 <- paste0(\"Mass = \",bb,\"TL<sup>\",m,\"</sup>\")\n```\n:::\n\n\nIt is not really that important, but it seems odd to me to have the r^2^ above the model equation. Thus, I switched these two below.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=dat2,mapping=aes(x=tl,y=w)) +\n  geom_smooth(method=\"lm\",se=FALSE,color=\"black\") +\n  geom_point() +\n  scale_x_continuous(name=\"Total Length (mm)\",trans=\"log10\",\n                     limits=c(220,440),breaks=scales::breaks_width(20),\n                     expand=expansion(mult=0.02)) +\n  scale_y_continuous(name=\"Mass (g)\",trans=\"log10\",\n                     limits=c(100,800),breaks=scales::breaks_width(100),\n                     expand=expansion(mult=0.02)) +\n  theme_bw() +\n  theme(panel.grid=element_blank(),\n        axis.title=element_text(size=12,face=\"bold\"),\n        axis.text=element_text(size=10,face=\"bold\",color=\"black\")) +\n  annotate(geom=\"richtext\",x=220,y=800,vjust=1,hjust=0,label=eqn2,\n           label.color=NA,fontface=\"bold\") +\n  annotate(geom=\"richtext\",x=220,y=800,vjust=2,hjust=0,label=r2,\n           label.color=NA,fontface=\"bold\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/make-fig3-5-1.png){fig-align='center' width=480}\n:::\n:::\n\n\nThe authors presented a confidence band in their Figure 5 and I showed how to add one to their Figure 1 in [this post](../2023-3-29_Milleretal2022_Fig1/#confidence-band). As I said there, for the purposes of consistency I would add a confidence band to this plot as well by simply removing `se=FALSE` from `geom_smooth()`.^[The regression line is so strong that the confidence band is barely noticeable.]\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=dat2,mapping=aes(x=tl,y=w)) +\n  geom_smooth(method=\"lm\",color=\"black\") +\n  geom_point() +\n  scale_x_continuous(name=\"Total Length (mm)\",trans=\"log10\",\n                     limits=c(220,440),breaks=scales::breaks_width(20),\n                     expand=expansion(mult=0.02)) +\n  scale_y_continuous(name=\"Mass (g)\",trans=\"log10\",\n                     limits=c(100,800),breaks=scales::breaks_width(100),\n                     expand=expansion(mult=0.02)) +\n  theme_bw() +\n  theme(panel.grid=element_blank(),\n        axis.title=element_text(size=12,face=\"bold\"),\n        axis.text=element_text(size=10,face=\"bold\",color=\"black\")) +\n  annotate(geom=\"richtext\",x=220,y=800,vjust=1,hjust=0,label=eqn2,\n           label.color=NA,fontface=\"bold\") +\n  annotate(geom=\"richtext\",x=220,y=800,vjust=2,hjust=0,label=r2,\n           label.color=NA,fontface=\"bold\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/make-fig3-6-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n&nbsp;\n\n\n::: {.cell layout-align=\"center\"}\n\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}